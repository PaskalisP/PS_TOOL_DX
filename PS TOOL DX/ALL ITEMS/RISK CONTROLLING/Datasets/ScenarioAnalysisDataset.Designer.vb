'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ScenarioAnalysisDataset"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ScenarioAnalysisDataset
    Inherits Global.System.Data.DataSet
    
    Private tableSCENARIO_ANALYZES_DATE As SCENARIO_ANALYZES_DATEDataTable
    
    Private tableScenarioAnalyze_ConcentrationRiskCHINA_Date As ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable
    
    Private tableScenarioAnalyze_ConcentrationRiskCHINA_Details As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable
    
    Private tableScenarioAnalyze_ConcentrationRiskCHINA_Totals As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable
    
    Private tableScenarioAnalyze_ConcentrationRiskTBA_Date As ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable
    
    Private tableScenarioAnalyze_ConcentrationRiskTBA_Details As ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable
    
    Private tableScenarioAnalyze_ConcentrationRiskTBA_Totals As ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable
    
    Private tableScenarioAnalyze_GeneralStressTest_Date As ScenarioAnalyze_GeneralStressTest_DateDataTable
    
    Private tableScenarioAnalyze_GeneralStressTest_Details As ScenarioAnalyze_GeneralStressTest_DetailsDataTable
    
    Private tableScenarioAnalyze_GeneralStressTest_Totals As ScenarioAnalyze_GeneralStressTest_TotalsDataTable
    
    Private tableScenarioAnalyze_GeneralStressTest_DetailsALL As ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable
    
    Private tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable
    
    Private tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable
    
    Private relationFK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE As Global.System.Data.DataRelation
    
    Private relationFK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals As Global.System.Data.DataRelation
    
    Private relationFK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date As Global.System.Data.DataRelation
    
    Private relationFK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE As Global.System.Data.DataRelation
    
    Private relationFK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals As Global.System.Data.DataRelation
    
    Private relationFK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date As Global.System.Data.DataRelation
    
    Private relationFK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE As Global.System.Data.DataRelation
    
    Private relationFK_ScenarioAnalyze_GeneralStressTest_Details_Totals As Global.System.Data.DataRelation
    
    Private relationFK_ScenarioAnalyze_GeneralStressTest_Totals_Date As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SCENARIO_ANALYZES_DATE")) Is Nothing) Then
                MyBase.Tables.Add(New SCENARIO_ANALYZES_DATEDataTable(ds.Tables("SCENARIO_ANALYZES_DATE")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Date")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Date")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Details")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Details")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Totals")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Totals")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Date")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Date")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Details")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Details")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Totals")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Totals")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_GeneralStressTest_Date")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_GeneralStressTest_DateDataTable(ds.Tables("ScenarioAnalyze_GeneralStressTest_Date")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_GeneralStressTest_Details")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_GeneralStressTest_DetailsDataTable(ds.Tables("ScenarioAnalyze_GeneralStressTest_Details")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_GeneralStressTest_Totals")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_GeneralStressTest_TotalsDataTable(ds.Tables("ScenarioAnalyze_GeneralStressTest_Totals")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_GeneralStressTest_DetailsALL")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable(ds.Tables("ScenarioAnalyze_GeneralStressTest_DetailsALL")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_DetailsALL")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_DetailsALL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SCENARIO_ANALYZES_DATE() As SCENARIO_ANALYZES_DATEDataTable
        Get
            Return Me.tableSCENARIO_ANALYZES_DATE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ScenarioAnalyze_ConcentrationRiskCHINA_Date() As ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable
        Get
            Return Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ScenarioAnalyze_ConcentrationRiskCHINA_Details() As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable
        Get
            Return Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ScenarioAnalyze_ConcentrationRiskCHINA_Totals() As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable
        Get
            Return Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ScenarioAnalyze_ConcentrationRiskTBA_Date() As ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable
        Get
            Return Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ScenarioAnalyze_ConcentrationRiskTBA_Details() As ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable
        Get
            Return Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ScenarioAnalyze_ConcentrationRiskTBA_Totals() As ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable
        Get
            Return Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ScenarioAnalyze_GeneralStressTest_Date() As ScenarioAnalyze_GeneralStressTest_DateDataTable
        Get
            Return Me.tableScenarioAnalyze_GeneralStressTest_Date
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ScenarioAnalyze_GeneralStressTest_Details() As ScenarioAnalyze_GeneralStressTest_DetailsDataTable
        Get
            Return Me.tableScenarioAnalyze_GeneralStressTest_Details
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ScenarioAnalyze_GeneralStressTest_Totals() As ScenarioAnalyze_GeneralStressTest_TotalsDataTable
        Get
            Return Me.tableScenarioAnalyze_GeneralStressTest_Totals
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ScenarioAnalyze_GeneralStressTest_DetailsALL() As ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable
        Get
            Return Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL() As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable
        Get
            Return Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ScenarioAnalyze_ConcentrationRiskTBA_DetailsAll() As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable
        Get
            Return Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ScenarioAnalysisDataset = CType(MyBase.Clone,ScenarioAnalysisDataset)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("SCENARIO_ANALYZES_DATE")) Is Nothing) Then
                MyBase.Tables.Add(New SCENARIO_ANALYZES_DATEDataTable(ds.Tables("SCENARIO_ANALYZES_DATE")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Date")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Date")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Details")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Details")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Totals")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Totals")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Date")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Date")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Details")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Details")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Totals")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Totals")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_GeneralStressTest_Date")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_GeneralStressTest_DateDataTable(ds.Tables("ScenarioAnalyze_GeneralStressTest_Date")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_GeneralStressTest_Details")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_GeneralStressTest_DetailsDataTable(ds.Tables("ScenarioAnalyze_GeneralStressTest_Details")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_GeneralStressTest_Totals")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_GeneralStressTest_TotalsDataTable(ds.Tables("ScenarioAnalyze_GeneralStressTest_Totals")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_GeneralStressTest_DetailsALL")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable(ds.Tables("ScenarioAnalyze_GeneralStressTest_DetailsALL")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL")))
            End If
            If (Not (ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_DetailsALL")) Is Nothing) Then
                MyBase.Tables.Add(New ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable(ds.Tables("ScenarioAnalyze_ConcentrationRiskTBA_DetailsALL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSCENARIO_ANALYZES_DATE = CType(MyBase.Tables("SCENARIO_ANALYZES_DATE"),SCENARIO_ANALYZES_DATEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSCENARIO_ANALYZES_DATE) Is Nothing) Then
                Me.tableSCENARIO_ANALYZES_DATE.InitVars
            End If
        End If
        Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date = CType(MyBase.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Date"),ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date) Is Nothing) Then
                Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.InitVars
            End If
        End If
        Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details = CType(MyBase.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Details"),ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details) Is Nothing) Then
                Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.InitVars
            End If
        End If
        Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals = CType(MyBase.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_Totals"),ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals) Is Nothing) Then
                Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.InitVars
            End If
        End If
        Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date = CType(MyBase.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Date"),ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date) Is Nothing) Then
                Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.InitVars
            End If
        End If
        Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details = CType(MyBase.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Details"),ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details) Is Nothing) Then
                Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.InitVars
            End If
        End If
        Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals = CType(MyBase.Tables("ScenarioAnalyze_ConcentrationRiskTBA_Totals"),ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals) Is Nothing) Then
                Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.InitVars
            End If
        End If
        Me.tableScenarioAnalyze_GeneralStressTest_Date = CType(MyBase.Tables("ScenarioAnalyze_GeneralStressTest_Date"),ScenarioAnalyze_GeneralStressTest_DateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableScenarioAnalyze_GeneralStressTest_Date) Is Nothing) Then
                Me.tableScenarioAnalyze_GeneralStressTest_Date.InitVars
            End If
        End If
        Me.tableScenarioAnalyze_GeneralStressTest_Details = CType(MyBase.Tables("ScenarioAnalyze_GeneralStressTest_Details"),ScenarioAnalyze_GeneralStressTest_DetailsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableScenarioAnalyze_GeneralStressTest_Details) Is Nothing) Then
                Me.tableScenarioAnalyze_GeneralStressTest_Details.InitVars
            End If
        End If
        Me.tableScenarioAnalyze_GeneralStressTest_Totals = CType(MyBase.Tables("ScenarioAnalyze_GeneralStressTest_Totals"),ScenarioAnalyze_GeneralStressTest_TotalsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableScenarioAnalyze_GeneralStressTest_Totals) Is Nothing) Then
                Me.tableScenarioAnalyze_GeneralStressTest_Totals.InitVars
            End If
        End If
        Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL = CType(MyBase.Tables("ScenarioAnalyze_GeneralStressTest_DetailsALL"),ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL) Is Nothing) Then
                Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.InitVars
            End If
        End If
        Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL = CType(MyBase.Tables("ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL"),ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL) Is Nothing) Then
                Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.InitVars
            End If
        End If
        Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll = CType(MyBase.Tables("ScenarioAnalyze_ConcentrationRiskTBA_DetailsALL"),ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable)
        If (initTable = true) Then
            If (Not (Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll) Is Nothing) Then
                Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.InitVars
            End If
        End If
        Me.relationFK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE = Me.Relations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE")
        Me.relationFK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals = Me.Relations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals")
        Me.relationFK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date = Me.Relations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date")
        Me.relationFK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE = Me.Relations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE")
        Me.relationFK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals = Me.Relations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals")
        Me.relationFK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date = Me.Relations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date")
        Me.relationFK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE = Me.Relations("FK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE")
        Me.relationFK_ScenarioAnalyze_GeneralStressTest_Details_Totals = Me.Relations("FK_ScenarioAnalyze_GeneralStressTest_Details_Totals")
        Me.relationFK_ScenarioAnalyze_GeneralStressTest_Totals_Date = Me.Relations("FK_ScenarioAnalyze_GeneralStressTest_Totals_Date")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ScenarioAnalysisDataset"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ScenarioAnalysisDataset.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSCENARIO_ANALYZES_DATE = New SCENARIO_ANALYZES_DATEDataTable()
        MyBase.Tables.Add(Me.tableSCENARIO_ANALYZES_DATE)
        Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date = New ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable()
        MyBase.Tables.Add(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date)
        Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details = New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable()
        MyBase.Tables.Add(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details)
        Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals = New ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable()
        MyBase.Tables.Add(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals)
        Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date = New ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable()
        MyBase.Tables.Add(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date)
        Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details = New ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable()
        MyBase.Tables.Add(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details)
        Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals = New ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable()
        MyBase.Tables.Add(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals)
        Me.tableScenarioAnalyze_GeneralStressTest_Date = New ScenarioAnalyze_GeneralStressTest_DateDataTable()
        MyBase.Tables.Add(Me.tableScenarioAnalyze_GeneralStressTest_Date)
        Me.tableScenarioAnalyze_GeneralStressTest_Details = New ScenarioAnalyze_GeneralStressTest_DetailsDataTable()
        MyBase.Tables.Add(Me.tableScenarioAnalyze_GeneralStressTest_Details)
        Me.tableScenarioAnalyze_GeneralStressTest_Totals = New ScenarioAnalyze_GeneralStressTest_TotalsDataTable()
        MyBase.Tables.Add(Me.tableScenarioAnalyze_GeneralStressTest_Totals)
        Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL = New ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable()
        MyBase.Tables.Add(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL)
        Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL = New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable()
        MyBase.Tables.Add(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL)
        Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll = New ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable()
        MyBase.Tables.Add(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll)
        Me.relationFK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE = New Global.System.Data.DataRelation("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE", New Global.System.Data.DataColumn() {Me.tableSCENARIO_ANALYZES_DATE.IDColumn}, New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.IdDateColumn}, false)
        Me.Relations.Add(Me.relationFK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE)
        Me.relationFK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals = New Global.System.Data.DataRelation("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals", New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.IDColumn}, New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.IdClientGroupColumn}, false)
        Me.Relations.Add(Me.relationFK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals)
        Me.relationFK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date = New Global.System.Data.DataRelation("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date", New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.IDColumn}, New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.IdDateColumn}, false)
        Me.Relations.Add(Me.relationFK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date)
        Me.relationFK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE = New Global.System.Data.DataRelation("FK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE", New Global.System.Data.DataColumn() {Me.tableSCENARIO_ANALYZES_DATE.IDColumn}, New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.IdDateColumn}, false)
        Me.Relations.Add(Me.relationFK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE)
        Me.relationFK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals = New Global.System.Data.DataRelation("FK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals", New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.IDColumn}, New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.IdClientGroupColumn}, false)
        Me.Relations.Add(Me.relationFK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals)
        Me.relationFK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date = New Global.System.Data.DataRelation("FK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date", New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.IDColumn}, New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.IdDateColumn}, false)
        Me.Relations.Add(Me.relationFK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date)
        Me.relationFK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE = New Global.System.Data.DataRelation("FK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE", New Global.System.Data.DataColumn() {Me.tableSCENARIO_ANALYZES_DATE.IDColumn}, New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_GeneralStressTest_Date.IdDateColumn}, false)
        Me.Relations.Add(Me.relationFK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE)
        Me.relationFK_ScenarioAnalyze_GeneralStressTest_Details_Totals = New Global.System.Data.DataRelation("FK_ScenarioAnalyze_GeneralStressTest_Details_Totals", New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_GeneralStressTest_Totals.IDColumn}, New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_GeneralStressTest_Details.IdClientGroupColumn}, false)
        Me.Relations.Add(Me.relationFK_ScenarioAnalyze_GeneralStressTest_Details_Totals)
        Me.relationFK_ScenarioAnalyze_GeneralStressTest_Totals_Date = New Global.System.Data.DataRelation("FK_ScenarioAnalyze_GeneralStressTest_Totals_Date", New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_GeneralStressTest_Date.IDColumn}, New Global.System.Data.DataColumn() {Me.tableScenarioAnalyze_GeneralStressTest_Totals.IdDateColumn}, false)
        Me.Relations.Add(Me.relationFK_ScenarioAnalyze_GeneralStressTest_Totals_Date)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSCENARIO_ANALYZES_DATE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeScenarioAnalyze_ConcentrationRiskCHINA_Date() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeScenarioAnalyze_ConcentrationRiskCHINA_Details() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeScenarioAnalyze_ConcentrationRiskCHINA_Totals() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeScenarioAnalyze_ConcentrationRiskTBA_Date() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeScenarioAnalyze_ConcentrationRiskTBA_Details() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeScenarioAnalyze_ConcentrationRiskTBA_Totals() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeScenarioAnalyze_GeneralStressTest_Date() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeScenarioAnalyze_GeneralStressTest_Details() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeScenarioAnalyze_GeneralStressTest_Totals() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeScenarioAnalyze_GeneralStressTest_DetailsALL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeScenarioAnalyze_ConcentrationRiskTBA_DetailsAll() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SCENARIO_ANALYZES_DATERowChangeEventHandler(ByVal sender As Object, ByVal e As SCENARIO_ANALYZES_DATERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangeEventHandler(ByVal sender As Object, ByVal e As ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangeEventHandler(ByVal sender As Object, ByVal e As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangeEventHandler(ByVal sender As Object, ByVal e As ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangeEventHandler(ByVal sender As Object, ByVal e As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ScenarioAnalyze_GeneralStressTest_DateRowChangeEventHandler(ByVal sender As Object, ByVal e As ScenarioAnalyze_GeneralStressTest_DateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ScenarioAnalyze_GeneralStressTest_DetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As ScenarioAnalyze_GeneralStressTest_DetailsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ScenarioAnalyze_GeneralStressTest_TotalsRowChangeEventHandler(ByVal sender As Object, ByVal e As ScenarioAnalyze_GeneralStressTest_TotalsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangeEventHandler(ByVal sender As Object, ByVal e As ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangeEventHandler(ByVal sender As Object, ByVal e As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEventHandler(ByVal sender As Object, ByVal e As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SCENARIO_ANALYZES_DATEDataTable
        Inherits Global.System.Data.TypedTableBase(Of SCENARIO_ANALYZES_DATERow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnScenarioAnalyzesDate As Global.System.Data.DataColumn
        
        Private columnSumEL_Live As Global.System.Data.DataColumn
        
        Private columnSumUL_Live As Global.System.Data.DataColumn
        
        Private columnSumGA_Live As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SCENARIO_ANALYZES_DATE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ScenarioAnalyzesDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScenarioAnalyzesDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumEL_LiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumEL_Live
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumUL_LiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumUL_Live
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumGA_LiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumGA_Live
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SCENARIO_ANALYZES_DATERow
            Get
                Return CType(Me.Rows(index),SCENARIO_ANALYZES_DATERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SCENARIO_ANALYZES_DATERowChanging As SCENARIO_ANALYZES_DATERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SCENARIO_ANALYZES_DATERowChanged As SCENARIO_ANALYZES_DATERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SCENARIO_ANALYZES_DATERowDeleting As SCENARIO_ANALYZES_DATERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SCENARIO_ANALYZES_DATERowDeleted As SCENARIO_ANALYZES_DATERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSCENARIO_ANALYZES_DATERow(ByVal row As SCENARIO_ANALYZES_DATERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSCENARIO_ANALYZES_DATERow(ByVal ScenarioAnalyzesDate As Date, ByVal SumEL_Live As Double, ByVal SumUL_Live As Double, ByVal SumGA_Live As Double) As SCENARIO_ANALYZES_DATERow
            Dim rowSCENARIO_ANALYZES_DATERow As SCENARIO_ANALYZES_DATERow = CType(Me.NewRow,SCENARIO_ANALYZES_DATERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ScenarioAnalyzesDate, SumEL_Live, SumUL_Live, SumGA_Live}
            rowSCENARIO_ANALYZES_DATERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSCENARIO_ANALYZES_DATERow)
            Return rowSCENARIO_ANALYZES_DATERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As SCENARIO_ANALYZES_DATERow
            Return CType(Me.Rows.Find(New Object() {ID}),SCENARIO_ANALYZES_DATERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SCENARIO_ANALYZES_DATEDataTable = CType(MyBase.Clone,SCENARIO_ANALYZES_DATEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SCENARIO_ANALYZES_DATEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnScenarioAnalyzesDate = MyBase.Columns("ScenarioAnalyzesDate")
            Me.columnSumEL_Live = MyBase.Columns("SumEL_Live")
            Me.columnSumUL_Live = MyBase.Columns("SumUL_Live")
            Me.columnSumGA_Live = MyBase.Columns("SumGA_Live")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnScenarioAnalyzesDate = New Global.System.Data.DataColumn("ScenarioAnalyzesDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScenarioAnalyzesDate)
            Me.columnSumEL_Live = New Global.System.Data.DataColumn("SumEL_Live", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumEL_Live)
            Me.columnSumUL_Live = New Global.System.Data.DataColumn("SumUL_Live", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumUL_Live)
            Me.columnSumGA_Live = New Global.System.Data.DataColumn("SumGA_Live", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumGA_Live)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSCENARIO_ANALYZES_DATERow() As SCENARIO_ANALYZES_DATERow
            Return CType(Me.NewRow,SCENARIO_ANALYZES_DATERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SCENARIO_ANALYZES_DATERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SCENARIO_ANALYZES_DATERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SCENARIO_ANALYZES_DATERowChangedEvent) Is Nothing) Then
                RaiseEvent SCENARIO_ANALYZES_DATERowChanged(Me, New SCENARIO_ANALYZES_DATERowChangeEvent(CType(e.Row,SCENARIO_ANALYZES_DATERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SCENARIO_ANALYZES_DATERowChangingEvent) Is Nothing) Then
                RaiseEvent SCENARIO_ANALYZES_DATERowChanging(Me, New SCENARIO_ANALYZES_DATERowChangeEvent(CType(e.Row,SCENARIO_ANALYZES_DATERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SCENARIO_ANALYZES_DATERowDeletedEvent) Is Nothing) Then
                RaiseEvent SCENARIO_ANALYZES_DATERowDeleted(Me, New SCENARIO_ANALYZES_DATERowChangeEvent(CType(e.Row,SCENARIO_ANALYZES_DATERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SCENARIO_ANALYZES_DATERowDeletingEvent) Is Nothing) Then
                RaiseEvent SCENARIO_ANALYZES_DATERowDeleting(Me, New SCENARIO_ANALYZES_DATERowChangeEvent(CType(e.Row,SCENARIO_ANALYZES_DATERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSCENARIO_ANALYZES_DATERow(ByVal row As SCENARIO_ANALYZES_DATERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SCENARIO_ANALYZES_DATEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable
        Inherits Global.System.Data.TypedTableBase(Of ScenarioAnalyze_ConcentrationRiskCHINA_DateRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnRiskDate As Global.System.Data.DataColumn
        
        Private columnLGD_mod As Global.System.Data.DataColumn
        
        Private columnR_Colleration_Mod As Global.System.Data.DataColumn
        
        Private columnObligorRate_Mod As Global.System.Data.DataColumn
        
        Private columnLevelOfConfidence As Global.System.Data.DataColumn
        
        Private columnSumEL As Global.System.Data.DataColumn
        
        Private columnSumUL As Global.System.Data.DataColumn
        
        Private columnnu_Value As Global.System.Data.DataColumn
        
        Private columnp_alpha_Value As Global.System.Data.DataColumn
        
        Private columnb_beta_value As Global.System.Data.DataColumn
        
        Private columnGamma_inv As Global.System.Data.DataColumn
        
        Private columnDelta As Global.System.Data.DataColumn
        
        Private columnK_Value As Global.System.Data.DataColumn
        
        Private columnSumGA_rel As Global.System.Data.DataColumn
        
        Private columnSumGA_Total As Global.System.Data.DataColumn
        
        Private columnIdDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ScenarioAnalyze_ConcentrationRiskCHINA_Date"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RiskDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiskDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LGD_modColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLGD_mod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property R_Colleration_ModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Colleration_Mod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ObligorRate_ModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObligorRate_Mod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LevelOfConfidenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLevelOfConfidence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumULColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumUL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property nu_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnu_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property p_alpha_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnp_alpha_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property b_beta_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnb_beta_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Gamma_invColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGamma_inv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DeltaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDelta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property K_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnK_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumGA_relColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumGA_rel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumGA_TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumGA_Total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow
            Get
                Return CType(Me.Rows(index),ScenarioAnalyze_ConcentrationRiskCHINA_DateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChanging As ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChanged As ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_DateRowDeleting As ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_DateRowDeleted As ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddScenarioAnalyze_ConcentrationRiskCHINA_DateRow(ByVal row As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddScenarioAnalyze_ConcentrationRiskCHINA_DateRow( _
                    ByVal RiskDate As Date,  _
                    ByVal LGD_mod As Double,  _
                    ByVal R_Colleration_Mod As Double,  _
                    ByVal ObligorRate_Mod As Double,  _
                    ByVal LevelOfConfidence As Double,  _
                    ByVal SumEL As Double,  _
                    ByVal SumUL As Double,  _
                    ByVal nu_Value As Double,  _
                    ByVal p_alpha_Value As Double,  _
                    ByVal b_beta_value As Double,  _
                    ByVal Gamma_inv As Double,  _
                    ByVal Delta As Double,  _
                    ByVal K_Value As Double,  _
                    ByVal SumGA_rel As Decimal,  _
                    ByVal SumGA_Total As Decimal,  _
                    ByVal parentSCENARIO_ANALYZES_DATERowByFK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE As SCENARIO_ANALYZES_DATERow) As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow
            Dim rowScenarioAnalyze_ConcentrationRiskCHINA_DateRow As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow = CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskCHINA_DateRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, RiskDate, LGD_mod, R_Colleration_Mod, ObligorRate_Mod, LevelOfConfidence, SumEL, SumUL, nu_Value, p_alpha_Value, b_beta_value, Gamma_inv, Delta, K_Value, SumGA_rel, SumGA_Total, Nothing}
            If (Not (parentSCENARIO_ANALYZES_DATERowByFK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE) Is Nothing) Then
                columnValuesArray(16) = parentSCENARIO_ANALYZES_DATERowByFK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE(0)
            End If
            rowScenarioAnalyze_ConcentrationRiskCHINA_DateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowScenarioAnalyze_ConcentrationRiskCHINA_DateRow)
            Return rowScenarioAnalyze_ConcentrationRiskCHINA_DateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow
            Return CType(Me.Rows.Find(New Object() {ID}),ScenarioAnalyze_ConcentrationRiskCHINA_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable = CType(MyBase.Clone,ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnRiskDate = MyBase.Columns("RiskDate")
            Me.columnLGD_mod = MyBase.Columns("LGD_mod")
            Me.columnR_Colleration_Mod = MyBase.Columns("R_Colleration_Mod")
            Me.columnObligorRate_Mod = MyBase.Columns("ObligorRate_Mod")
            Me.columnLevelOfConfidence = MyBase.Columns("LevelOfConfidence")
            Me.columnSumEL = MyBase.Columns("SumEL")
            Me.columnSumUL = MyBase.Columns("SumUL")
            Me.columnnu_Value = MyBase.Columns("nu_Value")
            Me.columnp_alpha_Value = MyBase.Columns("p_alpha_Value")
            Me.columnb_beta_value = MyBase.Columns("b_beta_value")
            Me.columnGamma_inv = MyBase.Columns("Gamma_inv")
            Me.columnDelta = MyBase.Columns("Delta")
            Me.columnK_Value = MyBase.Columns("K_Value")
            Me.columnSumGA_rel = MyBase.Columns("SumGA_rel")
            Me.columnSumGA_Total = MyBase.Columns("SumGA_Total")
            Me.columnIdDate = MyBase.Columns("IdDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnRiskDate = New Global.System.Data.DataColumn("RiskDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiskDate)
            Me.columnLGD_mod = New Global.System.Data.DataColumn("LGD_mod", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLGD_mod)
            Me.columnR_Colleration_Mod = New Global.System.Data.DataColumn("R_Colleration_Mod", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Colleration_Mod)
            Me.columnObligorRate_Mod = New Global.System.Data.DataColumn("ObligorRate_Mod", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObligorRate_Mod)
            Me.columnLevelOfConfidence = New Global.System.Data.DataColumn("LevelOfConfidence", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLevelOfConfidence)
            Me.columnSumEL = New Global.System.Data.DataColumn("SumEL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumEL)
            Me.columnSumUL = New Global.System.Data.DataColumn("SumUL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumUL)
            Me.columnnu_Value = New Global.System.Data.DataColumn("nu_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnu_Value)
            Me.columnp_alpha_Value = New Global.System.Data.DataColumn("p_alpha_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnp_alpha_Value)
            Me.columnb_beta_value = New Global.System.Data.DataColumn("b_beta_value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnb_beta_value)
            Me.columnGamma_inv = New Global.System.Data.DataColumn("Gamma_inv", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGamma_inv)
            Me.columnDelta = New Global.System.Data.DataColumn("Delta", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDelta)
            Me.columnK_Value = New Global.System.Data.DataColumn("K_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnK_Value)
            Me.columnSumGA_rel = New Global.System.Data.DataColumn("SumGA_rel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumGA_rel)
            Me.columnSumGA_Total = New Global.System.Data.DataColumn("SumGA_Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumGA_Total)
            Me.columnIdDate = New Global.System.Data.DataColumn("IdDate", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnRiskDate.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewScenarioAnalyze_ConcentrationRiskCHINA_DateRow() As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow
            Return CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskCHINA_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ScenarioAnalyze_ConcentrationRiskCHINA_DateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ScenarioAnalyze_ConcentrationRiskCHINA_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChanged(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChanging(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_DateRowDeletedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_DateRowDeleted(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_DateRowDeletingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_DateRowDeleting(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveScenarioAnalyze_ConcentrationRiskCHINA_DateRow(ByVal row As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnObligor_Rate As Global.System.Data.DataColumn
        
        Private columnContract_Type As Global.System.Data.DataColumn
        
        Private columnProduct_Type As Global.System.Data.DataColumn
        
        Private _columnGL_Master___Account_Type As Global.System.Data.DataColumn
        
        Private _columnCounterparty_Issuer_Collateral_Name As Global.System.Data.DataColumn
        
        Private columnClient_No As Global.System.Data.DataColumn
        
        Private columnContract_Collateral_ID As Global.System.Data.DataColumn
        
        Private columnMaturity_Date As Global.System.Data.DataColumn
        
        Private _columnRemaining_Year_s__to_Maturity As Global.System.Data.DataColumn
        
        Private columnOrg_Ccy As Global.System.Data.DataColumn
        
        Private _columnCredit_Outstanding__Org_Ccy_ As Global.System.Data.DataColumn
        
        Private _columnCredit_Outstanding__EUR_Equ_ As Global.System.Data.DataColumn
        
        Private columnNetCreditOutstandingAmountEUR As Global.System.Data.DataColumn
        
        Private columnInternalInfo As Global.System.Data.DataColumn
        
        Private columnPD As Global.System.Data.DataColumn
        
        Private _column_1_ER_ As Global.System.Data.DataColumn
        
        Private _columnCredit_Risk_Amount_EUR_Equ_ As Global.System.Data.DataColumn
        
        Private _columnNetCredit_Risk_Amount_EUR_Equ_ As Global.System.Data.DataColumn
        
        Private _column_1_ER_45_ As Global.System.Data.DataColumn
        
        Private columnCreditRiskAmountEUREquER45 As Global.System.Data.DataColumn
        
        Private columnNetCreditRiskAmountEUREquER45 As Global.System.Data.DataColumn
        
        Private columnCoreDefinition As Global.System.Data.DataColumn
        
        Private columnClientGroup As Global.System.Data.DataColumn
        
        Private columnClientGroupName As Global.System.Data.DataColumn
        
        Private columnMaturityWithoutCapFloor As Global.System.Data.DataColumn
        
        Private columnEaDweigthedMaturityWithoutCapFloor As Global.System.Data.DataColumn
        
        Private columnPDxFinalEaD As Global.System.Data.DataColumn
        
        Private columnLGDfinalEaDweighted As Global.System.Data.DataColumn
        
        Private columnRiskDate As Global.System.Data.DataColumn
        
        Private columnIdClientGroup As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ScenarioAnalyze_ConcentrationRiskCHINA_Details"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Obligor_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObligor_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Contract_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContract_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Product_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _GL_Master___Account_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnGL_Master___Account_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Counterparty_Issuer_Collateral_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnCounterparty_Issuer_Collateral_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Client_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Contract_Collateral_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContract_Collateral_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Maturity_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturity_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Remaining_Year_s__to_MaturityColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnRemaining_Year_s__to_Maturity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Org_CcyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrg_Ccy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Outstanding__Org_Ccy_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Outstanding__Org_Ccy_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Outstanding__EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Outstanding__EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetCreditOutstandingAmountEURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetCreditOutstandingAmountEUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InternalInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInternalInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property __1_ER_Column() As Global.System.Data.DataColumn
            Get
                Return Me._column_1_ER_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Risk_Amount_EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Risk_Amount_EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _NetCredit_Risk_Amount_EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnNetCredit_Risk_Amount_EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property __1_ER_45_Column() As Global.System.Data.DataColumn
            Get
                Return Me._column_1_ER_45_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CreditRiskAmountEUREquER45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreditRiskAmountEUREquER45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetCreditRiskAmountEUREquER45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetCreditRiskAmountEUREquER45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CoreDefinitionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreDefinition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityWithoutCapFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityWithoutCapFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EaDweigthedMaturityWithoutCapFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEaDweigthedMaturityWithoutCapFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PDxFinalEaDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDxFinalEaD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LGDfinalEaDweightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLGDfinalEaDweighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RiskDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiskDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow
            Get
                Return CType(Me.Rows(index),ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChanging As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChanged As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowDeleting As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowDeleted As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow(ByVal row As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal _GL_Master___Account_Type As String,  _
                    ByVal _Counterparty_Issuer_Collateral_Name As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Date,  _
                    ByVal _Remaining_Year_s__to_Maturity As Double,  _
                    ByVal Org_Ccy As String,  _
                    ByVal _Credit_Outstanding__Org_Ccy_ As Double,  _
                    ByVal _Credit_Outstanding__EUR_Equ_ As Double,  _
                    ByVal NetCreditOutstandingAmountEUR As Double,  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Double,  _
                    ByVal __1_ER_ As Double,  _
                    ByVal _Credit_Risk_Amount_EUR_Equ_ As Double,  _
                    ByVal _NetCredit_Risk_Amount_EUR_Equ_ As Double,  _
                    ByVal __1_ER_45_ As Double,  _
                    ByVal CreditRiskAmountEUREquER45 As Double,  _
                    ByVal NetCreditRiskAmountEUREquER45 As Double,  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Double,  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Double,  _
                    ByVal PDxFinalEaD As Double,  _
                    ByVal LGDfinalEaDweighted As Double,  _
                    ByVal RiskDate As Date,  _
                    ByVal parentScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowByFK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow) As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow
            Dim rowScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow = CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Obligor_Rate, Contract_Type, Product_Type, _GL_Master___Account_Type, _Counterparty_Issuer_Collateral_Name, Client_No, Contract_Collateral_ID, Maturity_Date, _Remaining_Year_s__to_Maturity, Org_Ccy, _Credit_Outstanding__Org_Ccy_, _Credit_Outstanding__EUR_Equ_, NetCreditOutstandingAmountEUR, InternalInfo, PD, __1_ER_, _Credit_Risk_Amount_EUR_Equ_, _NetCredit_Risk_Amount_EUR_Equ_, __1_ER_45_, CreditRiskAmountEUREquER45, NetCreditRiskAmountEUREquER45, CoreDefinition, ClientGroup, ClientGroupName, MaturityWithoutCapFloor, EaDweigthedMaturityWithoutCapFloor, PDxFinalEaD, LGDfinalEaDweighted, RiskDate, Nothing}
            If (Not (parentScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowByFK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals) Is Nothing) Then
                columnValuesArray(30) = parentScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowByFK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals(0)
            End If
            rowScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow)
            Return rowScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow
            Return CType(Me.Rows.Find(New Object() {ID}),ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable = CType(MyBase.Clone,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnObligor_Rate = MyBase.Columns("Obligor Rate")
            Me.columnContract_Type = MyBase.Columns("Contract Type")
            Me.columnProduct_Type = MyBase.Columns("Product Type")
            Me._columnGL_Master___Account_Type = MyBase.Columns("GL Master / Account Type")
            Me._columnCounterparty_Issuer_Collateral_Name = MyBase.Columns("Counterparty/Issuer/Collateral Name")
            Me.columnClient_No = MyBase.Columns("Client No")
            Me.columnContract_Collateral_ID = MyBase.Columns("Contract Collateral ID")
            Me.columnMaturity_Date = MyBase.Columns("Maturity Date")
            Me._columnRemaining_Year_s__to_Maturity = MyBase.Columns("Remaining Year(s) to Maturity")
            Me.columnOrg_Ccy = MyBase.Columns("Org Ccy")
            Me._columnCredit_Outstanding__Org_Ccy_ = MyBase.Columns("Credit Outstanding (Org Ccy)")
            Me._columnCredit_Outstanding__EUR_Equ_ = MyBase.Columns("Credit Outstanding (EUR Equ)")
            Me.columnNetCreditOutstandingAmountEUR = MyBase.Columns("NetCreditOutstandingAmountEUR")
            Me.columnInternalInfo = MyBase.Columns("InternalInfo")
            Me.columnPD = MyBase.Columns("PD")
            Me._column_1_ER_ = MyBase.Columns("(1-ER)")
            Me._columnCredit_Risk_Amount_EUR_Equ_ = MyBase.Columns("Credit Risk Amount(EUR Equ)")
            Me._columnNetCredit_Risk_Amount_EUR_Equ_ = MyBase.Columns("NetCredit Risk Amount(EUR Equ)")
            Me._column_1_ER_45_ = MyBase.Columns("(1-ER_45)")
            Me.columnCreditRiskAmountEUREquER45 = MyBase.Columns("CreditRiskAmountEUREquER45")
            Me.columnNetCreditRiskAmountEUREquER45 = MyBase.Columns("NetCreditRiskAmountEUREquER45")
            Me.columnCoreDefinition = MyBase.Columns("CoreDefinition")
            Me.columnClientGroup = MyBase.Columns("ClientGroup")
            Me.columnClientGroupName = MyBase.Columns("ClientGroupName")
            Me.columnMaturityWithoutCapFloor = MyBase.Columns("MaturityWithoutCapFloor")
            Me.columnEaDweigthedMaturityWithoutCapFloor = MyBase.Columns("EaDweigthedMaturityWithoutCapFloor")
            Me.columnPDxFinalEaD = MyBase.Columns("PDxFinalEaD")
            Me.columnLGDfinalEaDweighted = MyBase.Columns("LGDfinalEaDweighted")
            Me.columnRiskDate = MyBase.Columns("RiskDate")
            Me.columnIdClientGroup = MyBase.Columns("IdClientGroup")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnObligor_Rate = New Global.System.Data.DataColumn("Obligor Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObligor_Rate)
            Me.columnContract_Type = New Global.System.Data.DataColumn("Contract Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContract_Type)
            Me.columnProduct_Type = New Global.System.Data.DataColumn("Product Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_Type)
            Me._columnGL_Master___Account_Type = New Global.System.Data.DataColumn("GL Master / Account Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnGL_Master___Account_Type.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnGL_Master___Account_Type")
            Me._columnGL_Master___Account_Type.ExtendedProperties.Add("Generator_UserColumnName", "GL Master / Account Type")
            MyBase.Columns.Add(Me._columnGL_Master___Account_Type)
            Me._columnCounterparty_Issuer_Collateral_Name = New Global.System.Data.DataColumn("Counterparty/Issuer/Collateral Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCounterparty_Issuer_Collateral_Name.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCounterparty_Issuer_Collateral_Name")
            Me._columnCounterparty_Issuer_Collateral_Name.ExtendedProperties.Add("Generator_UserColumnName", "Counterparty/Issuer/Collateral Name")
            MyBase.Columns.Add(Me._columnCounterparty_Issuer_Collateral_Name)
            Me.columnClient_No = New Global.System.Data.DataColumn("Client No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_No)
            Me.columnContract_Collateral_ID = New Global.System.Data.DataColumn("Contract Collateral ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContract_Collateral_ID)
            Me.columnMaturity_Date = New Global.System.Data.DataColumn("Maturity Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturity_Date)
            Me._columnRemaining_Year_s__to_Maturity = New Global.System.Data.DataColumn("Remaining Year(s) to Maturity", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnRemaining_Year_s__to_Maturity.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnRemaining_Year_s__to_Maturity")
            Me._columnRemaining_Year_s__to_Maturity.ExtendedProperties.Add("Generator_UserColumnName", "Remaining Year(s) to Maturity")
            MyBase.Columns.Add(Me._columnRemaining_Year_s__to_Maturity)
            Me.columnOrg_Ccy = New Global.System.Data.DataColumn("Org Ccy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrg_Ccy)
            Me._columnCredit_Outstanding__Org_Ccy_ = New Global.System.Data.DataColumn("Credit Outstanding (Org Ccy)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Outstanding__Org_Ccy_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Outstanding__Org_Ccy_")
            Me._columnCredit_Outstanding__Org_Ccy_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Outstanding (Org Ccy)")
            MyBase.Columns.Add(Me._columnCredit_Outstanding__Org_Ccy_)
            Me._columnCredit_Outstanding__EUR_Equ_ = New Global.System.Data.DataColumn("Credit Outstanding (EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Outstanding__EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Outstanding__EUR_Equ_")
            Me._columnCredit_Outstanding__EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Outstanding (EUR Equ)")
            MyBase.Columns.Add(Me._columnCredit_Outstanding__EUR_Equ_)
            Me.columnNetCreditOutstandingAmountEUR = New Global.System.Data.DataColumn("NetCreditOutstandingAmountEUR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetCreditOutstandingAmountEUR)
            Me.columnInternalInfo = New Global.System.Data.DataColumn("InternalInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInternalInfo)
            Me.columnPD = New Global.System.Data.DataColumn("PD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD)
            Me._column_1_ER_ = New Global.System.Data.DataColumn("(1-ER)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._column_1_ER_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_1_ER_")
            Me._column_1_ER_.ExtendedProperties.Add("Generator_UserColumnName", "(1-ER)")
            MyBase.Columns.Add(Me._column_1_ER_)
            Me._columnCredit_Risk_Amount_EUR_Equ_ = New Global.System.Data.DataColumn("Credit Risk Amount(EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Risk_Amount_EUR_Equ_")
            Me._columnCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Risk Amount(EUR Equ)")
            MyBase.Columns.Add(Me._columnCredit_Risk_Amount_EUR_Equ_)
            Me._columnNetCredit_Risk_Amount_EUR_Equ_ = New Global.System.Data.DataColumn("NetCredit Risk Amount(EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnNetCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnNetCredit_Risk_Amount_EUR_Equ_")
            Me._columnNetCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "NetCredit Risk Amount(EUR Equ)")
            MyBase.Columns.Add(Me._columnNetCredit_Risk_Amount_EUR_Equ_)
            Me._column_1_ER_45_ = New Global.System.Data.DataColumn("(1-ER_45)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._column_1_ER_45_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_1_ER_45_")
            Me._column_1_ER_45_.ExtendedProperties.Add("Generator_UserColumnName", "(1-ER_45)")
            MyBase.Columns.Add(Me._column_1_ER_45_)
            Me.columnCreditRiskAmountEUREquER45 = New Global.System.Data.DataColumn("CreditRiskAmountEUREquER45", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreditRiskAmountEUREquER45)
            Me.columnNetCreditRiskAmountEUREquER45 = New Global.System.Data.DataColumn("NetCreditRiskAmountEUREquER45", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetCreditRiskAmountEUREquER45)
            Me.columnCoreDefinition = New Global.System.Data.DataColumn("CoreDefinition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreDefinition)
            Me.columnClientGroup = New Global.System.Data.DataColumn("ClientGroup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroup)
            Me.columnClientGroupName = New Global.System.Data.DataColumn("ClientGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroupName)
            Me.columnMaturityWithoutCapFloor = New Global.System.Data.DataColumn("MaturityWithoutCapFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityWithoutCapFloor)
            Me.columnEaDweigthedMaturityWithoutCapFloor = New Global.System.Data.DataColumn("EaDweigthedMaturityWithoutCapFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEaDweigthedMaturityWithoutCapFloor)
            Me.columnPDxFinalEaD = New Global.System.Data.DataColumn("PDxFinalEaD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDxFinalEaD)
            Me.columnLGDfinalEaDweighted = New Global.System.Data.DataColumn("LGDfinalEaDweighted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLGDfinalEaDweighted)
            Me.columnRiskDate = New Global.System.Data.DataColumn("RiskDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiskDate)
            Me.columnIdClientGroup = New Global.System.Data.DataColumn("IdClientGroup", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdClientGroup)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnObligor_Rate.MaxLength = 255
            Me.columnContract_Type.MaxLength = 255
            Me.columnProduct_Type.MaxLength = 255
            Me._columnGL_Master___Account_Type.MaxLength = 255
            Me._columnCounterparty_Issuer_Collateral_Name.MaxLength = 255
            Me.columnClient_No.MaxLength = 255
            Me.columnContract_Collateral_ID.MaxLength = 255
            Me.columnOrg_Ccy.MaxLength = 255
            Me.columnInternalInfo.MaxLength = 255
            Me.columnCoreDefinition.MaxLength = 255
            Me.columnClientGroup.MaxLength = 50
            Me.columnClientGroupName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow() As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow
            Return CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChanged(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChanging(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowDeleted(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowDeleting(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow(ByVal row As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnClientGroup As Global.System.Data.DataColumn
        
        Private columnClientGroupName As Global.System.Data.DataColumn
        
        Private columnSubBorrowersCounter As Global.System.Data.DataColumn
        
        Private columnFinalEadTotalSum As Global.System.Data.DataColumn
        
        Private columnLGD As Global.System.Data.DataColumn
        
        Private columnPD_EaD_weighted As Global.System.Data.DataColumn
        
        Private columnPD_3bps_floor As Global.System.Data.DataColumn
        
        Private columnIndicatorOfFloor As Global.System.Data.DataColumn
        
        Private columnMaturityEADweigthed As Global.System.Data.DataColumn
        
        Private columnR_CoefficientOfColleration As Global.System.Data.DataColumn
        
        Private columnb_MaturityAdjustment As Global.System.Data.DataColumn
        
        Private columnRW_RiskWeightedExposure As Global.System.Data.DataColumn
        
        Private columnUL_UnexpectedLoss As Global.System.Data.DataColumn
        
        Private columns_i As Global.System.Data.DataColumn
        
        Private columnK_i As Global.System.Data.DataColumn
        
        Private columnR_i As Global.System.Data.DataColumn
        
        Private columnVLGD_i As Global.System.Data.DataColumn
        
        Private columnC_i As Global.System.Data.DataColumn
        
        Private columnGA_n As Global.System.Data.DataColumn
        
        Private columnRiskDate As Global.System.Data.DataColumn
        
        Private columnIdDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ScenarioAnalyze_ConcentrationRiskCHINA_Totals"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubBorrowersCounterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubBorrowersCounter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FinalEadTotalSumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinalEadTotalSum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LGDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLGD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PD_EaD_weightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD_EaD_weighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PD_3bps_floorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD_3bps_floor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IndicatorOfFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndicatorOfFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityEADweigthedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityEADweigthed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property R_CoefficientOfCollerationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_CoefficientOfColleration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property b_MaturityAdjustmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnb_MaturityAdjustment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RW_RiskWeightedExposureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRW_RiskWeightedExposure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UL_UnexpectedLossColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUL_UnexpectedLoss
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property s_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columns_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property K_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnK_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property R_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VLGD_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVLGD_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property C_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GA_nColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGA_n
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RiskDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiskDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow
            Get
                Return CType(Me.Rows(index),ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChanging As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChanged As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowDeleting As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowDeleted As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow(ByVal row As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow( _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal SubBorrowersCounter As Double,  _
                    ByVal FinalEadTotalSum As Double,  _
                    ByVal LGD As Double,  _
                    ByVal PD_EaD_weighted As Double,  _
                    ByVal PD_3bps_floor As Double,  _
                    ByVal IndicatorOfFloor As Double,  _
                    ByVal MaturityEADweigthed As Double,  _
                    ByVal R_CoefficientOfColleration As Double,  _
                    ByVal b_MaturityAdjustment As Double,  _
                    ByVal RW_RiskWeightedExposure As Double,  _
                    ByVal UL_UnexpectedLoss As Double,  _
                    ByVal s_i As Double,  _
                    ByVal K_i As Double,  _
                    ByVal R_i As Double,  _
                    ByVal VLGD_i As Double,  _
                    ByVal C_i As Double,  _
                    ByVal GA_n As Decimal,  _
                    ByVal RiskDate As Date,  _
                    ByVal parentScenarioAnalyze_ConcentrationRiskCHINA_DateRowByFK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow) As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow
            Dim rowScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow = CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ClientGroup, ClientGroupName, SubBorrowersCounter, FinalEadTotalSum, LGD, PD_EaD_weighted, PD_3bps_floor, IndicatorOfFloor, MaturityEADweigthed, R_CoefficientOfColleration, b_MaturityAdjustment, RW_RiskWeightedExposure, UL_UnexpectedLoss, s_i, K_i, R_i, VLGD_i, C_i, GA_n, RiskDate, Nothing}
            If (Not (parentScenarioAnalyze_ConcentrationRiskCHINA_DateRowByFK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date) Is Nothing) Then
                columnValuesArray(21) = parentScenarioAnalyze_ConcentrationRiskCHINA_DateRowByFK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date(0)
            End If
            rowScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow)
            Return rowScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow
            Return CType(Me.Rows.Find(New Object() {ID}),ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable = CType(MyBase.Clone,ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnClientGroup = MyBase.Columns("ClientGroup")
            Me.columnClientGroupName = MyBase.Columns("ClientGroupName")
            Me.columnSubBorrowersCounter = MyBase.Columns("SubBorrowersCounter")
            Me.columnFinalEadTotalSum = MyBase.Columns("FinalEadTotalSum")
            Me.columnLGD = MyBase.Columns("LGD")
            Me.columnPD_EaD_weighted = MyBase.Columns("PD_EaD_weighted")
            Me.columnPD_3bps_floor = MyBase.Columns("PD_3bps_floor")
            Me.columnIndicatorOfFloor = MyBase.Columns("IndicatorOfFloor")
            Me.columnMaturityEADweigthed = MyBase.Columns("MaturityEADweigthed")
            Me.columnR_CoefficientOfColleration = MyBase.Columns("R_CoefficientOfColleration")
            Me.columnb_MaturityAdjustment = MyBase.Columns("b_MaturityAdjustment")
            Me.columnRW_RiskWeightedExposure = MyBase.Columns("RW_RiskWeightedExposure")
            Me.columnUL_UnexpectedLoss = MyBase.Columns("UL_UnexpectedLoss")
            Me.columns_i = MyBase.Columns("s_i")
            Me.columnK_i = MyBase.Columns("K_i")
            Me.columnR_i = MyBase.Columns("R_i")
            Me.columnVLGD_i = MyBase.Columns("VLGD_i")
            Me.columnC_i = MyBase.Columns("C_i")
            Me.columnGA_n = MyBase.Columns("GA_n")
            Me.columnRiskDate = MyBase.Columns("RiskDate")
            Me.columnIdDate = MyBase.Columns("IdDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnClientGroup = New Global.System.Data.DataColumn("ClientGroup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroup)
            Me.columnClientGroupName = New Global.System.Data.DataColumn("ClientGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroupName)
            Me.columnSubBorrowersCounter = New Global.System.Data.DataColumn("SubBorrowersCounter", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubBorrowersCounter)
            Me.columnFinalEadTotalSum = New Global.System.Data.DataColumn("FinalEadTotalSum", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinalEadTotalSum)
            Me.columnLGD = New Global.System.Data.DataColumn("LGD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLGD)
            Me.columnPD_EaD_weighted = New Global.System.Data.DataColumn("PD_EaD_weighted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD_EaD_weighted)
            Me.columnPD_3bps_floor = New Global.System.Data.DataColumn("PD_3bps_floor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD_3bps_floor)
            Me.columnIndicatorOfFloor = New Global.System.Data.DataColumn("IndicatorOfFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndicatorOfFloor)
            Me.columnMaturityEADweigthed = New Global.System.Data.DataColumn("MaturityEADweigthed", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityEADweigthed)
            Me.columnR_CoefficientOfColleration = New Global.System.Data.DataColumn("R_CoefficientOfColleration", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_CoefficientOfColleration)
            Me.columnb_MaturityAdjustment = New Global.System.Data.DataColumn("b_MaturityAdjustment", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnb_MaturityAdjustment)
            Me.columnRW_RiskWeightedExposure = New Global.System.Data.DataColumn("RW_RiskWeightedExposure", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRW_RiskWeightedExposure)
            Me.columnUL_UnexpectedLoss = New Global.System.Data.DataColumn("UL_UnexpectedLoss", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUL_UnexpectedLoss)
            Me.columns_i = New Global.System.Data.DataColumn("s_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columns_i)
            Me.columnK_i = New Global.System.Data.DataColumn("K_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnK_i)
            Me.columnR_i = New Global.System.Data.DataColumn("R_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_i)
            Me.columnVLGD_i = New Global.System.Data.DataColumn("VLGD_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVLGD_i)
            Me.columnC_i = New Global.System.Data.DataColumn("C_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_i)
            Me.columnGA_n = New Global.System.Data.DataColumn("GA_n", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGA_n)
            Me.columnRiskDate = New Global.System.Data.DataColumn("RiskDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiskDate)
            Me.columnIdDate = New Global.System.Data.DataColumn("IdDate", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnClientGroup.MaxLength = 50
            Me.columnClientGroupName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow() As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow
            Return CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChanged(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChanging(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowDeleted(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowDeleting(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow(ByVal row As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable
        Inherits Global.System.Data.TypedTableBase(Of ScenarioAnalyze_ConcentrationRiskTBA_DateRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnRiskDate As Global.System.Data.DataColumn
        
        Private columnLGD_mod As Global.System.Data.DataColumn
        
        Private columnR_Colleration_Mod As Global.System.Data.DataColumn
        
        Private columnObligorRate_Mod As Global.System.Data.DataColumn
        
        Private columnLevelOfConfidence As Global.System.Data.DataColumn
        
        Private columnSumEL As Global.System.Data.DataColumn
        
        Private columnSumUL As Global.System.Data.DataColumn
        
        Private columnnu_Value As Global.System.Data.DataColumn
        
        Private columnp_alpha_Value As Global.System.Data.DataColumn
        
        Private columnb_beta_value As Global.System.Data.DataColumn
        
        Private columnGamma_inv As Global.System.Data.DataColumn
        
        Private columnDelta As Global.System.Data.DataColumn
        
        Private columnK_Value As Global.System.Data.DataColumn
        
        Private columnSumGA_rel As Global.System.Data.DataColumn
        
        Private columnSumGA_Total As Global.System.Data.DataColumn
        
        Private columnIdDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ScenarioAnalyze_ConcentrationRiskTBA_Date"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RiskDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiskDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LGD_modColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLGD_mod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property R_Colleration_ModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Colleration_Mod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ObligorRate_ModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObligorRate_Mod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LevelOfConfidenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLevelOfConfidence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumULColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumUL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property nu_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnu_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property p_alpha_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnp_alpha_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property b_beta_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnb_beta_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Gamma_invColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGamma_inv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DeltaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDelta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property K_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnK_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumGA_relColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumGA_rel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumGA_TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumGA_Total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ScenarioAnalyze_ConcentrationRiskTBA_DateRow
            Get
                Return CType(Me.Rows(index),ScenarioAnalyze_ConcentrationRiskTBA_DateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_DateRowChanging As ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_DateRowChanged As ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_DateRowDeleting As ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_DateRowDeleted As ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddScenarioAnalyze_ConcentrationRiskTBA_DateRow(ByVal row As ScenarioAnalyze_ConcentrationRiskTBA_DateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddScenarioAnalyze_ConcentrationRiskTBA_DateRow( _
                    ByVal RiskDate As Date,  _
                    ByVal LGD_mod As Double,  _
                    ByVal R_Colleration_Mod As Double,  _
                    ByVal ObligorRate_Mod As Double,  _
                    ByVal LevelOfConfidence As Double,  _
                    ByVal SumEL As Double,  _
                    ByVal SumUL As Double,  _
                    ByVal nu_Value As Double,  _
                    ByVal p_alpha_Value As Double,  _
                    ByVal b_beta_value As Double,  _
                    ByVal Gamma_inv As Double,  _
                    ByVal Delta As Double,  _
                    ByVal K_Value As Double,  _
                    ByVal SumGA_rel As Decimal,  _
                    ByVal SumGA_Total As Decimal,  _
                    ByVal parentSCENARIO_ANALYZES_DATERowByFK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE As SCENARIO_ANALYZES_DATERow) As ScenarioAnalyze_ConcentrationRiskTBA_DateRow
            Dim rowScenarioAnalyze_ConcentrationRiskTBA_DateRow As ScenarioAnalyze_ConcentrationRiskTBA_DateRow = CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskTBA_DateRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, RiskDate, LGD_mod, R_Colleration_Mod, ObligorRate_Mod, LevelOfConfidence, SumEL, SumUL, nu_Value, p_alpha_Value, b_beta_value, Gamma_inv, Delta, K_Value, SumGA_rel, SumGA_Total, Nothing}
            If (Not (parentSCENARIO_ANALYZES_DATERowByFK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE) Is Nothing) Then
                columnValuesArray(16) = parentSCENARIO_ANALYZES_DATERowByFK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE(0)
            End If
            rowScenarioAnalyze_ConcentrationRiskTBA_DateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowScenarioAnalyze_ConcentrationRiskTBA_DateRow)
            Return rowScenarioAnalyze_ConcentrationRiskTBA_DateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ScenarioAnalyze_ConcentrationRiskTBA_DateRow
            Return CType(Me.Rows.Find(New Object() {ID}),ScenarioAnalyze_ConcentrationRiskTBA_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable = CType(MyBase.Clone,ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnRiskDate = MyBase.Columns("RiskDate")
            Me.columnLGD_mod = MyBase.Columns("LGD_mod")
            Me.columnR_Colleration_Mod = MyBase.Columns("R_Colleration_Mod")
            Me.columnObligorRate_Mod = MyBase.Columns("ObligorRate_Mod")
            Me.columnLevelOfConfidence = MyBase.Columns("LevelOfConfidence")
            Me.columnSumEL = MyBase.Columns("SumEL")
            Me.columnSumUL = MyBase.Columns("SumUL")
            Me.columnnu_Value = MyBase.Columns("nu_Value")
            Me.columnp_alpha_Value = MyBase.Columns("p_alpha_Value")
            Me.columnb_beta_value = MyBase.Columns("b_beta_value")
            Me.columnGamma_inv = MyBase.Columns("Gamma_inv")
            Me.columnDelta = MyBase.Columns("Delta")
            Me.columnK_Value = MyBase.Columns("K_Value")
            Me.columnSumGA_rel = MyBase.Columns("SumGA_rel")
            Me.columnSumGA_Total = MyBase.Columns("SumGA_Total")
            Me.columnIdDate = MyBase.Columns("IdDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnRiskDate = New Global.System.Data.DataColumn("RiskDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiskDate)
            Me.columnLGD_mod = New Global.System.Data.DataColumn("LGD_mod", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLGD_mod)
            Me.columnR_Colleration_Mod = New Global.System.Data.DataColumn("R_Colleration_Mod", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Colleration_Mod)
            Me.columnObligorRate_Mod = New Global.System.Data.DataColumn("ObligorRate_Mod", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObligorRate_Mod)
            Me.columnLevelOfConfidence = New Global.System.Data.DataColumn("LevelOfConfidence", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLevelOfConfidence)
            Me.columnSumEL = New Global.System.Data.DataColumn("SumEL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumEL)
            Me.columnSumUL = New Global.System.Data.DataColumn("SumUL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumUL)
            Me.columnnu_Value = New Global.System.Data.DataColumn("nu_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnu_Value)
            Me.columnp_alpha_Value = New Global.System.Data.DataColumn("p_alpha_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnp_alpha_Value)
            Me.columnb_beta_value = New Global.System.Data.DataColumn("b_beta_value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnb_beta_value)
            Me.columnGamma_inv = New Global.System.Data.DataColumn("Gamma_inv", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGamma_inv)
            Me.columnDelta = New Global.System.Data.DataColumn("Delta", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDelta)
            Me.columnK_Value = New Global.System.Data.DataColumn("K_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnK_Value)
            Me.columnSumGA_rel = New Global.System.Data.DataColumn("SumGA_rel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumGA_rel)
            Me.columnSumGA_Total = New Global.System.Data.DataColumn("SumGA_Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumGA_Total)
            Me.columnIdDate = New Global.System.Data.DataColumn("IdDate", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnRiskDate.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewScenarioAnalyze_ConcentrationRiskTBA_DateRow() As ScenarioAnalyze_ConcentrationRiskTBA_DateRow
            Return CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskTBA_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ScenarioAnalyze_ConcentrationRiskTBA_DateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ScenarioAnalyze_ConcentrationRiskTBA_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_DateRowChanged(Me, New ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_DateRowChanging(Me, New ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_DateRowDeletedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_DateRowDeleted(Me, New ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_DateRowDeletingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_DateRowDeleting(Me, New ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveScenarioAnalyze_ConcentrationRiskTBA_DateRow(ByVal row As ScenarioAnalyze_ConcentrationRiskTBA_DateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnObligor_Rate As Global.System.Data.DataColumn
        
        Private columnContract_Type As Global.System.Data.DataColumn
        
        Private columnProduct_Type As Global.System.Data.DataColumn
        
        Private _columnGL_Master___Account_Type As Global.System.Data.DataColumn
        
        Private _columnCounterparty_Issuer_Collateral_Name As Global.System.Data.DataColumn
        
        Private columnClient_No As Global.System.Data.DataColumn
        
        Private columnContract_Collateral_ID As Global.System.Data.DataColumn
        
        Private columnMaturity_Date As Global.System.Data.DataColumn
        
        Private _columnRemaining_Year_s__to_Maturity As Global.System.Data.DataColumn
        
        Private columnOrg_Ccy As Global.System.Data.DataColumn
        
        Private _columnCredit_Outstanding__Org_Ccy_ As Global.System.Data.DataColumn
        
        Private _columnCredit_Outstanding__EUR_Equ_ As Global.System.Data.DataColumn
        
        Private columnNetCreditOutstandingAmountEUR As Global.System.Data.DataColumn
        
        Private columnInternalInfo As Global.System.Data.DataColumn
        
        Private columnPD As Global.System.Data.DataColumn
        
        Private _column_1_ER_ As Global.System.Data.DataColumn
        
        Private _columnCredit_Risk_Amount_EUR_Equ_ As Global.System.Data.DataColumn
        
        Private _columnNetCredit_Risk_Amount_EUR_Equ_ As Global.System.Data.DataColumn
        
        Private _column_1_ER_45_ As Global.System.Data.DataColumn
        
        Private columnCreditRiskAmountEUREquER45 As Global.System.Data.DataColumn
        
        Private columnNetCreditRiskAmountEUREquER45 As Global.System.Data.DataColumn
        
        Private columnCoreDefinition As Global.System.Data.DataColumn
        
        Private columnClientGroup As Global.System.Data.DataColumn
        
        Private columnClientGroupName As Global.System.Data.DataColumn
        
        Private columnMaturityWithoutCapFloor As Global.System.Data.DataColumn
        
        Private columnEaDweigthedMaturityWithoutCapFloor As Global.System.Data.DataColumn
        
        Private columnPDxFinalEaD As Global.System.Data.DataColumn
        
        Private columnLGDfinalEaDweighted As Global.System.Data.DataColumn
        
        Private columnRiskDate As Global.System.Data.DataColumn
        
        Private columnIdClientGroup As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ScenarioAnalyze_ConcentrationRiskTBA_Details"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Obligor_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObligor_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Contract_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContract_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Product_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _GL_Master___Account_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnGL_Master___Account_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Counterparty_Issuer_Collateral_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnCounterparty_Issuer_Collateral_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Client_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Contract_Collateral_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContract_Collateral_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Maturity_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturity_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Remaining_Year_s__to_MaturityColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnRemaining_Year_s__to_Maturity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Org_CcyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrg_Ccy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Outstanding__Org_Ccy_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Outstanding__Org_Ccy_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Outstanding__EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Outstanding__EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetCreditOutstandingAmountEURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetCreditOutstandingAmountEUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InternalInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInternalInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property __1_ER_Column() As Global.System.Data.DataColumn
            Get
                Return Me._column_1_ER_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Risk_Amount_EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Risk_Amount_EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _NetCredit_Risk_Amount_EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnNetCredit_Risk_Amount_EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property __1_ER_45_Column() As Global.System.Data.DataColumn
            Get
                Return Me._column_1_ER_45_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CreditRiskAmountEUREquER45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreditRiskAmountEUREquER45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetCreditRiskAmountEUREquER45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetCreditRiskAmountEUREquER45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CoreDefinitionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreDefinition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityWithoutCapFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityWithoutCapFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EaDweigthedMaturityWithoutCapFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEaDweigthedMaturityWithoutCapFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PDxFinalEaDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDxFinalEaD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LGDfinalEaDweightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLGDfinalEaDweighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RiskDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiskDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow
            Get
                Return CType(Me.Rows(index),ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChanging As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChanged As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowDeleting As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowDeleted As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddScenarioAnalyze_ConcentrationRiskTBA_DetailsRow(ByVal row As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddScenarioAnalyze_ConcentrationRiskTBA_DetailsRow( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal _GL_Master___Account_Type As String,  _
                    ByVal _Counterparty_Issuer_Collateral_Name As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Date,  _
                    ByVal _Remaining_Year_s__to_Maturity As Double,  _
                    ByVal Org_Ccy As String,  _
                    ByVal _Credit_Outstanding__Org_Ccy_ As Double,  _
                    ByVal _Credit_Outstanding__EUR_Equ_ As Double,  _
                    ByVal NetCreditOutstandingAmountEUR As Double,  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Double,  _
                    ByVal __1_ER_ As Double,  _
                    ByVal _Credit_Risk_Amount_EUR_Equ_ As Double,  _
                    ByVal _NetCredit_Risk_Amount_EUR_Equ_ As Double,  _
                    ByVal __1_ER_45_ As Double,  _
                    ByVal CreditRiskAmountEUREquER45 As Double,  _
                    ByVal NetCreditRiskAmountEUREquER45 As Double,  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Double,  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Double,  _
                    ByVal PDxFinalEaD As Double,  _
                    ByVal LGDfinalEaDweighted As Double,  _
                    ByVal RiskDate As Date,  _
                    ByVal parentScenarioAnalyze_ConcentrationRiskTBA_TotalsRowByFK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow) As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow
            Dim rowScenarioAnalyze_ConcentrationRiskTBA_DetailsRow As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow = CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Obligor_Rate, Contract_Type, Product_Type, _GL_Master___Account_Type, _Counterparty_Issuer_Collateral_Name, Client_No, Contract_Collateral_ID, Maturity_Date, _Remaining_Year_s__to_Maturity, Org_Ccy, _Credit_Outstanding__Org_Ccy_, _Credit_Outstanding__EUR_Equ_, NetCreditOutstandingAmountEUR, InternalInfo, PD, __1_ER_, _Credit_Risk_Amount_EUR_Equ_, _NetCredit_Risk_Amount_EUR_Equ_, __1_ER_45_, CreditRiskAmountEUREquER45, NetCreditRiskAmountEUREquER45, CoreDefinition, ClientGroup, ClientGroupName, MaturityWithoutCapFloor, EaDweigthedMaturityWithoutCapFloor, PDxFinalEaD, LGDfinalEaDweighted, RiskDate, Nothing}
            If (Not (parentScenarioAnalyze_ConcentrationRiskTBA_TotalsRowByFK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals) Is Nothing) Then
                columnValuesArray(30) = parentScenarioAnalyze_ConcentrationRiskTBA_TotalsRowByFK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals(0)
            End If
            rowScenarioAnalyze_ConcentrationRiskTBA_DetailsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowScenarioAnalyze_ConcentrationRiskTBA_DetailsRow)
            Return rowScenarioAnalyze_ConcentrationRiskTBA_DetailsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow
            Return CType(Me.Rows.Find(New Object() {ID}),ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable = CType(MyBase.Clone,ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnObligor_Rate = MyBase.Columns("Obligor Rate")
            Me.columnContract_Type = MyBase.Columns("Contract Type")
            Me.columnProduct_Type = MyBase.Columns("Product Type")
            Me._columnGL_Master___Account_Type = MyBase.Columns("GL Master / Account Type")
            Me._columnCounterparty_Issuer_Collateral_Name = MyBase.Columns("Counterparty/Issuer/Collateral Name")
            Me.columnClient_No = MyBase.Columns("Client No")
            Me.columnContract_Collateral_ID = MyBase.Columns("Contract Collateral ID")
            Me.columnMaturity_Date = MyBase.Columns("Maturity Date")
            Me._columnRemaining_Year_s__to_Maturity = MyBase.Columns("Remaining Year(s) to Maturity")
            Me.columnOrg_Ccy = MyBase.Columns("Org Ccy")
            Me._columnCredit_Outstanding__Org_Ccy_ = MyBase.Columns("Credit Outstanding (Org Ccy)")
            Me._columnCredit_Outstanding__EUR_Equ_ = MyBase.Columns("Credit Outstanding (EUR Equ)")
            Me.columnNetCreditOutstandingAmountEUR = MyBase.Columns("NetCreditOutstandingAmountEUR")
            Me.columnInternalInfo = MyBase.Columns("InternalInfo")
            Me.columnPD = MyBase.Columns("PD")
            Me._column_1_ER_ = MyBase.Columns("(1-ER)")
            Me._columnCredit_Risk_Amount_EUR_Equ_ = MyBase.Columns("Credit Risk Amount(EUR Equ)")
            Me._columnNetCredit_Risk_Amount_EUR_Equ_ = MyBase.Columns("NetCredit Risk Amount(EUR Equ)")
            Me._column_1_ER_45_ = MyBase.Columns("(1-ER_45)")
            Me.columnCreditRiskAmountEUREquER45 = MyBase.Columns("CreditRiskAmountEUREquER45")
            Me.columnNetCreditRiskAmountEUREquER45 = MyBase.Columns("NetCreditRiskAmountEUREquER45")
            Me.columnCoreDefinition = MyBase.Columns("CoreDefinition")
            Me.columnClientGroup = MyBase.Columns("ClientGroup")
            Me.columnClientGroupName = MyBase.Columns("ClientGroupName")
            Me.columnMaturityWithoutCapFloor = MyBase.Columns("MaturityWithoutCapFloor")
            Me.columnEaDweigthedMaturityWithoutCapFloor = MyBase.Columns("EaDweigthedMaturityWithoutCapFloor")
            Me.columnPDxFinalEaD = MyBase.Columns("PDxFinalEaD")
            Me.columnLGDfinalEaDweighted = MyBase.Columns("LGDfinalEaDweighted")
            Me.columnRiskDate = MyBase.Columns("RiskDate")
            Me.columnIdClientGroup = MyBase.Columns("IdClientGroup")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnObligor_Rate = New Global.System.Data.DataColumn("Obligor Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObligor_Rate)
            Me.columnContract_Type = New Global.System.Data.DataColumn("Contract Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContract_Type)
            Me.columnProduct_Type = New Global.System.Data.DataColumn("Product Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_Type)
            Me._columnGL_Master___Account_Type = New Global.System.Data.DataColumn("GL Master / Account Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnGL_Master___Account_Type.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnGL_Master___Account_Type")
            Me._columnGL_Master___Account_Type.ExtendedProperties.Add("Generator_UserColumnName", "GL Master / Account Type")
            MyBase.Columns.Add(Me._columnGL_Master___Account_Type)
            Me._columnCounterparty_Issuer_Collateral_Name = New Global.System.Data.DataColumn("Counterparty/Issuer/Collateral Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCounterparty_Issuer_Collateral_Name.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCounterparty_Issuer_Collateral_Name")
            Me._columnCounterparty_Issuer_Collateral_Name.ExtendedProperties.Add("Generator_UserColumnName", "Counterparty/Issuer/Collateral Name")
            MyBase.Columns.Add(Me._columnCounterparty_Issuer_Collateral_Name)
            Me.columnClient_No = New Global.System.Data.DataColumn("Client No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_No)
            Me.columnContract_Collateral_ID = New Global.System.Data.DataColumn("Contract Collateral ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContract_Collateral_ID)
            Me.columnMaturity_Date = New Global.System.Data.DataColumn("Maturity Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturity_Date)
            Me._columnRemaining_Year_s__to_Maturity = New Global.System.Data.DataColumn("Remaining Year(s) to Maturity", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnRemaining_Year_s__to_Maturity.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnRemaining_Year_s__to_Maturity")
            Me._columnRemaining_Year_s__to_Maturity.ExtendedProperties.Add("Generator_UserColumnName", "Remaining Year(s) to Maturity")
            MyBase.Columns.Add(Me._columnRemaining_Year_s__to_Maturity)
            Me.columnOrg_Ccy = New Global.System.Data.DataColumn("Org Ccy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrg_Ccy)
            Me._columnCredit_Outstanding__Org_Ccy_ = New Global.System.Data.DataColumn("Credit Outstanding (Org Ccy)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Outstanding__Org_Ccy_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Outstanding__Org_Ccy_")
            Me._columnCredit_Outstanding__Org_Ccy_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Outstanding (Org Ccy)")
            MyBase.Columns.Add(Me._columnCredit_Outstanding__Org_Ccy_)
            Me._columnCredit_Outstanding__EUR_Equ_ = New Global.System.Data.DataColumn("Credit Outstanding (EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Outstanding__EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Outstanding__EUR_Equ_")
            Me._columnCredit_Outstanding__EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Outstanding (EUR Equ)")
            MyBase.Columns.Add(Me._columnCredit_Outstanding__EUR_Equ_)
            Me.columnNetCreditOutstandingAmountEUR = New Global.System.Data.DataColumn("NetCreditOutstandingAmountEUR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetCreditOutstandingAmountEUR)
            Me.columnInternalInfo = New Global.System.Data.DataColumn("InternalInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInternalInfo)
            Me.columnPD = New Global.System.Data.DataColumn("PD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD)
            Me._column_1_ER_ = New Global.System.Data.DataColumn("(1-ER)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._column_1_ER_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_1_ER_")
            Me._column_1_ER_.ExtendedProperties.Add("Generator_UserColumnName", "(1-ER)")
            MyBase.Columns.Add(Me._column_1_ER_)
            Me._columnCredit_Risk_Amount_EUR_Equ_ = New Global.System.Data.DataColumn("Credit Risk Amount(EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Risk_Amount_EUR_Equ_")
            Me._columnCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Risk Amount(EUR Equ)")
            MyBase.Columns.Add(Me._columnCredit_Risk_Amount_EUR_Equ_)
            Me._columnNetCredit_Risk_Amount_EUR_Equ_ = New Global.System.Data.DataColumn("NetCredit Risk Amount(EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnNetCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnNetCredit_Risk_Amount_EUR_Equ_")
            Me._columnNetCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "NetCredit Risk Amount(EUR Equ)")
            MyBase.Columns.Add(Me._columnNetCredit_Risk_Amount_EUR_Equ_)
            Me._column_1_ER_45_ = New Global.System.Data.DataColumn("(1-ER_45)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._column_1_ER_45_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_1_ER_45_")
            Me._column_1_ER_45_.ExtendedProperties.Add("Generator_UserColumnName", "(1-ER_45)")
            MyBase.Columns.Add(Me._column_1_ER_45_)
            Me.columnCreditRiskAmountEUREquER45 = New Global.System.Data.DataColumn("CreditRiskAmountEUREquER45", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreditRiskAmountEUREquER45)
            Me.columnNetCreditRiskAmountEUREquER45 = New Global.System.Data.DataColumn("NetCreditRiskAmountEUREquER45", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetCreditRiskAmountEUREquER45)
            Me.columnCoreDefinition = New Global.System.Data.DataColumn("CoreDefinition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreDefinition)
            Me.columnClientGroup = New Global.System.Data.DataColumn("ClientGroup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroup)
            Me.columnClientGroupName = New Global.System.Data.DataColumn("ClientGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroupName)
            Me.columnMaturityWithoutCapFloor = New Global.System.Data.DataColumn("MaturityWithoutCapFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityWithoutCapFloor)
            Me.columnEaDweigthedMaturityWithoutCapFloor = New Global.System.Data.DataColumn("EaDweigthedMaturityWithoutCapFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEaDweigthedMaturityWithoutCapFloor)
            Me.columnPDxFinalEaD = New Global.System.Data.DataColumn("PDxFinalEaD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDxFinalEaD)
            Me.columnLGDfinalEaDweighted = New Global.System.Data.DataColumn("LGDfinalEaDweighted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLGDfinalEaDweighted)
            Me.columnRiskDate = New Global.System.Data.DataColumn("RiskDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiskDate)
            Me.columnIdClientGroup = New Global.System.Data.DataColumn("IdClientGroup", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdClientGroup)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnObligor_Rate.MaxLength = 255
            Me.columnContract_Type.MaxLength = 255
            Me.columnProduct_Type.MaxLength = 255
            Me._columnGL_Master___Account_Type.MaxLength = 255
            Me._columnCounterparty_Issuer_Collateral_Name.MaxLength = 255
            Me.columnClient_No.MaxLength = 255
            Me.columnContract_Collateral_ID.MaxLength = 255
            Me.columnOrg_Ccy.MaxLength = 255
            Me.columnInternalInfo.MaxLength = 255
            Me.columnCoreDefinition.MaxLength = 255
            Me.columnClientGroup.MaxLength = 50
            Me.columnClientGroupName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewScenarioAnalyze_ConcentrationRiskTBA_DetailsRow() As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow
            Return CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChanged(Me, New ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChanging(Me, New ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowDeleted(Me, New ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowDeleting(Me, New ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveScenarioAnalyze_ConcentrationRiskTBA_DetailsRow(ByVal row As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnClientGroup As Global.System.Data.DataColumn
        
        Private columnClientGroupName As Global.System.Data.DataColumn
        
        Private columnSubBorrowersCounter As Global.System.Data.DataColumn
        
        Private columnFinalEadTotalSum As Global.System.Data.DataColumn
        
        Private columnLGD As Global.System.Data.DataColumn
        
        Private columnPD_EaD_weighted As Global.System.Data.DataColumn
        
        Private columnPD_3bps_floor As Global.System.Data.DataColumn
        
        Private columnIndicatorOfFloor As Global.System.Data.DataColumn
        
        Private columnMaturityEADweigthed As Global.System.Data.DataColumn
        
        Private columnR_CoefficientOfColleration As Global.System.Data.DataColumn
        
        Private columnb_MaturityAdjustment As Global.System.Data.DataColumn
        
        Private columnRW_RiskWeightedExposure As Global.System.Data.DataColumn
        
        Private columnUL_UnexpectedLoss As Global.System.Data.DataColumn
        
        Private columns_i As Global.System.Data.DataColumn
        
        Private columnK_i As Global.System.Data.DataColumn
        
        Private columnR_i As Global.System.Data.DataColumn
        
        Private columnVLGD_i As Global.System.Data.DataColumn
        
        Private columnC_i As Global.System.Data.DataColumn
        
        Private columnGA_n As Global.System.Data.DataColumn
        
        Private columnRiskDate As Global.System.Data.DataColumn
        
        Private columnIdDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ScenarioAnalyze_ConcentrationRiskTBA_Totals"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubBorrowersCounterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubBorrowersCounter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FinalEadTotalSumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinalEadTotalSum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LGDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLGD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PD_EaD_weightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD_EaD_weighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PD_3bps_floorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD_3bps_floor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IndicatorOfFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndicatorOfFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityEADweigthedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityEADweigthed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property R_CoefficientOfCollerationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_CoefficientOfColleration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property b_MaturityAdjustmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnb_MaturityAdjustment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RW_RiskWeightedExposureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRW_RiskWeightedExposure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UL_UnexpectedLossColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUL_UnexpectedLoss
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property s_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columns_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property K_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnK_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property R_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VLGD_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVLGD_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property C_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GA_nColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGA_n
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RiskDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiskDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow
            Get
                Return CType(Me.Rows(index),ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChanging As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChanged As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowDeleting As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowDeleted As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddScenarioAnalyze_ConcentrationRiskTBA_TotalsRow(ByVal row As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddScenarioAnalyze_ConcentrationRiskTBA_TotalsRow( _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal SubBorrowersCounter As Double,  _
                    ByVal FinalEadTotalSum As Double,  _
                    ByVal LGD As Double,  _
                    ByVal PD_EaD_weighted As Double,  _
                    ByVal PD_3bps_floor As Double,  _
                    ByVal IndicatorOfFloor As Double,  _
                    ByVal MaturityEADweigthed As Double,  _
                    ByVal R_CoefficientOfColleration As Double,  _
                    ByVal b_MaturityAdjustment As Double,  _
                    ByVal RW_RiskWeightedExposure As Double,  _
                    ByVal UL_UnexpectedLoss As Double,  _
                    ByVal s_i As Double,  _
                    ByVal K_i As Double,  _
                    ByVal R_i As Double,  _
                    ByVal VLGD_i As Double,  _
                    ByVal C_i As Double,  _
                    ByVal GA_n As Decimal,  _
                    ByVal RiskDate As Date,  _
                    ByVal parentScenarioAnalyze_ConcentrationRiskTBA_DateRowByFK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date As ScenarioAnalyze_ConcentrationRiskTBA_DateRow) As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow
            Dim rowScenarioAnalyze_ConcentrationRiskTBA_TotalsRow As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow = CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ClientGroup, ClientGroupName, SubBorrowersCounter, FinalEadTotalSum, LGD, PD_EaD_weighted, PD_3bps_floor, IndicatorOfFloor, MaturityEADweigthed, R_CoefficientOfColleration, b_MaturityAdjustment, RW_RiskWeightedExposure, UL_UnexpectedLoss, s_i, K_i, R_i, VLGD_i, C_i, GA_n, RiskDate, Nothing}
            If (Not (parentScenarioAnalyze_ConcentrationRiskTBA_DateRowByFK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date) Is Nothing) Then
                columnValuesArray(21) = parentScenarioAnalyze_ConcentrationRiskTBA_DateRowByFK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date(0)
            End If
            rowScenarioAnalyze_ConcentrationRiskTBA_TotalsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowScenarioAnalyze_ConcentrationRiskTBA_TotalsRow)
            Return rowScenarioAnalyze_ConcentrationRiskTBA_TotalsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow
            Return CType(Me.Rows.Find(New Object() {ID}),ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable = CType(MyBase.Clone,ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnClientGroup = MyBase.Columns("ClientGroup")
            Me.columnClientGroupName = MyBase.Columns("ClientGroupName")
            Me.columnSubBorrowersCounter = MyBase.Columns("SubBorrowersCounter")
            Me.columnFinalEadTotalSum = MyBase.Columns("FinalEadTotalSum")
            Me.columnLGD = MyBase.Columns("LGD")
            Me.columnPD_EaD_weighted = MyBase.Columns("PD_EaD_weighted")
            Me.columnPD_3bps_floor = MyBase.Columns("PD_3bps_floor")
            Me.columnIndicatorOfFloor = MyBase.Columns("IndicatorOfFloor")
            Me.columnMaturityEADweigthed = MyBase.Columns("MaturityEADweigthed")
            Me.columnR_CoefficientOfColleration = MyBase.Columns("R_CoefficientOfColleration")
            Me.columnb_MaturityAdjustment = MyBase.Columns("b_MaturityAdjustment")
            Me.columnRW_RiskWeightedExposure = MyBase.Columns("RW_RiskWeightedExposure")
            Me.columnUL_UnexpectedLoss = MyBase.Columns("UL_UnexpectedLoss")
            Me.columns_i = MyBase.Columns("s_i")
            Me.columnK_i = MyBase.Columns("K_i")
            Me.columnR_i = MyBase.Columns("R_i")
            Me.columnVLGD_i = MyBase.Columns("VLGD_i")
            Me.columnC_i = MyBase.Columns("C_i")
            Me.columnGA_n = MyBase.Columns("GA_n")
            Me.columnRiskDate = MyBase.Columns("RiskDate")
            Me.columnIdDate = MyBase.Columns("IdDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnClientGroup = New Global.System.Data.DataColumn("ClientGroup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroup)
            Me.columnClientGroupName = New Global.System.Data.DataColumn("ClientGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroupName)
            Me.columnSubBorrowersCounter = New Global.System.Data.DataColumn("SubBorrowersCounter", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubBorrowersCounter)
            Me.columnFinalEadTotalSum = New Global.System.Data.DataColumn("FinalEadTotalSum", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinalEadTotalSum)
            Me.columnLGD = New Global.System.Data.DataColumn("LGD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLGD)
            Me.columnPD_EaD_weighted = New Global.System.Data.DataColumn("PD_EaD_weighted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD_EaD_weighted)
            Me.columnPD_3bps_floor = New Global.System.Data.DataColumn("PD_3bps_floor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD_3bps_floor)
            Me.columnIndicatorOfFloor = New Global.System.Data.DataColumn("IndicatorOfFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndicatorOfFloor)
            Me.columnMaturityEADweigthed = New Global.System.Data.DataColumn("MaturityEADweigthed", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityEADweigthed)
            Me.columnR_CoefficientOfColleration = New Global.System.Data.DataColumn("R_CoefficientOfColleration", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_CoefficientOfColleration)
            Me.columnb_MaturityAdjustment = New Global.System.Data.DataColumn("b_MaturityAdjustment", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnb_MaturityAdjustment)
            Me.columnRW_RiskWeightedExposure = New Global.System.Data.DataColumn("RW_RiskWeightedExposure", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRW_RiskWeightedExposure)
            Me.columnUL_UnexpectedLoss = New Global.System.Data.DataColumn("UL_UnexpectedLoss", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUL_UnexpectedLoss)
            Me.columns_i = New Global.System.Data.DataColumn("s_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columns_i)
            Me.columnK_i = New Global.System.Data.DataColumn("K_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnK_i)
            Me.columnR_i = New Global.System.Data.DataColumn("R_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_i)
            Me.columnVLGD_i = New Global.System.Data.DataColumn("VLGD_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVLGD_i)
            Me.columnC_i = New Global.System.Data.DataColumn("C_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_i)
            Me.columnGA_n = New Global.System.Data.DataColumn("GA_n", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGA_n)
            Me.columnRiskDate = New Global.System.Data.DataColumn("RiskDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiskDate)
            Me.columnIdDate = New Global.System.Data.DataColumn("IdDate", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnClientGroup.MaxLength = 50
            Me.columnClientGroupName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewScenarioAnalyze_ConcentrationRiskTBA_TotalsRow() As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow
            Return CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChanged(Me, New ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChanging(Me, New ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowDeleted(Me, New ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowDeleting(Me, New ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveScenarioAnalyze_ConcentrationRiskTBA_TotalsRow(ByVal row As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ScenarioAnalyze_GeneralStressTest_DateDataTable
        Inherits Global.System.Data.TypedTableBase(Of ScenarioAnalyze_GeneralStressTest_DateRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnRiskDate As Global.System.Data.DataColumn
        
        Private columnLGD_mod As Global.System.Data.DataColumn
        
        Private columnR_Colleration_Mod As Global.System.Data.DataColumn
        
        Private columnObligorRate_Mod As Global.System.Data.DataColumn
        
        Private columnLevelOfConfidence As Global.System.Data.DataColumn
        
        Private columnSumEL As Global.System.Data.DataColumn
        
        Private columnSumUL As Global.System.Data.DataColumn
        
        Private columnnu_Value As Global.System.Data.DataColumn
        
        Private columnp_alpha_Value As Global.System.Data.DataColumn
        
        Private columnb_beta_value As Global.System.Data.DataColumn
        
        Private columnGamma_inv As Global.System.Data.DataColumn
        
        Private columnDelta As Global.System.Data.DataColumn
        
        Private columnK_Value As Global.System.Data.DataColumn
        
        Private columnSumGA_rel As Global.System.Data.DataColumn
        
        Private columnSumGA_Total As Global.System.Data.DataColumn
        
        Private columnIdDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ScenarioAnalyze_GeneralStressTest_Date"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RiskDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiskDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LGD_modColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLGD_mod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property R_Colleration_ModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_Colleration_Mod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ObligorRate_ModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObligorRate_Mod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LevelOfConfidenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLevelOfConfidence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumULColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumUL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property nu_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnu_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property p_alpha_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnp_alpha_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property b_beta_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnb_beta_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Gamma_invColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGamma_inv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DeltaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDelta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property K_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnK_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumGA_relColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumGA_rel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SumGA_TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSumGA_Total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ScenarioAnalyze_GeneralStressTest_DateRow
            Get
                Return CType(Me.Rows(index),ScenarioAnalyze_GeneralStressTest_DateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_DateRowChanging As ScenarioAnalyze_GeneralStressTest_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_DateRowChanged As ScenarioAnalyze_GeneralStressTest_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_DateRowDeleting As ScenarioAnalyze_GeneralStressTest_DateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_DateRowDeleted As ScenarioAnalyze_GeneralStressTest_DateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddScenarioAnalyze_GeneralStressTest_DateRow(ByVal row As ScenarioAnalyze_GeneralStressTest_DateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddScenarioAnalyze_GeneralStressTest_DateRow( _
                    ByVal RiskDate As Date,  _
                    ByVal LGD_mod As Double,  _
                    ByVal R_Colleration_Mod As Double,  _
                    ByVal ObligorRate_Mod As Double,  _
                    ByVal LevelOfConfidence As Double,  _
                    ByVal SumEL As Double,  _
                    ByVal SumUL As Double,  _
                    ByVal nu_Value As Double,  _
                    ByVal p_alpha_Value As Double,  _
                    ByVal b_beta_value As Double,  _
                    ByVal Gamma_inv As Double,  _
                    ByVal Delta As Double,  _
                    ByVal K_Value As Double,  _
                    ByVal SumGA_rel As Decimal,  _
                    ByVal SumGA_Total As Decimal,  _
                    ByVal parentSCENARIO_ANALYZES_DATERowByFK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE As SCENARIO_ANALYZES_DATERow) As ScenarioAnalyze_GeneralStressTest_DateRow
            Dim rowScenarioAnalyze_GeneralStressTest_DateRow As ScenarioAnalyze_GeneralStressTest_DateRow = CType(Me.NewRow,ScenarioAnalyze_GeneralStressTest_DateRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, RiskDate, LGD_mod, R_Colleration_Mod, ObligorRate_Mod, LevelOfConfidence, SumEL, SumUL, nu_Value, p_alpha_Value, b_beta_value, Gamma_inv, Delta, K_Value, SumGA_rel, SumGA_Total, Nothing}
            If (Not (parentSCENARIO_ANALYZES_DATERowByFK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE) Is Nothing) Then
                columnValuesArray(16) = parentSCENARIO_ANALYZES_DATERowByFK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE(0)
            End If
            rowScenarioAnalyze_GeneralStressTest_DateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowScenarioAnalyze_GeneralStressTest_DateRow)
            Return rowScenarioAnalyze_GeneralStressTest_DateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ScenarioAnalyze_GeneralStressTest_DateRow
            Return CType(Me.Rows.Find(New Object() {ID}),ScenarioAnalyze_GeneralStressTest_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ScenarioAnalyze_GeneralStressTest_DateDataTable = CType(MyBase.Clone,ScenarioAnalyze_GeneralStressTest_DateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ScenarioAnalyze_GeneralStressTest_DateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnRiskDate = MyBase.Columns("RiskDate")
            Me.columnLGD_mod = MyBase.Columns("LGD_mod")
            Me.columnR_Colleration_Mod = MyBase.Columns("R_Colleration_Mod")
            Me.columnObligorRate_Mod = MyBase.Columns("ObligorRate_Mod")
            Me.columnLevelOfConfidence = MyBase.Columns("LevelOfConfidence")
            Me.columnSumEL = MyBase.Columns("SumEL")
            Me.columnSumUL = MyBase.Columns("SumUL")
            Me.columnnu_Value = MyBase.Columns("nu_Value")
            Me.columnp_alpha_Value = MyBase.Columns("p_alpha_Value")
            Me.columnb_beta_value = MyBase.Columns("b_beta_value")
            Me.columnGamma_inv = MyBase.Columns("Gamma_inv")
            Me.columnDelta = MyBase.Columns("Delta")
            Me.columnK_Value = MyBase.Columns("K_Value")
            Me.columnSumGA_rel = MyBase.Columns("SumGA_rel")
            Me.columnSumGA_Total = MyBase.Columns("SumGA_Total")
            Me.columnIdDate = MyBase.Columns("IdDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnRiskDate = New Global.System.Data.DataColumn("RiskDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiskDate)
            Me.columnLGD_mod = New Global.System.Data.DataColumn("LGD_mod", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLGD_mod)
            Me.columnR_Colleration_Mod = New Global.System.Data.DataColumn("R_Colleration_Mod", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_Colleration_Mod)
            Me.columnObligorRate_Mod = New Global.System.Data.DataColumn("ObligorRate_Mod", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObligorRate_Mod)
            Me.columnLevelOfConfidence = New Global.System.Data.DataColumn("LevelOfConfidence", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLevelOfConfidence)
            Me.columnSumEL = New Global.System.Data.DataColumn("SumEL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumEL)
            Me.columnSumUL = New Global.System.Data.DataColumn("SumUL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumUL)
            Me.columnnu_Value = New Global.System.Data.DataColumn("nu_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnu_Value)
            Me.columnp_alpha_Value = New Global.System.Data.DataColumn("p_alpha_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnp_alpha_Value)
            Me.columnb_beta_value = New Global.System.Data.DataColumn("b_beta_value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnb_beta_value)
            Me.columnGamma_inv = New Global.System.Data.DataColumn("Gamma_inv", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGamma_inv)
            Me.columnDelta = New Global.System.Data.DataColumn("Delta", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDelta)
            Me.columnK_Value = New Global.System.Data.DataColumn("K_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnK_Value)
            Me.columnSumGA_rel = New Global.System.Data.DataColumn("SumGA_rel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumGA_rel)
            Me.columnSumGA_Total = New Global.System.Data.DataColumn("SumGA_Total", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSumGA_Total)
            Me.columnIdDate = New Global.System.Data.DataColumn("IdDate", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnRiskDate.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewScenarioAnalyze_GeneralStressTest_DateRow() As ScenarioAnalyze_GeneralStressTest_DateRow
            Return CType(Me.NewRow,ScenarioAnalyze_GeneralStressTest_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ScenarioAnalyze_GeneralStressTest_DateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ScenarioAnalyze_GeneralStressTest_DateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_DateRowChangedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_DateRowChanged(Me, New ScenarioAnalyze_GeneralStressTest_DateRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_DateRowChangingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_DateRowChanging(Me, New ScenarioAnalyze_GeneralStressTest_DateRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_DateRowDeletedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_DateRowDeleted(Me, New ScenarioAnalyze_GeneralStressTest_DateRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_DateRowDeletingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_DateRowDeleting(Me, New ScenarioAnalyze_GeneralStressTest_DateRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_DateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveScenarioAnalyze_GeneralStressTest_DateRow(ByVal row As ScenarioAnalyze_GeneralStressTest_DateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ScenarioAnalyze_GeneralStressTest_DateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ScenarioAnalyze_GeneralStressTest_DetailsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ScenarioAnalyze_GeneralStressTest_DetailsRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnObligor_Rate As Global.System.Data.DataColumn
        
        Private columnContract_Type As Global.System.Data.DataColumn
        
        Private columnProduct_Type As Global.System.Data.DataColumn
        
        Private _columnGL_Master___Account_Type As Global.System.Data.DataColumn
        
        Private _columnCounterparty_Issuer_Collateral_Name As Global.System.Data.DataColumn
        
        Private columnClient_No As Global.System.Data.DataColumn
        
        Private columnContract_Collateral_ID As Global.System.Data.DataColumn
        
        Private columnMaturity_Date As Global.System.Data.DataColumn
        
        Private _columnRemaining_Year_s__to_Maturity As Global.System.Data.DataColumn
        
        Private columnOrg_Ccy As Global.System.Data.DataColumn
        
        Private _columnCredit_Outstanding__Org_Ccy_ As Global.System.Data.DataColumn
        
        Private _columnCredit_Outstanding__EUR_Equ_ As Global.System.Data.DataColumn
        
        Private columnNetCreditOutstandingAmountEUR As Global.System.Data.DataColumn
        
        Private columnInternalInfo As Global.System.Data.DataColumn
        
        Private columnPD As Global.System.Data.DataColumn
        
        Private _column_1_ER_ As Global.System.Data.DataColumn
        
        Private _columnCredit_Risk_Amount_EUR_Equ_ As Global.System.Data.DataColumn
        
        Private _columnNetCredit_Risk_Amount_EUR_Equ_ As Global.System.Data.DataColumn
        
        Private _column_1_ER_45_ As Global.System.Data.DataColumn
        
        Private columnCreditRiskAmountEUREquER45 As Global.System.Data.DataColumn
        
        Private columnNetCreditRiskAmountEUREquER45 As Global.System.Data.DataColumn
        
        Private columnCoreDefinition As Global.System.Data.DataColumn
        
        Private columnClientGroup As Global.System.Data.DataColumn
        
        Private columnClientGroupName As Global.System.Data.DataColumn
        
        Private columnMaturityWithoutCapFloor As Global.System.Data.DataColumn
        
        Private columnEaDweigthedMaturityWithoutCapFloor As Global.System.Data.DataColumn
        
        Private columnPDxFinalEaD As Global.System.Data.DataColumn
        
        Private columnLGDfinalEaDweighted As Global.System.Data.DataColumn
        
        Private columnRiskDate As Global.System.Data.DataColumn
        
        Private columnIdClientGroup As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ScenarioAnalyze_GeneralStressTest_Details"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Obligor_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObligor_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Contract_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContract_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Product_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _GL_Master___Account_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnGL_Master___Account_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Counterparty_Issuer_Collateral_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnCounterparty_Issuer_Collateral_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Client_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Contract_Collateral_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContract_Collateral_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Maturity_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturity_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Remaining_Year_s__to_MaturityColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnRemaining_Year_s__to_Maturity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Org_CcyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrg_Ccy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Outstanding__Org_Ccy_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Outstanding__Org_Ccy_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Outstanding__EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Outstanding__EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetCreditOutstandingAmountEURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetCreditOutstandingAmountEUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InternalInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInternalInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property __1_ER_Column() As Global.System.Data.DataColumn
            Get
                Return Me._column_1_ER_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Risk_Amount_EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Risk_Amount_EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _NetCredit_Risk_Amount_EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnNetCredit_Risk_Amount_EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property __1_ER_45_Column() As Global.System.Data.DataColumn
            Get
                Return Me._column_1_ER_45_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CreditRiskAmountEUREquER45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreditRiskAmountEUREquER45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetCreditRiskAmountEUREquER45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetCreditRiskAmountEUREquER45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CoreDefinitionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreDefinition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityWithoutCapFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityWithoutCapFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EaDweigthedMaturityWithoutCapFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEaDweigthedMaturityWithoutCapFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PDxFinalEaDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDxFinalEaD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LGDfinalEaDweightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLGDfinalEaDweighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RiskDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiskDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ScenarioAnalyze_GeneralStressTest_DetailsRow
            Get
                Return CType(Me.Rows(index),ScenarioAnalyze_GeneralStressTest_DetailsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_DetailsRowChanging As ScenarioAnalyze_GeneralStressTest_DetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_DetailsRowChanged As ScenarioAnalyze_GeneralStressTest_DetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_DetailsRowDeleting As ScenarioAnalyze_GeneralStressTest_DetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_DetailsRowDeleted As ScenarioAnalyze_GeneralStressTest_DetailsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddScenarioAnalyze_GeneralStressTest_DetailsRow(ByVal row As ScenarioAnalyze_GeneralStressTest_DetailsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddScenarioAnalyze_GeneralStressTest_DetailsRow( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal _GL_Master___Account_Type As String,  _
                    ByVal _Counterparty_Issuer_Collateral_Name As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Date,  _
                    ByVal _Remaining_Year_s__to_Maturity As Double,  _
                    ByVal Org_Ccy As String,  _
                    ByVal _Credit_Outstanding__Org_Ccy_ As Double,  _
                    ByVal _Credit_Outstanding__EUR_Equ_ As Double,  _
                    ByVal NetCreditOutstandingAmountEUR As Double,  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Double,  _
                    ByVal __1_ER_ As Double,  _
                    ByVal _Credit_Risk_Amount_EUR_Equ_ As Double,  _
                    ByVal _NetCredit_Risk_Amount_EUR_Equ_ As Double,  _
                    ByVal __1_ER_45_ As Double,  _
                    ByVal CreditRiskAmountEUREquER45 As Double,  _
                    ByVal NetCreditRiskAmountEUREquER45 As Double,  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Double,  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Double,  _
                    ByVal PDxFinalEaD As Double,  _
                    ByVal LGDfinalEaDweighted As Double,  _
                    ByVal RiskDate As Date,  _
                    ByVal parentScenarioAnalyze_GeneralStressTest_TotalsRowByFK_ScenarioAnalyze_GeneralStressTest_Details_Totals As ScenarioAnalyze_GeneralStressTest_TotalsRow) As ScenarioAnalyze_GeneralStressTest_DetailsRow
            Dim rowScenarioAnalyze_GeneralStressTest_DetailsRow As ScenarioAnalyze_GeneralStressTest_DetailsRow = CType(Me.NewRow,ScenarioAnalyze_GeneralStressTest_DetailsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Obligor_Rate, Contract_Type, Product_Type, _GL_Master___Account_Type, _Counterparty_Issuer_Collateral_Name, Client_No, Contract_Collateral_ID, Maturity_Date, _Remaining_Year_s__to_Maturity, Org_Ccy, _Credit_Outstanding__Org_Ccy_, _Credit_Outstanding__EUR_Equ_, NetCreditOutstandingAmountEUR, InternalInfo, PD, __1_ER_, _Credit_Risk_Amount_EUR_Equ_, _NetCredit_Risk_Amount_EUR_Equ_, __1_ER_45_, CreditRiskAmountEUREquER45, NetCreditRiskAmountEUREquER45, CoreDefinition, ClientGroup, ClientGroupName, MaturityWithoutCapFloor, EaDweigthedMaturityWithoutCapFloor, PDxFinalEaD, LGDfinalEaDweighted, RiskDate, Nothing}
            If (Not (parentScenarioAnalyze_GeneralStressTest_TotalsRowByFK_ScenarioAnalyze_GeneralStressTest_Details_Totals) Is Nothing) Then
                columnValuesArray(30) = parentScenarioAnalyze_GeneralStressTest_TotalsRowByFK_ScenarioAnalyze_GeneralStressTest_Details_Totals(0)
            End If
            rowScenarioAnalyze_GeneralStressTest_DetailsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowScenarioAnalyze_GeneralStressTest_DetailsRow)
            Return rowScenarioAnalyze_GeneralStressTest_DetailsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ScenarioAnalyze_GeneralStressTest_DetailsRow
            Return CType(Me.Rows.Find(New Object() {ID}),ScenarioAnalyze_GeneralStressTest_DetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ScenarioAnalyze_GeneralStressTest_DetailsDataTable = CType(MyBase.Clone,ScenarioAnalyze_GeneralStressTest_DetailsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ScenarioAnalyze_GeneralStressTest_DetailsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnObligor_Rate = MyBase.Columns("Obligor Rate")
            Me.columnContract_Type = MyBase.Columns("Contract Type")
            Me.columnProduct_Type = MyBase.Columns("Product Type")
            Me._columnGL_Master___Account_Type = MyBase.Columns("GL Master / Account Type")
            Me._columnCounterparty_Issuer_Collateral_Name = MyBase.Columns("Counterparty/Issuer/Collateral Name")
            Me.columnClient_No = MyBase.Columns("Client No")
            Me.columnContract_Collateral_ID = MyBase.Columns("Contract Collateral ID")
            Me.columnMaturity_Date = MyBase.Columns("Maturity Date")
            Me._columnRemaining_Year_s__to_Maturity = MyBase.Columns("Remaining Year(s) to Maturity")
            Me.columnOrg_Ccy = MyBase.Columns("Org Ccy")
            Me._columnCredit_Outstanding__Org_Ccy_ = MyBase.Columns("Credit Outstanding (Org Ccy)")
            Me._columnCredit_Outstanding__EUR_Equ_ = MyBase.Columns("Credit Outstanding (EUR Equ)")
            Me.columnNetCreditOutstandingAmountEUR = MyBase.Columns("NetCreditOutstandingAmountEUR")
            Me.columnInternalInfo = MyBase.Columns("InternalInfo")
            Me.columnPD = MyBase.Columns("PD")
            Me._column_1_ER_ = MyBase.Columns("(1-ER)")
            Me._columnCredit_Risk_Amount_EUR_Equ_ = MyBase.Columns("Credit Risk Amount(EUR Equ)")
            Me._columnNetCredit_Risk_Amount_EUR_Equ_ = MyBase.Columns("NetCredit Risk Amount(EUR Equ)")
            Me._column_1_ER_45_ = MyBase.Columns("(1-ER_45)")
            Me.columnCreditRiskAmountEUREquER45 = MyBase.Columns("CreditRiskAmountEUREquER45")
            Me.columnNetCreditRiskAmountEUREquER45 = MyBase.Columns("NetCreditRiskAmountEUREquER45")
            Me.columnCoreDefinition = MyBase.Columns("CoreDefinition")
            Me.columnClientGroup = MyBase.Columns("ClientGroup")
            Me.columnClientGroupName = MyBase.Columns("ClientGroupName")
            Me.columnMaturityWithoutCapFloor = MyBase.Columns("MaturityWithoutCapFloor")
            Me.columnEaDweigthedMaturityWithoutCapFloor = MyBase.Columns("EaDweigthedMaturityWithoutCapFloor")
            Me.columnPDxFinalEaD = MyBase.Columns("PDxFinalEaD")
            Me.columnLGDfinalEaDweighted = MyBase.Columns("LGDfinalEaDweighted")
            Me.columnRiskDate = MyBase.Columns("RiskDate")
            Me.columnIdClientGroup = MyBase.Columns("IdClientGroup")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnObligor_Rate = New Global.System.Data.DataColumn("Obligor Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObligor_Rate)
            Me.columnContract_Type = New Global.System.Data.DataColumn("Contract Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContract_Type)
            Me.columnProduct_Type = New Global.System.Data.DataColumn("Product Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_Type)
            Me._columnGL_Master___Account_Type = New Global.System.Data.DataColumn("GL Master / Account Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnGL_Master___Account_Type.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnGL_Master___Account_Type")
            Me._columnGL_Master___Account_Type.ExtendedProperties.Add("Generator_UserColumnName", "GL Master / Account Type")
            MyBase.Columns.Add(Me._columnGL_Master___Account_Type)
            Me._columnCounterparty_Issuer_Collateral_Name = New Global.System.Data.DataColumn("Counterparty/Issuer/Collateral Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCounterparty_Issuer_Collateral_Name.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCounterparty_Issuer_Collateral_Name")
            Me._columnCounterparty_Issuer_Collateral_Name.ExtendedProperties.Add("Generator_UserColumnName", "Counterparty/Issuer/Collateral Name")
            MyBase.Columns.Add(Me._columnCounterparty_Issuer_Collateral_Name)
            Me.columnClient_No = New Global.System.Data.DataColumn("Client No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_No)
            Me.columnContract_Collateral_ID = New Global.System.Data.DataColumn("Contract Collateral ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContract_Collateral_ID)
            Me.columnMaturity_Date = New Global.System.Data.DataColumn("Maturity Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturity_Date)
            Me._columnRemaining_Year_s__to_Maturity = New Global.System.Data.DataColumn("Remaining Year(s) to Maturity", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnRemaining_Year_s__to_Maturity.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnRemaining_Year_s__to_Maturity")
            Me._columnRemaining_Year_s__to_Maturity.ExtendedProperties.Add("Generator_UserColumnName", "Remaining Year(s) to Maturity")
            MyBase.Columns.Add(Me._columnRemaining_Year_s__to_Maturity)
            Me.columnOrg_Ccy = New Global.System.Data.DataColumn("Org Ccy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrg_Ccy)
            Me._columnCredit_Outstanding__Org_Ccy_ = New Global.System.Data.DataColumn("Credit Outstanding (Org Ccy)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Outstanding__Org_Ccy_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Outstanding__Org_Ccy_")
            Me._columnCredit_Outstanding__Org_Ccy_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Outstanding (Org Ccy)")
            MyBase.Columns.Add(Me._columnCredit_Outstanding__Org_Ccy_)
            Me._columnCredit_Outstanding__EUR_Equ_ = New Global.System.Data.DataColumn("Credit Outstanding (EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Outstanding__EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Outstanding__EUR_Equ_")
            Me._columnCredit_Outstanding__EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Outstanding (EUR Equ)")
            MyBase.Columns.Add(Me._columnCredit_Outstanding__EUR_Equ_)
            Me.columnNetCreditOutstandingAmountEUR = New Global.System.Data.DataColumn("NetCreditOutstandingAmountEUR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetCreditOutstandingAmountEUR)
            Me.columnInternalInfo = New Global.System.Data.DataColumn("InternalInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInternalInfo)
            Me.columnPD = New Global.System.Data.DataColumn("PD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD)
            Me._column_1_ER_ = New Global.System.Data.DataColumn("(1-ER)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._column_1_ER_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_1_ER_")
            Me._column_1_ER_.ExtendedProperties.Add("Generator_UserColumnName", "(1-ER)")
            MyBase.Columns.Add(Me._column_1_ER_)
            Me._columnCredit_Risk_Amount_EUR_Equ_ = New Global.System.Data.DataColumn("Credit Risk Amount(EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Risk_Amount_EUR_Equ_")
            Me._columnCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Risk Amount(EUR Equ)")
            MyBase.Columns.Add(Me._columnCredit_Risk_Amount_EUR_Equ_)
            Me._columnNetCredit_Risk_Amount_EUR_Equ_ = New Global.System.Data.DataColumn("NetCredit Risk Amount(EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnNetCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnNetCredit_Risk_Amount_EUR_Equ_")
            Me._columnNetCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "NetCredit Risk Amount(EUR Equ)")
            MyBase.Columns.Add(Me._columnNetCredit_Risk_Amount_EUR_Equ_)
            Me._column_1_ER_45_ = New Global.System.Data.DataColumn("(1-ER_45)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._column_1_ER_45_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_1_ER_45_")
            Me._column_1_ER_45_.ExtendedProperties.Add("Generator_UserColumnName", "(1-ER_45)")
            MyBase.Columns.Add(Me._column_1_ER_45_)
            Me.columnCreditRiskAmountEUREquER45 = New Global.System.Data.DataColumn("CreditRiskAmountEUREquER45", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreditRiskAmountEUREquER45)
            Me.columnNetCreditRiskAmountEUREquER45 = New Global.System.Data.DataColumn("NetCreditRiskAmountEUREquER45", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetCreditRiskAmountEUREquER45)
            Me.columnCoreDefinition = New Global.System.Data.DataColumn("CoreDefinition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreDefinition)
            Me.columnClientGroup = New Global.System.Data.DataColumn("ClientGroup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroup)
            Me.columnClientGroupName = New Global.System.Data.DataColumn("ClientGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroupName)
            Me.columnMaturityWithoutCapFloor = New Global.System.Data.DataColumn("MaturityWithoutCapFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityWithoutCapFloor)
            Me.columnEaDweigthedMaturityWithoutCapFloor = New Global.System.Data.DataColumn("EaDweigthedMaturityWithoutCapFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEaDweigthedMaturityWithoutCapFloor)
            Me.columnPDxFinalEaD = New Global.System.Data.DataColumn("PDxFinalEaD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDxFinalEaD)
            Me.columnLGDfinalEaDweighted = New Global.System.Data.DataColumn("LGDfinalEaDweighted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLGDfinalEaDweighted)
            Me.columnRiskDate = New Global.System.Data.DataColumn("RiskDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiskDate)
            Me.columnIdClientGroup = New Global.System.Data.DataColumn("IdClientGroup", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdClientGroup)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnObligor_Rate.MaxLength = 255
            Me.columnContract_Type.MaxLength = 255
            Me.columnProduct_Type.MaxLength = 255
            Me._columnGL_Master___Account_Type.MaxLength = 255
            Me._columnCounterparty_Issuer_Collateral_Name.MaxLength = 255
            Me.columnClient_No.MaxLength = 255
            Me.columnContract_Collateral_ID.MaxLength = 255
            Me.columnOrg_Ccy.MaxLength = 255
            Me.columnInternalInfo.MaxLength = 255
            Me.columnCoreDefinition.MaxLength = 255
            Me.columnClientGroup.MaxLength = 50
            Me.columnClientGroupName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewScenarioAnalyze_GeneralStressTest_DetailsRow() As ScenarioAnalyze_GeneralStressTest_DetailsRow
            Return CType(Me.NewRow,ScenarioAnalyze_GeneralStressTest_DetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ScenarioAnalyze_GeneralStressTest_DetailsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ScenarioAnalyze_GeneralStressTest_DetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_DetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_DetailsRowChanged(Me, New ScenarioAnalyze_GeneralStressTest_DetailsRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_DetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_DetailsRowChanging(Me, New ScenarioAnalyze_GeneralStressTest_DetailsRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_DetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_DetailsRowDeleted(Me, New ScenarioAnalyze_GeneralStressTest_DetailsRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_DetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_DetailsRowDeleting(Me, New ScenarioAnalyze_GeneralStressTest_DetailsRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_DetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveScenarioAnalyze_GeneralStressTest_DetailsRow(ByVal row As ScenarioAnalyze_GeneralStressTest_DetailsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ScenarioAnalyze_GeneralStressTest_DetailsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ScenarioAnalyze_GeneralStressTest_TotalsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ScenarioAnalyze_GeneralStressTest_TotalsRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnClientGroup As Global.System.Data.DataColumn
        
        Private columnClientGroupName As Global.System.Data.DataColumn
        
        Private columnSubBorrowersCounter As Global.System.Data.DataColumn
        
        Private columnFinalEadTotalSum As Global.System.Data.DataColumn
        
        Private columnLGD As Global.System.Data.DataColumn
        
        Private columnPD_EaD_weighted As Global.System.Data.DataColumn
        
        Private columnPD_3bps_floor As Global.System.Data.DataColumn
        
        Private columnIndicatorOfFloor As Global.System.Data.DataColumn
        
        Private columnMaturityEADweigthed As Global.System.Data.DataColumn
        
        Private columnR_CoefficientOfColleration As Global.System.Data.DataColumn
        
        Private columnb_MaturityAdjustment As Global.System.Data.DataColumn
        
        Private columnRW_RiskWeightedExposure As Global.System.Data.DataColumn
        
        Private columnUL_UnexpectedLoss As Global.System.Data.DataColumn
        
        Private columns_i As Global.System.Data.DataColumn
        
        Private columnK_i As Global.System.Data.DataColumn
        
        Private columnR_i As Global.System.Data.DataColumn
        
        Private columnVLGD_i As Global.System.Data.DataColumn
        
        Private columnC_i As Global.System.Data.DataColumn
        
        Private columnGA_n As Global.System.Data.DataColumn
        
        Private columnRiskDate As Global.System.Data.DataColumn
        
        Private columnIdDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ScenarioAnalyze_GeneralStressTest_Totals"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubBorrowersCounterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubBorrowersCounter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FinalEadTotalSumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinalEadTotalSum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LGDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLGD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PD_EaD_weightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD_EaD_weighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PD_3bps_floorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD_3bps_floor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IndicatorOfFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndicatorOfFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityEADweigthedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityEADweigthed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property R_CoefficientOfCollerationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_CoefficientOfColleration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property b_MaturityAdjustmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnb_MaturityAdjustment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RW_RiskWeightedExposureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRW_RiskWeightedExposure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UL_UnexpectedLossColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUL_UnexpectedLoss
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property s_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columns_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property K_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnK_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property R_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnR_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VLGD_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVLGD_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property C_iColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_i
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GA_nColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGA_n
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RiskDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiskDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ScenarioAnalyze_GeneralStressTest_TotalsRow
            Get
                Return CType(Me.Rows(index),ScenarioAnalyze_GeneralStressTest_TotalsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_TotalsRowChanging As ScenarioAnalyze_GeneralStressTest_TotalsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_TotalsRowChanged As ScenarioAnalyze_GeneralStressTest_TotalsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_TotalsRowDeleting As ScenarioAnalyze_GeneralStressTest_TotalsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_TotalsRowDeleted As ScenarioAnalyze_GeneralStressTest_TotalsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddScenarioAnalyze_GeneralStressTest_TotalsRow(ByVal row As ScenarioAnalyze_GeneralStressTest_TotalsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddScenarioAnalyze_GeneralStressTest_TotalsRow( _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal SubBorrowersCounter As Double,  _
                    ByVal FinalEadTotalSum As Double,  _
                    ByVal LGD As Double,  _
                    ByVal PD_EaD_weighted As Double,  _
                    ByVal PD_3bps_floor As Double,  _
                    ByVal IndicatorOfFloor As Double,  _
                    ByVal MaturityEADweigthed As Double,  _
                    ByVal R_CoefficientOfColleration As Double,  _
                    ByVal b_MaturityAdjustment As Double,  _
                    ByVal RW_RiskWeightedExposure As Double,  _
                    ByVal UL_UnexpectedLoss As Double,  _
                    ByVal s_i As Double,  _
                    ByVal K_i As Double,  _
                    ByVal R_i As Double,  _
                    ByVal VLGD_i As Double,  _
                    ByVal C_i As Double,  _
                    ByVal GA_n As Decimal,  _
                    ByVal RiskDate As Date,  _
                    ByVal parentScenarioAnalyze_GeneralStressTest_DateRowByFK_ScenarioAnalyze_GeneralStressTest_Totals_Date As ScenarioAnalyze_GeneralStressTest_DateRow) As ScenarioAnalyze_GeneralStressTest_TotalsRow
            Dim rowScenarioAnalyze_GeneralStressTest_TotalsRow As ScenarioAnalyze_GeneralStressTest_TotalsRow = CType(Me.NewRow,ScenarioAnalyze_GeneralStressTest_TotalsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ClientGroup, ClientGroupName, SubBorrowersCounter, FinalEadTotalSum, LGD, PD_EaD_weighted, PD_3bps_floor, IndicatorOfFloor, MaturityEADweigthed, R_CoefficientOfColleration, b_MaturityAdjustment, RW_RiskWeightedExposure, UL_UnexpectedLoss, s_i, K_i, R_i, VLGD_i, C_i, GA_n, RiskDate, Nothing}
            If (Not (parentScenarioAnalyze_GeneralStressTest_DateRowByFK_ScenarioAnalyze_GeneralStressTest_Totals_Date) Is Nothing) Then
                columnValuesArray(21) = parentScenarioAnalyze_GeneralStressTest_DateRowByFK_ScenarioAnalyze_GeneralStressTest_Totals_Date(0)
            End If
            rowScenarioAnalyze_GeneralStressTest_TotalsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowScenarioAnalyze_GeneralStressTest_TotalsRow)
            Return rowScenarioAnalyze_GeneralStressTest_TotalsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ScenarioAnalyze_GeneralStressTest_TotalsRow
            Return CType(Me.Rows.Find(New Object() {ID}),ScenarioAnalyze_GeneralStressTest_TotalsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ScenarioAnalyze_GeneralStressTest_TotalsDataTable = CType(MyBase.Clone,ScenarioAnalyze_GeneralStressTest_TotalsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ScenarioAnalyze_GeneralStressTest_TotalsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnClientGroup = MyBase.Columns("ClientGroup")
            Me.columnClientGroupName = MyBase.Columns("ClientGroupName")
            Me.columnSubBorrowersCounter = MyBase.Columns("SubBorrowersCounter")
            Me.columnFinalEadTotalSum = MyBase.Columns("FinalEadTotalSum")
            Me.columnLGD = MyBase.Columns("LGD")
            Me.columnPD_EaD_weighted = MyBase.Columns("PD_EaD_weighted")
            Me.columnPD_3bps_floor = MyBase.Columns("PD_3bps_floor")
            Me.columnIndicatorOfFloor = MyBase.Columns("IndicatorOfFloor")
            Me.columnMaturityEADweigthed = MyBase.Columns("MaturityEADweigthed")
            Me.columnR_CoefficientOfColleration = MyBase.Columns("R_CoefficientOfColleration")
            Me.columnb_MaturityAdjustment = MyBase.Columns("b_MaturityAdjustment")
            Me.columnRW_RiskWeightedExposure = MyBase.Columns("RW_RiskWeightedExposure")
            Me.columnUL_UnexpectedLoss = MyBase.Columns("UL_UnexpectedLoss")
            Me.columns_i = MyBase.Columns("s_i")
            Me.columnK_i = MyBase.Columns("K_i")
            Me.columnR_i = MyBase.Columns("R_i")
            Me.columnVLGD_i = MyBase.Columns("VLGD_i")
            Me.columnC_i = MyBase.Columns("C_i")
            Me.columnGA_n = MyBase.Columns("GA_n")
            Me.columnRiskDate = MyBase.Columns("RiskDate")
            Me.columnIdDate = MyBase.Columns("IdDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnClientGroup = New Global.System.Data.DataColumn("ClientGroup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroup)
            Me.columnClientGroupName = New Global.System.Data.DataColumn("ClientGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroupName)
            Me.columnSubBorrowersCounter = New Global.System.Data.DataColumn("SubBorrowersCounter", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubBorrowersCounter)
            Me.columnFinalEadTotalSum = New Global.System.Data.DataColumn("FinalEadTotalSum", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinalEadTotalSum)
            Me.columnLGD = New Global.System.Data.DataColumn("LGD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLGD)
            Me.columnPD_EaD_weighted = New Global.System.Data.DataColumn("PD_EaD_weighted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD_EaD_weighted)
            Me.columnPD_3bps_floor = New Global.System.Data.DataColumn("PD_3bps_floor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD_3bps_floor)
            Me.columnIndicatorOfFloor = New Global.System.Data.DataColumn("IndicatorOfFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndicatorOfFloor)
            Me.columnMaturityEADweigthed = New Global.System.Data.DataColumn("MaturityEADweigthed", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityEADweigthed)
            Me.columnR_CoefficientOfColleration = New Global.System.Data.DataColumn("R_CoefficientOfColleration", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_CoefficientOfColleration)
            Me.columnb_MaturityAdjustment = New Global.System.Data.DataColumn("b_MaturityAdjustment", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnb_MaturityAdjustment)
            Me.columnRW_RiskWeightedExposure = New Global.System.Data.DataColumn("RW_RiskWeightedExposure", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRW_RiskWeightedExposure)
            Me.columnUL_UnexpectedLoss = New Global.System.Data.DataColumn("UL_UnexpectedLoss", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUL_UnexpectedLoss)
            Me.columns_i = New Global.System.Data.DataColumn("s_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columns_i)
            Me.columnK_i = New Global.System.Data.DataColumn("K_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnK_i)
            Me.columnR_i = New Global.System.Data.DataColumn("R_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnR_i)
            Me.columnVLGD_i = New Global.System.Data.DataColumn("VLGD_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVLGD_i)
            Me.columnC_i = New Global.System.Data.DataColumn("C_i", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_i)
            Me.columnGA_n = New Global.System.Data.DataColumn("GA_n", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGA_n)
            Me.columnRiskDate = New Global.System.Data.DataColumn("RiskDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiskDate)
            Me.columnIdDate = New Global.System.Data.DataColumn("IdDate", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdDate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnClientGroup.MaxLength = 50
            Me.columnClientGroupName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewScenarioAnalyze_GeneralStressTest_TotalsRow() As ScenarioAnalyze_GeneralStressTest_TotalsRow
            Return CType(Me.NewRow,ScenarioAnalyze_GeneralStressTest_TotalsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ScenarioAnalyze_GeneralStressTest_TotalsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ScenarioAnalyze_GeneralStressTest_TotalsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_TotalsRowChangedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_TotalsRowChanged(Me, New ScenarioAnalyze_GeneralStressTest_TotalsRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_TotalsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_TotalsRowChangingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_TotalsRowChanging(Me, New ScenarioAnalyze_GeneralStressTest_TotalsRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_TotalsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_TotalsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_TotalsRowDeleted(Me, New ScenarioAnalyze_GeneralStressTest_TotalsRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_TotalsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_TotalsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_TotalsRowDeleting(Me, New ScenarioAnalyze_GeneralStressTest_TotalsRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_TotalsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveScenarioAnalyze_GeneralStressTest_TotalsRow(ByVal row As ScenarioAnalyze_GeneralStressTest_TotalsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ScenarioAnalyze_GeneralStressTest_TotalsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable
        Inherits Global.System.Data.TypedTableBase(Of ScenarioAnalyze_GeneralStressTest_DetailsALLRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnObligor_Rate As Global.System.Data.DataColumn
        
        Private columnContract_Type As Global.System.Data.DataColumn
        
        Private columnProduct_Type As Global.System.Data.DataColumn
        
        Private _columnGL_Master___Account_Type As Global.System.Data.DataColumn
        
        Private _columnCounterparty_Issuer_Collateral_Name As Global.System.Data.DataColumn
        
        Private columnClient_No As Global.System.Data.DataColumn
        
        Private columnContract_Collateral_ID As Global.System.Data.DataColumn
        
        Private columnMaturity_Date As Global.System.Data.DataColumn
        
        Private _columnRemaining_Year_s__to_Maturity As Global.System.Data.DataColumn
        
        Private columnOrg_Ccy As Global.System.Data.DataColumn
        
        Private _columnCredit_Outstanding__Org_Ccy_ As Global.System.Data.DataColumn
        
        Private _columnCredit_Outstanding__EUR_Equ_ As Global.System.Data.DataColumn
        
        Private columnNetCreditOutstandingAmountEUR As Global.System.Data.DataColumn
        
        Private columnInternalInfo As Global.System.Data.DataColumn
        
        Private columnPD As Global.System.Data.DataColumn
        
        Private _column_1_ER_ As Global.System.Data.DataColumn
        
        Private _columnCredit_Risk_Amount_EUR_Equ_ As Global.System.Data.DataColumn
        
        Private _columnNetCredit_Risk_Amount_EUR_Equ_ As Global.System.Data.DataColumn
        
        Private _column_1_ER_45_ As Global.System.Data.DataColumn
        
        Private columnCreditRiskAmountEUREquER45 As Global.System.Data.DataColumn
        
        Private columnNetCreditRiskAmountEUREquER45 As Global.System.Data.DataColumn
        
        Private columnCoreDefinition As Global.System.Data.DataColumn
        
        Private columnClientGroup As Global.System.Data.DataColumn
        
        Private columnClientGroupName As Global.System.Data.DataColumn
        
        Private columnMaturityWithoutCapFloor As Global.System.Data.DataColumn
        
        Private columnEaDweigthedMaturityWithoutCapFloor As Global.System.Data.DataColumn
        
        Private columnPDxFinalEaD As Global.System.Data.DataColumn
        
        Private columnLGDfinalEaDweighted As Global.System.Data.DataColumn
        
        Private columnRiskDate As Global.System.Data.DataColumn
        
        Private columnIdClientGroup As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ScenarioAnalyze_GeneralStressTest_DetailsALL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Obligor_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObligor_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Contract_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContract_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Product_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _GL_Master___Account_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnGL_Master___Account_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Counterparty_Issuer_Collateral_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnCounterparty_Issuer_Collateral_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Client_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Contract_Collateral_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContract_Collateral_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Maturity_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturity_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Remaining_Year_s__to_MaturityColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnRemaining_Year_s__to_Maturity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Org_CcyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrg_Ccy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Outstanding__Org_Ccy_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Outstanding__Org_Ccy_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Outstanding__EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Outstanding__EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetCreditOutstandingAmountEURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetCreditOutstandingAmountEUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InternalInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInternalInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property __1_ER_Column() As Global.System.Data.DataColumn
            Get
                Return Me._column_1_ER_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Risk_Amount_EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Risk_Amount_EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _NetCredit_Risk_Amount_EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnNetCredit_Risk_Amount_EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property __1_ER_45_Column() As Global.System.Data.DataColumn
            Get
                Return Me._column_1_ER_45_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CreditRiskAmountEUREquER45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreditRiskAmountEUREquER45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetCreditRiskAmountEUREquER45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetCreditRiskAmountEUREquER45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CoreDefinitionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreDefinition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityWithoutCapFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityWithoutCapFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EaDweigthedMaturityWithoutCapFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEaDweigthedMaturityWithoutCapFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PDxFinalEaDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDxFinalEaD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LGDfinalEaDweightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLGDfinalEaDweighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RiskDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiskDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ScenarioAnalyze_GeneralStressTest_DetailsALLRow
            Get
                Return CType(Me.Rows(index),ScenarioAnalyze_GeneralStressTest_DetailsALLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_DetailsALLRowChanging As ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_DetailsALLRowChanged As ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_DetailsALLRowDeleting As ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_GeneralStressTest_DetailsALLRowDeleted As ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddScenarioAnalyze_GeneralStressTest_DetailsALLRow(ByVal row As ScenarioAnalyze_GeneralStressTest_DetailsALLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddScenarioAnalyze_GeneralStressTest_DetailsALLRow( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal _GL_Master___Account_Type As String,  _
                    ByVal _Counterparty_Issuer_Collateral_Name As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Date,  _
                    ByVal _Remaining_Year_s__to_Maturity As Double,  _
                    ByVal Org_Ccy As String,  _
                    ByVal _Credit_Outstanding__Org_Ccy_ As Double,  _
                    ByVal _Credit_Outstanding__EUR_Equ_ As Double,  _
                    ByVal NetCreditOutstandingAmountEUR As Double,  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Double,  _
                    ByVal __1_ER_ As Double,  _
                    ByVal _Credit_Risk_Amount_EUR_Equ_ As Double,  _
                    ByVal _NetCredit_Risk_Amount_EUR_Equ_ As Double,  _
                    ByVal __1_ER_45_ As Double,  _
                    ByVal CreditRiskAmountEUREquER45 As Double,  _
                    ByVal NetCreditRiskAmountEUREquER45 As Double,  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Double,  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Double,  _
                    ByVal PDxFinalEaD As Double,  _
                    ByVal LGDfinalEaDweighted As Double,  _
                    ByVal RiskDate As Date,  _
                    ByVal IdClientGroup As Integer) As ScenarioAnalyze_GeneralStressTest_DetailsALLRow
            Dim rowScenarioAnalyze_GeneralStressTest_DetailsALLRow As ScenarioAnalyze_GeneralStressTest_DetailsALLRow = CType(Me.NewRow,ScenarioAnalyze_GeneralStressTest_DetailsALLRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Obligor_Rate, Contract_Type, Product_Type, _GL_Master___Account_Type, _Counterparty_Issuer_Collateral_Name, Client_No, Contract_Collateral_ID, Maturity_Date, _Remaining_Year_s__to_Maturity, Org_Ccy, _Credit_Outstanding__Org_Ccy_, _Credit_Outstanding__EUR_Equ_, NetCreditOutstandingAmountEUR, InternalInfo, PD, __1_ER_, _Credit_Risk_Amount_EUR_Equ_, _NetCredit_Risk_Amount_EUR_Equ_, __1_ER_45_, CreditRiskAmountEUREquER45, NetCreditRiskAmountEUREquER45, CoreDefinition, ClientGroup, ClientGroupName, MaturityWithoutCapFloor, EaDweigthedMaturityWithoutCapFloor, PDxFinalEaD, LGDfinalEaDweighted, RiskDate, IdClientGroup}
            rowScenarioAnalyze_GeneralStressTest_DetailsALLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowScenarioAnalyze_GeneralStressTest_DetailsALLRow)
            Return rowScenarioAnalyze_GeneralStressTest_DetailsALLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ScenarioAnalyze_GeneralStressTest_DetailsALLRow
            Return CType(Me.Rows.Find(New Object() {ID}),ScenarioAnalyze_GeneralStressTest_DetailsALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable = CType(MyBase.Clone,ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnObligor_Rate = MyBase.Columns("Obligor Rate")
            Me.columnContract_Type = MyBase.Columns("Contract Type")
            Me.columnProduct_Type = MyBase.Columns("Product Type")
            Me._columnGL_Master___Account_Type = MyBase.Columns("GL Master / Account Type")
            Me._columnCounterparty_Issuer_Collateral_Name = MyBase.Columns("Counterparty/Issuer/Collateral Name")
            Me.columnClient_No = MyBase.Columns("Client No")
            Me.columnContract_Collateral_ID = MyBase.Columns("Contract Collateral ID")
            Me.columnMaturity_Date = MyBase.Columns("Maturity Date")
            Me._columnRemaining_Year_s__to_Maturity = MyBase.Columns("Remaining Year(s) to Maturity")
            Me.columnOrg_Ccy = MyBase.Columns("Org Ccy")
            Me._columnCredit_Outstanding__Org_Ccy_ = MyBase.Columns("Credit Outstanding (Org Ccy)")
            Me._columnCredit_Outstanding__EUR_Equ_ = MyBase.Columns("Credit Outstanding (EUR Equ)")
            Me.columnNetCreditOutstandingAmountEUR = MyBase.Columns("NetCreditOutstandingAmountEUR")
            Me.columnInternalInfo = MyBase.Columns("InternalInfo")
            Me.columnPD = MyBase.Columns("PD")
            Me._column_1_ER_ = MyBase.Columns("(1-ER)")
            Me._columnCredit_Risk_Amount_EUR_Equ_ = MyBase.Columns("Credit Risk Amount(EUR Equ)")
            Me._columnNetCredit_Risk_Amount_EUR_Equ_ = MyBase.Columns("NetCredit Risk Amount(EUR Equ)")
            Me._column_1_ER_45_ = MyBase.Columns("(1-ER_45)")
            Me.columnCreditRiskAmountEUREquER45 = MyBase.Columns("CreditRiskAmountEUREquER45")
            Me.columnNetCreditRiskAmountEUREquER45 = MyBase.Columns("NetCreditRiskAmountEUREquER45")
            Me.columnCoreDefinition = MyBase.Columns("CoreDefinition")
            Me.columnClientGroup = MyBase.Columns("ClientGroup")
            Me.columnClientGroupName = MyBase.Columns("ClientGroupName")
            Me.columnMaturityWithoutCapFloor = MyBase.Columns("MaturityWithoutCapFloor")
            Me.columnEaDweigthedMaturityWithoutCapFloor = MyBase.Columns("EaDweigthedMaturityWithoutCapFloor")
            Me.columnPDxFinalEaD = MyBase.Columns("PDxFinalEaD")
            Me.columnLGDfinalEaDweighted = MyBase.Columns("LGDfinalEaDweighted")
            Me.columnRiskDate = MyBase.Columns("RiskDate")
            Me.columnIdClientGroup = MyBase.Columns("IdClientGroup")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnObligor_Rate = New Global.System.Data.DataColumn("Obligor Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObligor_Rate)
            Me.columnContract_Type = New Global.System.Data.DataColumn("Contract Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContract_Type)
            Me.columnProduct_Type = New Global.System.Data.DataColumn("Product Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_Type)
            Me._columnGL_Master___Account_Type = New Global.System.Data.DataColumn("GL Master / Account Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnGL_Master___Account_Type.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnGL_Master___Account_Type")
            Me._columnGL_Master___Account_Type.ExtendedProperties.Add("Generator_UserColumnName", "GL Master / Account Type")
            MyBase.Columns.Add(Me._columnGL_Master___Account_Type)
            Me._columnCounterparty_Issuer_Collateral_Name = New Global.System.Data.DataColumn("Counterparty/Issuer/Collateral Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCounterparty_Issuer_Collateral_Name.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCounterparty_Issuer_Collateral_Name")
            Me._columnCounterparty_Issuer_Collateral_Name.ExtendedProperties.Add("Generator_UserColumnName", "Counterparty/Issuer/Collateral Name")
            MyBase.Columns.Add(Me._columnCounterparty_Issuer_Collateral_Name)
            Me.columnClient_No = New Global.System.Data.DataColumn("Client No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_No)
            Me.columnContract_Collateral_ID = New Global.System.Data.DataColumn("Contract Collateral ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContract_Collateral_ID)
            Me.columnMaturity_Date = New Global.System.Data.DataColumn("Maturity Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturity_Date)
            Me._columnRemaining_Year_s__to_Maturity = New Global.System.Data.DataColumn("Remaining Year(s) to Maturity", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnRemaining_Year_s__to_Maturity.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnRemaining_Year_s__to_Maturity")
            Me._columnRemaining_Year_s__to_Maturity.ExtendedProperties.Add("Generator_UserColumnName", "Remaining Year(s) to Maturity")
            MyBase.Columns.Add(Me._columnRemaining_Year_s__to_Maturity)
            Me.columnOrg_Ccy = New Global.System.Data.DataColumn("Org Ccy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrg_Ccy)
            Me._columnCredit_Outstanding__Org_Ccy_ = New Global.System.Data.DataColumn("Credit Outstanding (Org Ccy)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Outstanding__Org_Ccy_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Outstanding__Org_Ccy_")
            Me._columnCredit_Outstanding__Org_Ccy_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Outstanding (Org Ccy)")
            MyBase.Columns.Add(Me._columnCredit_Outstanding__Org_Ccy_)
            Me._columnCredit_Outstanding__EUR_Equ_ = New Global.System.Data.DataColumn("Credit Outstanding (EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Outstanding__EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Outstanding__EUR_Equ_")
            Me._columnCredit_Outstanding__EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Outstanding (EUR Equ)")
            MyBase.Columns.Add(Me._columnCredit_Outstanding__EUR_Equ_)
            Me.columnNetCreditOutstandingAmountEUR = New Global.System.Data.DataColumn("NetCreditOutstandingAmountEUR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetCreditOutstandingAmountEUR)
            Me.columnInternalInfo = New Global.System.Data.DataColumn("InternalInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInternalInfo)
            Me.columnPD = New Global.System.Data.DataColumn("PD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD)
            Me._column_1_ER_ = New Global.System.Data.DataColumn("(1-ER)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._column_1_ER_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_1_ER_")
            Me._column_1_ER_.ExtendedProperties.Add("Generator_UserColumnName", "(1-ER)")
            MyBase.Columns.Add(Me._column_1_ER_)
            Me._columnCredit_Risk_Amount_EUR_Equ_ = New Global.System.Data.DataColumn("Credit Risk Amount(EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Risk_Amount_EUR_Equ_")
            Me._columnCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Risk Amount(EUR Equ)")
            MyBase.Columns.Add(Me._columnCredit_Risk_Amount_EUR_Equ_)
            Me._columnNetCredit_Risk_Amount_EUR_Equ_ = New Global.System.Data.DataColumn("NetCredit Risk Amount(EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnNetCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnNetCredit_Risk_Amount_EUR_Equ_")
            Me._columnNetCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "NetCredit Risk Amount(EUR Equ)")
            MyBase.Columns.Add(Me._columnNetCredit_Risk_Amount_EUR_Equ_)
            Me._column_1_ER_45_ = New Global.System.Data.DataColumn("(1-ER_45)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._column_1_ER_45_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_1_ER_45_")
            Me._column_1_ER_45_.ExtendedProperties.Add("Generator_UserColumnName", "(1-ER_45)")
            MyBase.Columns.Add(Me._column_1_ER_45_)
            Me.columnCreditRiskAmountEUREquER45 = New Global.System.Data.DataColumn("CreditRiskAmountEUREquER45", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreditRiskAmountEUREquER45)
            Me.columnNetCreditRiskAmountEUREquER45 = New Global.System.Data.DataColumn("NetCreditRiskAmountEUREquER45", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetCreditRiskAmountEUREquER45)
            Me.columnCoreDefinition = New Global.System.Data.DataColumn("CoreDefinition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreDefinition)
            Me.columnClientGroup = New Global.System.Data.DataColumn("ClientGroup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroup)
            Me.columnClientGroupName = New Global.System.Data.DataColumn("ClientGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroupName)
            Me.columnMaturityWithoutCapFloor = New Global.System.Data.DataColumn("MaturityWithoutCapFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityWithoutCapFloor)
            Me.columnEaDweigthedMaturityWithoutCapFloor = New Global.System.Data.DataColumn("EaDweigthedMaturityWithoutCapFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEaDweigthedMaturityWithoutCapFloor)
            Me.columnPDxFinalEaD = New Global.System.Data.DataColumn("PDxFinalEaD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDxFinalEaD)
            Me.columnLGDfinalEaDweighted = New Global.System.Data.DataColumn("LGDfinalEaDweighted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLGDfinalEaDweighted)
            Me.columnRiskDate = New Global.System.Data.DataColumn("RiskDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiskDate)
            Me.columnIdClientGroup = New Global.System.Data.DataColumn("IdClientGroup", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdClientGroup)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnObligor_Rate.MaxLength = 255
            Me.columnContract_Type.MaxLength = 255
            Me.columnProduct_Type.MaxLength = 255
            Me._columnGL_Master___Account_Type.MaxLength = 255
            Me._columnCounterparty_Issuer_Collateral_Name.MaxLength = 255
            Me.columnClient_No.MaxLength = 255
            Me.columnContract_Collateral_ID.MaxLength = 255
            Me.columnOrg_Ccy.MaxLength = 255
            Me.columnInternalInfo.MaxLength = 255
            Me.columnCoreDefinition.MaxLength = 255
            Me.columnClientGroup.MaxLength = 50
            Me.columnClientGroupName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewScenarioAnalyze_GeneralStressTest_DetailsALLRow() As ScenarioAnalyze_GeneralStressTest_DetailsALLRow
            Return CType(Me.NewRow,ScenarioAnalyze_GeneralStressTest_DetailsALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ScenarioAnalyze_GeneralStressTest_DetailsALLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ScenarioAnalyze_GeneralStressTest_DetailsALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_DetailsALLRowChanged(Me, New ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_DetailsALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_DetailsALLRowChanging(Me, New ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_DetailsALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_DetailsALLRowDeletedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_DetailsALLRowDeleted(Me, New ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_DetailsALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ScenarioAnalyze_GeneralStressTest_DetailsALLRowDeletingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_GeneralStressTest_DetailsALLRowDeleting(Me, New ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangeEvent(CType(e.Row,ScenarioAnalyze_GeneralStressTest_DetailsALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveScenarioAnalyze_GeneralStressTest_DetailsALLRow(ByVal row As ScenarioAnalyze_GeneralStressTest_DetailsALLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable
        Inherits Global.System.Data.TypedTableBase(Of ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnObligor_Rate As Global.System.Data.DataColumn
        
        Private columnContract_Type As Global.System.Data.DataColumn
        
        Private columnProduct_Type As Global.System.Data.DataColumn
        
        Private _columnGL_Master___Account_Type As Global.System.Data.DataColumn
        
        Private _columnCounterparty_Issuer_Collateral_Name As Global.System.Data.DataColumn
        
        Private columnClient_No As Global.System.Data.DataColumn
        
        Private columnContract_Collateral_ID As Global.System.Data.DataColumn
        
        Private columnMaturity_Date As Global.System.Data.DataColumn
        
        Private _columnRemaining_Year_s__to_Maturity As Global.System.Data.DataColumn
        
        Private columnOrg_Ccy As Global.System.Data.DataColumn
        
        Private _columnCredit_Outstanding__Org_Ccy_ As Global.System.Data.DataColumn
        
        Private _columnCredit_Outstanding__EUR_Equ_ As Global.System.Data.DataColumn
        
        Private columnNetCreditOutstandingAmountEUR As Global.System.Data.DataColumn
        
        Private columnInternalInfo As Global.System.Data.DataColumn
        
        Private columnPD As Global.System.Data.DataColumn
        
        Private _column_1_ER_ As Global.System.Data.DataColumn
        
        Private _columnCredit_Risk_Amount_EUR_Equ_ As Global.System.Data.DataColumn
        
        Private _columnNetCredit_Risk_Amount_EUR_Equ_ As Global.System.Data.DataColumn
        
        Private _column_1_ER_45_ As Global.System.Data.DataColumn
        
        Private columnCreditRiskAmountEUREquER45 As Global.System.Data.DataColumn
        
        Private columnNetCreditRiskAmountEUREquER45 As Global.System.Data.DataColumn
        
        Private columnCoreDefinition As Global.System.Data.DataColumn
        
        Private columnClientGroup As Global.System.Data.DataColumn
        
        Private columnClientGroupName As Global.System.Data.DataColumn
        
        Private columnMaturityWithoutCapFloor As Global.System.Data.DataColumn
        
        Private columnEaDweigthedMaturityWithoutCapFloor As Global.System.Data.DataColumn
        
        Private columnPDxFinalEaD As Global.System.Data.DataColumn
        
        Private columnLGDfinalEaDweighted As Global.System.Data.DataColumn
        
        Private columnRiskDate As Global.System.Data.DataColumn
        
        Private columnIdClientGroup As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Obligor_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObligor_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Contract_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContract_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Product_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _GL_Master___Account_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnGL_Master___Account_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Counterparty_Issuer_Collateral_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnCounterparty_Issuer_Collateral_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Client_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Contract_Collateral_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContract_Collateral_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Maturity_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturity_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Remaining_Year_s__to_MaturityColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnRemaining_Year_s__to_Maturity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Org_CcyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrg_Ccy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Outstanding__Org_Ccy_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Outstanding__Org_Ccy_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Outstanding__EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Outstanding__EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetCreditOutstandingAmountEURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetCreditOutstandingAmountEUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InternalInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInternalInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property __1_ER_Column() As Global.System.Data.DataColumn
            Get
                Return Me._column_1_ER_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Risk_Amount_EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Risk_Amount_EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _NetCredit_Risk_Amount_EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnNetCredit_Risk_Amount_EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property __1_ER_45_Column() As Global.System.Data.DataColumn
            Get
                Return Me._column_1_ER_45_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CreditRiskAmountEUREquER45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreditRiskAmountEUREquER45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetCreditRiskAmountEUREquER45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetCreditRiskAmountEUREquER45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CoreDefinitionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreDefinition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityWithoutCapFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityWithoutCapFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EaDweigthedMaturityWithoutCapFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEaDweigthedMaturityWithoutCapFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PDxFinalEaDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDxFinalEaD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LGDfinalEaDweightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLGDfinalEaDweighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RiskDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiskDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow
            Get
                Return CType(Me.Rows(index),ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChanging As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChanged As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowDeleting As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowDeleted As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow(ByVal row As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal _GL_Master___Account_Type As String,  _
                    ByVal _Counterparty_Issuer_Collateral_Name As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Date,  _
                    ByVal _Remaining_Year_s__to_Maturity As Double,  _
                    ByVal Org_Ccy As String,  _
                    ByVal _Credit_Outstanding__Org_Ccy_ As Double,  _
                    ByVal _Credit_Outstanding__EUR_Equ_ As Double,  _
                    ByVal NetCreditOutstandingAmountEUR As Double,  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Double,  _
                    ByVal __1_ER_ As Double,  _
                    ByVal _Credit_Risk_Amount_EUR_Equ_ As Double,  _
                    ByVal _NetCredit_Risk_Amount_EUR_Equ_ As Double,  _
                    ByVal __1_ER_45_ As Double,  _
                    ByVal CreditRiskAmountEUREquER45 As Double,  _
                    ByVal NetCreditRiskAmountEUREquER45 As Double,  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Double,  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Double,  _
                    ByVal PDxFinalEaD As Double,  _
                    ByVal LGDfinalEaDweighted As Double,  _
                    ByVal RiskDate As Date,  _
                    ByVal IdClientGroup As Integer) As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow
            Dim rowScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow = CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Obligor_Rate, Contract_Type, Product_Type, _GL_Master___Account_Type, _Counterparty_Issuer_Collateral_Name, Client_No, Contract_Collateral_ID, Maturity_Date, _Remaining_Year_s__to_Maturity, Org_Ccy, _Credit_Outstanding__Org_Ccy_, _Credit_Outstanding__EUR_Equ_, NetCreditOutstandingAmountEUR, InternalInfo, PD, __1_ER_, _Credit_Risk_Amount_EUR_Equ_, _NetCredit_Risk_Amount_EUR_Equ_, __1_ER_45_, CreditRiskAmountEUREquER45, NetCreditRiskAmountEUREquER45, CoreDefinition, ClientGroup, ClientGroupName, MaturityWithoutCapFloor, EaDweigthedMaturityWithoutCapFloor, PDxFinalEaD, LGDfinalEaDweighted, RiskDate, IdClientGroup}
            rowScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow)
            Return rowScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow
            Return CType(Me.Rows.Find(New Object() {ID}),ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable = CType(MyBase.Clone,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnObligor_Rate = MyBase.Columns("Obligor Rate")
            Me.columnContract_Type = MyBase.Columns("Contract Type")
            Me.columnProduct_Type = MyBase.Columns("Product Type")
            Me._columnGL_Master___Account_Type = MyBase.Columns("GL Master / Account Type")
            Me._columnCounterparty_Issuer_Collateral_Name = MyBase.Columns("Counterparty/Issuer/Collateral Name")
            Me.columnClient_No = MyBase.Columns("Client No")
            Me.columnContract_Collateral_ID = MyBase.Columns("Contract Collateral ID")
            Me.columnMaturity_Date = MyBase.Columns("Maturity Date")
            Me._columnRemaining_Year_s__to_Maturity = MyBase.Columns("Remaining Year(s) to Maturity")
            Me.columnOrg_Ccy = MyBase.Columns("Org Ccy")
            Me._columnCredit_Outstanding__Org_Ccy_ = MyBase.Columns("Credit Outstanding (Org Ccy)")
            Me._columnCredit_Outstanding__EUR_Equ_ = MyBase.Columns("Credit Outstanding (EUR Equ)")
            Me.columnNetCreditOutstandingAmountEUR = MyBase.Columns("NetCreditOutstandingAmountEUR")
            Me.columnInternalInfo = MyBase.Columns("InternalInfo")
            Me.columnPD = MyBase.Columns("PD")
            Me._column_1_ER_ = MyBase.Columns("(1-ER)")
            Me._columnCredit_Risk_Amount_EUR_Equ_ = MyBase.Columns("Credit Risk Amount(EUR Equ)")
            Me._columnNetCredit_Risk_Amount_EUR_Equ_ = MyBase.Columns("NetCredit Risk Amount(EUR Equ)")
            Me._column_1_ER_45_ = MyBase.Columns("(1-ER_45)")
            Me.columnCreditRiskAmountEUREquER45 = MyBase.Columns("CreditRiskAmountEUREquER45")
            Me.columnNetCreditRiskAmountEUREquER45 = MyBase.Columns("NetCreditRiskAmountEUREquER45")
            Me.columnCoreDefinition = MyBase.Columns("CoreDefinition")
            Me.columnClientGroup = MyBase.Columns("ClientGroup")
            Me.columnClientGroupName = MyBase.Columns("ClientGroupName")
            Me.columnMaturityWithoutCapFloor = MyBase.Columns("MaturityWithoutCapFloor")
            Me.columnEaDweigthedMaturityWithoutCapFloor = MyBase.Columns("EaDweigthedMaturityWithoutCapFloor")
            Me.columnPDxFinalEaD = MyBase.Columns("PDxFinalEaD")
            Me.columnLGDfinalEaDweighted = MyBase.Columns("LGDfinalEaDweighted")
            Me.columnRiskDate = MyBase.Columns("RiskDate")
            Me.columnIdClientGroup = MyBase.Columns("IdClientGroup")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnObligor_Rate = New Global.System.Data.DataColumn("Obligor Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObligor_Rate)
            Me.columnContract_Type = New Global.System.Data.DataColumn("Contract Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContract_Type)
            Me.columnProduct_Type = New Global.System.Data.DataColumn("Product Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_Type)
            Me._columnGL_Master___Account_Type = New Global.System.Data.DataColumn("GL Master / Account Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnGL_Master___Account_Type.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnGL_Master___Account_Type")
            Me._columnGL_Master___Account_Type.ExtendedProperties.Add("Generator_UserColumnName", "GL Master / Account Type")
            MyBase.Columns.Add(Me._columnGL_Master___Account_Type)
            Me._columnCounterparty_Issuer_Collateral_Name = New Global.System.Data.DataColumn("Counterparty/Issuer/Collateral Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCounterparty_Issuer_Collateral_Name.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCounterparty_Issuer_Collateral_Name")
            Me._columnCounterparty_Issuer_Collateral_Name.ExtendedProperties.Add("Generator_UserColumnName", "Counterparty/Issuer/Collateral Name")
            MyBase.Columns.Add(Me._columnCounterparty_Issuer_Collateral_Name)
            Me.columnClient_No = New Global.System.Data.DataColumn("Client No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_No)
            Me.columnContract_Collateral_ID = New Global.System.Data.DataColumn("Contract Collateral ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContract_Collateral_ID)
            Me.columnMaturity_Date = New Global.System.Data.DataColumn("Maturity Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturity_Date)
            Me._columnRemaining_Year_s__to_Maturity = New Global.System.Data.DataColumn("Remaining Year(s) to Maturity", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnRemaining_Year_s__to_Maturity.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnRemaining_Year_s__to_Maturity")
            Me._columnRemaining_Year_s__to_Maturity.ExtendedProperties.Add("Generator_UserColumnName", "Remaining Year(s) to Maturity")
            MyBase.Columns.Add(Me._columnRemaining_Year_s__to_Maturity)
            Me.columnOrg_Ccy = New Global.System.Data.DataColumn("Org Ccy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrg_Ccy)
            Me._columnCredit_Outstanding__Org_Ccy_ = New Global.System.Data.DataColumn("Credit Outstanding (Org Ccy)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Outstanding__Org_Ccy_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Outstanding__Org_Ccy_")
            Me._columnCredit_Outstanding__Org_Ccy_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Outstanding (Org Ccy)")
            MyBase.Columns.Add(Me._columnCredit_Outstanding__Org_Ccy_)
            Me._columnCredit_Outstanding__EUR_Equ_ = New Global.System.Data.DataColumn("Credit Outstanding (EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Outstanding__EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Outstanding__EUR_Equ_")
            Me._columnCredit_Outstanding__EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Outstanding (EUR Equ)")
            MyBase.Columns.Add(Me._columnCredit_Outstanding__EUR_Equ_)
            Me.columnNetCreditOutstandingAmountEUR = New Global.System.Data.DataColumn("NetCreditOutstandingAmountEUR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetCreditOutstandingAmountEUR)
            Me.columnInternalInfo = New Global.System.Data.DataColumn("InternalInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInternalInfo)
            Me.columnPD = New Global.System.Data.DataColumn("PD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD)
            Me._column_1_ER_ = New Global.System.Data.DataColumn("(1-ER)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._column_1_ER_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_1_ER_")
            Me._column_1_ER_.ExtendedProperties.Add("Generator_UserColumnName", "(1-ER)")
            MyBase.Columns.Add(Me._column_1_ER_)
            Me._columnCredit_Risk_Amount_EUR_Equ_ = New Global.System.Data.DataColumn("Credit Risk Amount(EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Risk_Amount_EUR_Equ_")
            Me._columnCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Risk Amount(EUR Equ)")
            MyBase.Columns.Add(Me._columnCredit_Risk_Amount_EUR_Equ_)
            Me._columnNetCredit_Risk_Amount_EUR_Equ_ = New Global.System.Data.DataColumn("NetCredit Risk Amount(EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnNetCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnNetCredit_Risk_Amount_EUR_Equ_")
            Me._columnNetCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "NetCredit Risk Amount(EUR Equ)")
            MyBase.Columns.Add(Me._columnNetCredit_Risk_Amount_EUR_Equ_)
            Me._column_1_ER_45_ = New Global.System.Data.DataColumn("(1-ER_45)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._column_1_ER_45_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_1_ER_45_")
            Me._column_1_ER_45_.ExtendedProperties.Add("Generator_UserColumnName", "(1-ER_45)")
            MyBase.Columns.Add(Me._column_1_ER_45_)
            Me.columnCreditRiskAmountEUREquER45 = New Global.System.Data.DataColumn("CreditRiskAmountEUREquER45", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreditRiskAmountEUREquER45)
            Me.columnNetCreditRiskAmountEUREquER45 = New Global.System.Data.DataColumn("NetCreditRiskAmountEUREquER45", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetCreditRiskAmountEUREquER45)
            Me.columnCoreDefinition = New Global.System.Data.DataColumn("CoreDefinition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreDefinition)
            Me.columnClientGroup = New Global.System.Data.DataColumn("ClientGroup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroup)
            Me.columnClientGroupName = New Global.System.Data.DataColumn("ClientGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroupName)
            Me.columnMaturityWithoutCapFloor = New Global.System.Data.DataColumn("MaturityWithoutCapFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityWithoutCapFloor)
            Me.columnEaDweigthedMaturityWithoutCapFloor = New Global.System.Data.DataColumn("EaDweigthedMaturityWithoutCapFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEaDweigthedMaturityWithoutCapFloor)
            Me.columnPDxFinalEaD = New Global.System.Data.DataColumn("PDxFinalEaD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDxFinalEaD)
            Me.columnLGDfinalEaDweighted = New Global.System.Data.DataColumn("LGDfinalEaDweighted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLGDfinalEaDweighted)
            Me.columnRiskDate = New Global.System.Data.DataColumn("RiskDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiskDate)
            Me.columnIdClientGroup = New Global.System.Data.DataColumn("IdClientGroup", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdClientGroup)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnObligor_Rate.MaxLength = 255
            Me.columnContract_Type.MaxLength = 255
            Me.columnProduct_Type.MaxLength = 255
            Me._columnGL_Master___Account_Type.MaxLength = 255
            Me._columnCounterparty_Issuer_Collateral_Name.MaxLength = 255
            Me.columnClient_No.MaxLength = 255
            Me.columnContract_Collateral_ID.MaxLength = 255
            Me.columnOrg_Ccy.MaxLength = 255
            Me.columnInternalInfo.MaxLength = 255
            Me.columnCoreDefinition.MaxLength = 255
            Me.columnClientGroup.MaxLength = 50
            Me.columnClientGroupName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow() As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow
            Return CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChanged(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChanging(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowDeletedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowDeleted(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowDeletingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowDeleting(Me, New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow(ByVal row As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable
        Inherits Global.System.Data.TypedTableBase(Of ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnObligor_Rate As Global.System.Data.DataColumn
        
        Private columnContract_Type As Global.System.Data.DataColumn
        
        Private columnProduct_Type As Global.System.Data.DataColumn
        
        Private _columnGL_Master___Account_Type As Global.System.Data.DataColumn
        
        Private _columnCounterparty_Issuer_Collateral_Name As Global.System.Data.DataColumn
        
        Private columnClient_No As Global.System.Data.DataColumn
        
        Private columnContract_Collateral_ID As Global.System.Data.DataColumn
        
        Private columnMaturity_Date As Global.System.Data.DataColumn
        
        Private _columnRemaining_Year_s__to_Maturity As Global.System.Data.DataColumn
        
        Private columnOrg_Ccy As Global.System.Data.DataColumn
        
        Private _columnCredit_Outstanding__Org_Ccy_ As Global.System.Data.DataColumn
        
        Private _columnCredit_Outstanding__EUR_Equ_ As Global.System.Data.DataColumn
        
        Private columnNetCreditOutstandingAmountEUR As Global.System.Data.DataColumn
        
        Private columnInternalInfo As Global.System.Data.DataColumn
        
        Private columnPD As Global.System.Data.DataColumn
        
        Private _column_1_ER_ As Global.System.Data.DataColumn
        
        Private _columnCredit_Risk_Amount_EUR_Equ_ As Global.System.Data.DataColumn
        
        Private _columnNetCredit_Risk_Amount_EUR_Equ_ As Global.System.Data.DataColumn
        
        Private _column_1_ER_45_ As Global.System.Data.DataColumn
        
        Private columnCreditRiskAmountEUREquER45 As Global.System.Data.DataColumn
        
        Private columnNetCreditRiskAmountEUREquER45 As Global.System.Data.DataColumn
        
        Private columnCoreDefinition As Global.System.Data.DataColumn
        
        Private columnClientGroup As Global.System.Data.DataColumn
        
        Private columnClientGroupName As Global.System.Data.DataColumn
        
        Private columnMaturityWithoutCapFloor As Global.System.Data.DataColumn
        
        Private columnEaDweigthedMaturityWithoutCapFloor As Global.System.Data.DataColumn
        
        Private columnPDxFinalEaD As Global.System.Data.DataColumn
        
        Private columnLGDfinalEaDweighted As Global.System.Data.DataColumn
        
        Private columnRiskDate As Global.System.Data.DataColumn
        
        Private columnIdClientGroup As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ScenarioAnalyze_ConcentrationRiskTBA_DetailsALL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Obligor_RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObligor_Rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Contract_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContract_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Product_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _GL_Master___Account_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnGL_Master___Account_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Counterparty_Issuer_Collateral_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnCounterparty_Issuer_Collateral_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Client_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Contract_Collateral_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContract_Collateral_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Maturity_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturity_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Remaining_Year_s__to_MaturityColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnRemaining_Year_s__to_Maturity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Org_CcyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrg_Ccy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Outstanding__Org_Ccy_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Outstanding__Org_Ccy_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Outstanding__EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Outstanding__EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetCreditOutstandingAmountEURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetCreditOutstandingAmountEUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InternalInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInternalInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property __1_ER_Column() As Global.System.Data.DataColumn
            Get
                Return Me._column_1_ER_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Credit_Risk_Amount_EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnCredit_Risk_Amount_EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _NetCredit_Risk_Amount_EUR_Equ_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnNetCredit_Risk_Amount_EUR_Equ_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property __1_ER_45_Column() As Global.System.Data.DataColumn
            Get
                Return Me._column_1_ER_45_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CreditRiskAmountEUREquER45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreditRiskAmountEUREquER45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NetCreditRiskAmountEUREquER45Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetCreditRiskAmountEUREquER45
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CoreDefinitionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoreDefinition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientGroupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientGroupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaturityWithoutCapFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaturityWithoutCapFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EaDweigthedMaturityWithoutCapFloorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEaDweigthedMaturityWithoutCapFloor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PDxFinalEaDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDxFinalEaD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LGDfinalEaDweightedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLGDfinalEaDweighted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RiskDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRiskDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdClientGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdClientGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow
            Get
                Return CType(Me.Rows(index),ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChanging As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChanged As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowDeleting As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowDeleted As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow(ByVal row As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal _GL_Master___Account_Type As String,  _
                    ByVal _Counterparty_Issuer_Collateral_Name As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Date,  _
                    ByVal _Remaining_Year_s__to_Maturity As Double,  _
                    ByVal Org_Ccy As String,  _
                    ByVal _Credit_Outstanding__Org_Ccy_ As Double,  _
                    ByVal _Credit_Outstanding__EUR_Equ_ As Double,  _
                    ByVal NetCreditOutstandingAmountEUR As Double,  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Double,  _
                    ByVal __1_ER_ As Double,  _
                    ByVal _Credit_Risk_Amount_EUR_Equ_ As Double,  _
                    ByVal _NetCredit_Risk_Amount_EUR_Equ_ As Double,  _
                    ByVal __1_ER_45_ As Double,  _
                    ByVal CreditRiskAmountEUREquER45 As Double,  _
                    ByVal NetCreditRiskAmountEUREquER45 As Double,  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Double,  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Double,  _
                    ByVal PDxFinalEaD As Double,  _
                    ByVal LGDfinalEaDweighted As Double,  _
                    ByVal RiskDate As Date,  _
                    ByVal IdClientGroup As Integer) As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow
            Dim rowScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow = CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Obligor_Rate, Contract_Type, Product_Type, _GL_Master___Account_Type, _Counterparty_Issuer_Collateral_Name, Client_No, Contract_Collateral_ID, Maturity_Date, _Remaining_Year_s__to_Maturity, Org_Ccy, _Credit_Outstanding__Org_Ccy_, _Credit_Outstanding__EUR_Equ_, NetCreditOutstandingAmountEUR, InternalInfo, PD, __1_ER_, _Credit_Risk_Amount_EUR_Equ_, _NetCredit_Risk_Amount_EUR_Equ_, __1_ER_45_, CreditRiskAmountEUREquER45, NetCreditRiskAmountEUREquER45, CoreDefinition, ClientGroup, ClientGroupName, MaturityWithoutCapFloor, EaDweigthedMaturityWithoutCapFloor, PDxFinalEaD, LGDfinalEaDweighted, RiskDate, IdClientGroup}
            rowScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow)
            Return rowScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow
            Return CType(Me.Rows.Find(New Object() {ID}),ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable = CType(MyBase.Clone,ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnObligor_Rate = MyBase.Columns("Obligor Rate")
            Me.columnContract_Type = MyBase.Columns("Contract Type")
            Me.columnProduct_Type = MyBase.Columns("Product Type")
            Me._columnGL_Master___Account_Type = MyBase.Columns("GL Master / Account Type")
            Me._columnCounterparty_Issuer_Collateral_Name = MyBase.Columns("Counterparty/Issuer/Collateral Name")
            Me.columnClient_No = MyBase.Columns("Client No")
            Me.columnContract_Collateral_ID = MyBase.Columns("Contract Collateral ID")
            Me.columnMaturity_Date = MyBase.Columns("Maturity Date")
            Me._columnRemaining_Year_s__to_Maturity = MyBase.Columns("Remaining Year(s) to Maturity")
            Me.columnOrg_Ccy = MyBase.Columns("Org Ccy")
            Me._columnCredit_Outstanding__Org_Ccy_ = MyBase.Columns("Credit Outstanding (Org Ccy)")
            Me._columnCredit_Outstanding__EUR_Equ_ = MyBase.Columns("Credit Outstanding (EUR Equ)")
            Me.columnNetCreditOutstandingAmountEUR = MyBase.Columns("NetCreditOutstandingAmountEUR")
            Me.columnInternalInfo = MyBase.Columns("InternalInfo")
            Me.columnPD = MyBase.Columns("PD")
            Me._column_1_ER_ = MyBase.Columns("(1-ER)")
            Me._columnCredit_Risk_Amount_EUR_Equ_ = MyBase.Columns("Credit Risk Amount(EUR Equ)")
            Me._columnNetCredit_Risk_Amount_EUR_Equ_ = MyBase.Columns("NetCredit Risk Amount(EUR Equ)")
            Me._column_1_ER_45_ = MyBase.Columns("(1-ER_45)")
            Me.columnCreditRiskAmountEUREquER45 = MyBase.Columns("CreditRiskAmountEUREquER45")
            Me.columnNetCreditRiskAmountEUREquER45 = MyBase.Columns("NetCreditRiskAmountEUREquER45")
            Me.columnCoreDefinition = MyBase.Columns("CoreDefinition")
            Me.columnClientGroup = MyBase.Columns("ClientGroup")
            Me.columnClientGroupName = MyBase.Columns("ClientGroupName")
            Me.columnMaturityWithoutCapFloor = MyBase.Columns("MaturityWithoutCapFloor")
            Me.columnEaDweigthedMaturityWithoutCapFloor = MyBase.Columns("EaDweigthedMaturityWithoutCapFloor")
            Me.columnPDxFinalEaD = MyBase.Columns("PDxFinalEaD")
            Me.columnLGDfinalEaDweighted = MyBase.Columns("LGDfinalEaDweighted")
            Me.columnRiskDate = MyBase.Columns("RiskDate")
            Me.columnIdClientGroup = MyBase.Columns("IdClientGroup")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnObligor_Rate = New Global.System.Data.DataColumn("Obligor Rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObligor_Rate)
            Me.columnContract_Type = New Global.System.Data.DataColumn("Contract Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContract_Type)
            Me.columnProduct_Type = New Global.System.Data.DataColumn("Product Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_Type)
            Me._columnGL_Master___Account_Type = New Global.System.Data.DataColumn("GL Master / Account Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnGL_Master___Account_Type.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnGL_Master___Account_Type")
            Me._columnGL_Master___Account_Type.ExtendedProperties.Add("Generator_UserColumnName", "GL Master / Account Type")
            MyBase.Columns.Add(Me._columnGL_Master___Account_Type)
            Me._columnCounterparty_Issuer_Collateral_Name = New Global.System.Data.DataColumn("Counterparty/Issuer/Collateral Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCounterparty_Issuer_Collateral_Name.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCounterparty_Issuer_Collateral_Name")
            Me._columnCounterparty_Issuer_Collateral_Name.ExtendedProperties.Add("Generator_UserColumnName", "Counterparty/Issuer/Collateral Name")
            MyBase.Columns.Add(Me._columnCounterparty_Issuer_Collateral_Name)
            Me.columnClient_No = New Global.System.Data.DataColumn("Client No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient_No)
            Me.columnContract_Collateral_ID = New Global.System.Data.DataColumn("Contract Collateral ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContract_Collateral_ID)
            Me.columnMaturity_Date = New Global.System.Data.DataColumn("Maturity Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturity_Date)
            Me._columnRemaining_Year_s__to_Maturity = New Global.System.Data.DataColumn("Remaining Year(s) to Maturity", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnRemaining_Year_s__to_Maturity.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnRemaining_Year_s__to_Maturity")
            Me._columnRemaining_Year_s__to_Maturity.ExtendedProperties.Add("Generator_UserColumnName", "Remaining Year(s) to Maturity")
            MyBase.Columns.Add(Me._columnRemaining_Year_s__to_Maturity)
            Me.columnOrg_Ccy = New Global.System.Data.DataColumn("Org Ccy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrg_Ccy)
            Me._columnCredit_Outstanding__Org_Ccy_ = New Global.System.Data.DataColumn("Credit Outstanding (Org Ccy)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Outstanding__Org_Ccy_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Outstanding__Org_Ccy_")
            Me._columnCredit_Outstanding__Org_Ccy_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Outstanding (Org Ccy)")
            MyBase.Columns.Add(Me._columnCredit_Outstanding__Org_Ccy_)
            Me._columnCredit_Outstanding__EUR_Equ_ = New Global.System.Data.DataColumn("Credit Outstanding (EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Outstanding__EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Outstanding__EUR_Equ_")
            Me._columnCredit_Outstanding__EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Outstanding (EUR Equ)")
            MyBase.Columns.Add(Me._columnCredit_Outstanding__EUR_Equ_)
            Me.columnNetCreditOutstandingAmountEUR = New Global.System.Data.DataColumn("NetCreditOutstandingAmountEUR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetCreditOutstandingAmountEUR)
            Me.columnInternalInfo = New Global.System.Data.DataColumn("InternalInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInternalInfo)
            Me.columnPD = New Global.System.Data.DataColumn("PD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPD)
            Me._column_1_ER_ = New Global.System.Data.DataColumn("(1-ER)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._column_1_ER_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_1_ER_")
            Me._column_1_ER_.ExtendedProperties.Add("Generator_UserColumnName", "(1-ER)")
            MyBase.Columns.Add(Me._column_1_ER_)
            Me._columnCredit_Risk_Amount_EUR_Equ_ = New Global.System.Data.DataColumn("Credit Risk Amount(EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnCredit_Risk_Amount_EUR_Equ_")
            Me._columnCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "Credit Risk Amount(EUR Equ)")
            MyBase.Columns.Add(Me._columnCredit_Risk_Amount_EUR_Equ_)
            Me._columnNetCredit_Risk_Amount_EUR_Equ_ = New Global.System.Data.DataColumn("NetCredit Risk Amount(EUR Equ)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._columnNetCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnNetCredit_Risk_Amount_EUR_Equ_")
            Me._columnNetCredit_Risk_Amount_EUR_Equ_.ExtendedProperties.Add("Generator_UserColumnName", "NetCredit Risk Amount(EUR Equ)")
            MyBase.Columns.Add(Me._columnNetCredit_Risk_Amount_EUR_Equ_)
            Me._column_1_ER_45_ = New Global.System.Data.DataColumn("(1-ER_45)", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            Me._column_1_ER_45_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_1_ER_45_")
            Me._column_1_ER_45_.ExtendedProperties.Add("Generator_UserColumnName", "(1-ER_45)")
            MyBase.Columns.Add(Me._column_1_ER_45_)
            Me.columnCreditRiskAmountEUREquER45 = New Global.System.Data.DataColumn("CreditRiskAmountEUREquER45", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreditRiskAmountEUREquER45)
            Me.columnNetCreditRiskAmountEUREquER45 = New Global.System.Data.DataColumn("NetCreditRiskAmountEUREquER45", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetCreditRiskAmountEUREquER45)
            Me.columnCoreDefinition = New Global.System.Data.DataColumn("CoreDefinition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoreDefinition)
            Me.columnClientGroup = New Global.System.Data.DataColumn("ClientGroup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroup)
            Me.columnClientGroupName = New Global.System.Data.DataColumn("ClientGroupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientGroupName)
            Me.columnMaturityWithoutCapFloor = New Global.System.Data.DataColumn("MaturityWithoutCapFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaturityWithoutCapFloor)
            Me.columnEaDweigthedMaturityWithoutCapFloor = New Global.System.Data.DataColumn("EaDweigthedMaturityWithoutCapFloor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEaDweigthedMaturityWithoutCapFloor)
            Me.columnPDxFinalEaD = New Global.System.Data.DataColumn("PDxFinalEaD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDxFinalEaD)
            Me.columnLGDfinalEaDweighted = New Global.System.Data.DataColumn("LGDfinalEaDweighted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLGDfinalEaDweighted)
            Me.columnRiskDate = New Global.System.Data.DataColumn("RiskDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRiskDate)
            Me.columnIdClientGroup = New Global.System.Data.DataColumn("IdClientGroup", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdClientGroup)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnObligor_Rate.MaxLength = 255
            Me.columnContract_Type.MaxLength = 255
            Me.columnProduct_Type.MaxLength = 255
            Me._columnGL_Master___Account_Type.MaxLength = 255
            Me._columnCounterparty_Issuer_Collateral_Name.MaxLength = 255
            Me.columnClient_No.MaxLength = 255
            Me.columnContract_Collateral_ID.MaxLength = 255
            Me.columnOrg_Ccy.MaxLength = 255
            Me.columnInternalInfo.MaxLength = 255
            Me.columnCoreDefinition.MaxLength = 255
            Me.columnClientGroup.MaxLength = 50
            Me.columnClientGroupName.MaxLength = 255
            Me.ExtendedProperties.Add("Generator_RowClassName", "ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow")
            Me.ExtendedProperties.Add("Generator_RowEvArgName", "ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEvent")
            Me.ExtendedProperties.Add("Generator_RowEvHandlerName", "ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEventHandler")
            Me.ExtendedProperties.Add("Generator_TableClassName", "ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable")
            Me.ExtendedProperties.Add("Generator_TablePropName", "ScenarioAnalyze_ConcentrationRiskTBA_DetailsAll")
            Me.ExtendedProperties.Add("Generator_TableVarName", "tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll")
            Me.ExtendedProperties.Add("Generator_UserTableName", "ScenarioAnalyze_ConcentrationRiskTBA_DetailsALL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow() As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow
            Return CType(Me.NewRow,ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChanged(Me, New ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChanging(Me, New ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowDeletedEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowDeleted(Me, New ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowDeletingEvent) Is Nothing) Then
                RaiseEvent ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowDeleting(Me, New ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEvent(CType(e.Row,ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow(ByVal row As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ScenarioAnalysisDataset = New ScenarioAnalysisDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SCENARIO_ANALYZES_DATERow
        Inherits Global.System.Data.DataRow
        
        Private tableSCENARIO_ANALYZES_DATE As SCENARIO_ANALYZES_DATEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSCENARIO_ANALYZES_DATE = CType(Me.Table,SCENARIO_ANALYZES_DATEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableSCENARIO_ANALYZES_DATE.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableSCENARIO_ANALYZES_DATE.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ScenarioAnalyzesDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSCENARIO_ANALYZES_DATE.ScenarioAnalyzesDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ScenarioAnalyzesDate' in table 'SCENARIO_ANALYZES_DATE' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCENARIO_ANALYZES_DATE.ScenarioAnalyzesDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumEL_Live() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCENARIO_ANALYZES_DATE.SumEL_LiveColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumEL_Live' in table 'SCENARIO_ANALYZES_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCENARIO_ANALYZES_DATE.SumEL_LiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumUL_Live() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCENARIO_ANALYZES_DATE.SumUL_LiveColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumUL_Live' in table 'SCENARIO_ANALYZES_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCENARIO_ANALYZES_DATE.SumUL_LiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumGA_Live() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSCENARIO_ANALYZES_DATE.SumGA_LiveColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumGA_Live' in table 'SCENARIO_ANALYZES_DATE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCENARIO_ANALYZES_DATE.SumGA_LiveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsScenarioAnalyzesDateNull() As Boolean
            Return Me.IsNull(Me.tableSCENARIO_ANALYZES_DATE.ScenarioAnalyzesDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetScenarioAnalyzesDateNull()
            Me(Me.tableSCENARIO_ANALYZES_DATE.ScenarioAnalyzesDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumEL_LiveNull() As Boolean
            Return Me.IsNull(Me.tableSCENARIO_ANALYZES_DATE.SumEL_LiveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumEL_LiveNull()
            Me(Me.tableSCENARIO_ANALYZES_DATE.SumEL_LiveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumUL_LiveNull() As Boolean
            Return Me.IsNull(Me.tableSCENARIO_ANALYZES_DATE.SumUL_LiveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumUL_LiveNull()
            Me(Me.tableSCENARIO_ANALYZES_DATE.SumUL_LiveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumGA_LiveNull() As Boolean
            Return Me.IsNull(Me.tableSCENARIO_ANALYZES_DATE.SumGA_LiveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumGA_LiveNull()
            Me(Me.tableSCENARIO_ANALYZES_DATE.SumGA_LiveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetScenarioAnalyze_ConcentrationRiskCHINA_DateRows() As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow()
            If (Me.Table.ChildRelations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE") Is Nothing) Then
                Return New ScenarioAnalyze_ConcentrationRiskCHINA_DateRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE")),ScenarioAnalyze_ConcentrationRiskCHINA_DateRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetScenarioAnalyze_ConcentrationRiskTBA_DateRows() As ScenarioAnalyze_ConcentrationRiskTBA_DateRow()
            If (Me.Table.ChildRelations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE") Is Nothing) Then
                Return New ScenarioAnalyze_ConcentrationRiskTBA_DateRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE")),ScenarioAnalyze_ConcentrationRiskTBA_DateRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetScenarioAnalyze_GeneralStressTest_DateRows() As ScenarioAnalyze_GeneralStressTest_DateRow()
            If (Me.Table.ChildRelations("FK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE") Is Nothing) Then
                Return New ScenarioAnalyze_GeneralStressTest_DateRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE")),ScenarioAnalyze_GeneralStressTest_DateRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ScenarioAnalyze_ConcentrationRiskCHINA_DateRow
        Inherits Global.System.Data.DataRow
        
        Private tableScenarioAnalyze_ConcentrationRiskCHINA_Date As ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date = CType(Me.Table,ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RiskDate() As Date
            Get
                Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.RiskDateColumn),Date)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.RiskDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LGD_mod() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.LGD_modColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LGD_mod' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_D"& _ 
                            "ate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.LGD_modColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property R_Colleration_Mod() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.R_Colleration_ModColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Colleration_Mod' in table 'ScenarioAnalyze_ConcentrationR"& _ 
                            "iskCHINA_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.R_Colleration_ModColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ObligorRate_Mod() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.ObligorRate_ModColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ObligorRate_Mod' in table 'ScenarioAnalyze_ConcentrationRis"& _ 
                            "kCHINA_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.ObligorRate_ModColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LevelOfConfidence() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.LevelOfConfidenceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LevelOfConfidence' in table 'ScenarioAnalyze_ConcentrationR"& _ 
                            "iskCHINA_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.LevelOfConfidenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumEL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumELColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumEL' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_Dat"& _ 
                            "e' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumUL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumULColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumUL' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_Dat"& _ 
                            "e' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumULColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property nu_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.nu_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nu_Value' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_"& _ 
                            "Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.nu_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property p_alpha_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.p_alpha_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'p_alpha_Value' in table 'ScenarioAnalyze_ConcentrationRiskC"& _ 
                            "HINA_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.p_alpha_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property b_beta_value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.b_beta_valueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'b_beta_value' in table 'ScenarioAnalyze_ConcentrationRiskCH"& _ 
                            "INA_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.b_beta_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Gamma_inv() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.Gamma_invColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gamma_inv' in table 'ScenarioAnalyze_ConcentrationRiskCHINA"& _ 
                            "_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.Gamma_invColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Delta() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.DeltaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Delta' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_Dat"& _ 
                            "e' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.DeltaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property K_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.K_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'K_Value' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_D"& _ 
                            "ate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.K_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumGA_rel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumGA_relColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumGA_rel' in table 'ScenarioAnalyze_ConcentrationRiskCHINA"& _ 
                            "_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumGA_relColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumGA_Total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumGA_TotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumGA_Total' in table 'ScenarioAnalyze_ConcentrationRiskCHI"& _ 
                            "NA_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumGA_TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdDate() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.IdDateColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdDate' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_Da"& _ 
                            "te' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.IdDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SCENARIO_ANALYZES_DATERow() As SCENARIO_ANALYZES_DATERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE")),SCENARIO_ANALYZES_DATERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Date_SCENARIO_ANALYZES_DATE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLGD_modNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.LGD_modColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLGD_modNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.LGD_modColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsR_Colleration_ModNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.R_Colleration_ModColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetR_Colleration_ModNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.R_Colleration_ModColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsObligorRate_ModNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.ObligorRate_ModColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetObligorRate_ModNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.ObligorRate_ModColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLevelOfConfidenceNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.LevelOfConfidenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLevelOfConfidenceNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.LevelOfConfidenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumELNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumELNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumULNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumULColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumULNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumULColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Isnu_ValueNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.nu_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setnu_ValueNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.nu_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Isp_alpha_ValueNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.p_alpha_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setp_alpha_ValueNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.p_alpha_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Isb_beta_valueNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.b_beta_valueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setb_beta_valueNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.b_beta_valueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGamma_invNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.Gamma_invColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGamma_invNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.Gamma_invColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDeltaNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.DeltaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDeltaNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.DeltaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsK_ValueNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.K_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetK_ValueNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.K_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumGA_relNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumGA_relColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumGA_relNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumGA_relColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumGA_TotalNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumGA_TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumGA_TotalNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.SumGA_TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.IdDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdDateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Date.IdDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetScenarioAnalyze_ConcentrationRiskCHINA_TotalsRows() As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow()
            If (Me.Table.ChildRelations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date") Is Nothing) Then
                Return New ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date")),ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow
        Inherits Global.System.Data.DataRow
        
        Private tableScenarioAnalyze_ConcentrationRiskCHINA_Details As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details = CType(Me.Table,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Obligor_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Obligor_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Obligor Rate' in table 'ScenarioAnalyze_ConcentrationRiskCH"& _ 
                            "INA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Obligor_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contract_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Contract_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contract Type' in table 'ScenarioAnalyze_ConcentrationRiskC"& _ 
                            "HINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Contract_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Product_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Product_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product Type' in table 'ScenarioAnalyze_ConcentrationRiskCH"& _ 
                            "INA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Product_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _GL_Master___Account_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._GL_Master___Account_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GL Master / Account Type' in table 'ScenarioAnalyze_Concent"& _ 
                            "rationRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._GL_Master___Account_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Counterparty_Issuer_Collateral_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Counterparty_Issuer_Collateral_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Counterparty/Issuer/Collateral Name' in table 'ScenarioAnal"& _ 
                            "yze_ConcentrationRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Counterparty_Issuer_Collateral_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Client_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Client_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Client No' in table 'ScenarioAnalyze_ConcentrationRiskCHINA"& _ 
                            "_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Client_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contract_Collateral_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Contract_Collateral_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contract Collateral ID' in table 'ScenarioAnalyze_Concentra"& _ 
                            "tionRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Contract_Collateral_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Maturity_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Maturity_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Maturity Date' in table 'ScenarioAnalyze_ConcentrationRiskC"& _ 
                            "HINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Maturity_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Remaining_Year_s__to_Maturity() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Remaining_Year_s__to_MaturityColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remaining Year(s) to Maturity' in table 'ScenarioAnalyze_Co"& _ 
                            "ncentrationRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Remaining_Year_s__to_MaturityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Org_Ccy() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Org_CcyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Org Ccy' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_D"& _ 
                            "etails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Org_CcyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Outstanding__Org_Ccy_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Credit_Outstanding__Org_Ccy_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Outstanding (Org Ccy)' in table 'ScenarioAnalyze_Con"& _ 
                            "centrationRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Credit_Outstanding__Org_Ccy_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Outstanding__EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Credit_Outstanding__EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Outstanding (EUR Equ)' in table 'ScenarioAnalyze_Con"& _ 
                            "centrationRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Credit_Outstanding__EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetCreditOutstandingAmountEUR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.NetCreditOutstandingAmountEURColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCreditOutstandingAmountEUR' in table 'ScenarioAnalyze_Co"& _ 
                            "ncentrationRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.NetCreditOutstandingAmountEURColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InternalInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.InternalInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InternalInfo' in table 'ScenarioAnalyze_ConcentrationRiskCH"& _ 
                            "INA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.InternalInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.PDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_Detail"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.PDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property __1_ER_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.__1_ER_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '(1-ER)' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_De"& _ 
                            "tails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.__1_ER_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Risk_Amount_EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Credit_Risk_Amount_EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Risk Amount(EUR Equ)' in table 'ScenarioAnalyze_Conc"& _ 
                            "entrationRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Credit_Risk_Amount_EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _NetCredit_Risk_Amount_EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._NetCredit_Risk_Amount_EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCredit Risk Amount(EUR Equ)' in table 'ScenarioAnalyze_C"& _ 
                            "oncentrationRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._NetCredit_Risk_Amount_EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property __1_ER_45_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.__1_ER_45_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '(1-ER_45)' in table 'ScenarioAnalyze_ConcentrationRiskCHINA"& _ 
                            "_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.__1_ER_45_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CreditRiskAmountEUREquER45() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.CreditRiskAmountEUREquER45Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreditRiskAmountEUREquER45' in table 'ScenarioAnalyze_Conce"& _ 
                            "ntrationRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.CreditRiskAmountEUREquER45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetCreditRiskAmountEUREquER45() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.NetCreditRiskAmountEUREquER45Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCreditRiskAmountEUREquER45' in table 'ScenarioAnalyze_Co"& _ 
                            "ncentrationRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.NetCreditRiskAmountEUREquER45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CoreDefinition() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.CoreDefinitionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreDefinition' in table 'ScenarioAnalyze_ConcentrationRisk"& _ 
                            "CHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.CoreDefinitionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroup() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.ClientGroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroup' in table 'ScenarioAnalyze_ConcentrationRiskCHI"& _ 
                            "NA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.ClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.ClientGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroupName' in table 'ScenarioAnalyze_ConcentrationRis"& _ 
                            "kCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.ClientGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityWithoutCapFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.MaturityWithoutCapFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityWithoutCapFloor' in table 'ScenarioAnalyze_Concentr"& _ 
                            "ationRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.MaturityWithoutCapFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EaDweigthedMaturityWithoutCapFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.EaDweigthedMaturityWithoutCapFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EaDweigthedMaturityWithoutCapFloor' in table 'ScenarioAnaly"& _ 
                            "ze_ConcentrationRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.EaDweigthedMaturityWithoutCapFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PDxFinalEaD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.PDxFinalEaDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PDxFinalEaD' in table 'ScenarioAnalyze_ConcentrationRiskCHI"& _ 
                            "NA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.PDxFinalEaDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LGDfinalEaDweighted() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.LGDfinalEaDweightedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LGDfinalEaDweighted' in table 'ScenarioAnalyze_Concentratio"& _ 
                            "nRiskCHINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.LGDfinalEaDweightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RiskDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.RiskDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RiskDate' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_"& _ 
                            "Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.RiskDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdClientGroup() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.IdClientGroupColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdClientGroup' in table 'ScenarioAnalyze_ConcentrationRiskC"& _ 
                            "HINA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.IdClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow() As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals")),ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsObligor_RateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Obligor_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetObligor_RateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Obligor_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContract_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Contract_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContract_TypeNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Contract_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProduct_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Product_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProduct_TypeNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Product_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_GL_Master___Account_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._GL_Master___Account_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_GL_Master___Account_TypeNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._GL_Master___Account_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Counterparty_Issuer_Collateral_NameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Counterparty_Issuer_Collateral_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Counterparty_Issuer_Collateral_NameNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Counterparty_Issuer_Collateral_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClient_NoNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Client_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClient_NoNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Client_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContract_Collateral_IDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Contract_Collateral_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContract_Collateral_IDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Contract_Collateral_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturity_DateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Maturity_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturity_DateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Maturity_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Remaining_Year_s__to_MaturityNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Remaining_Year_s__to_MaturityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Remaining_Year_s__to_MaturityNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Remaining_Year_s__to_MaturityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOrg_CcyNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Org_CcyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOrg_CcyNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.Org_CcyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Outstanding__Org_Ccy_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Credit_Outstanding__Org_Ccy_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Outstanding__Org_Ccy_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Credit_Outstanding__Org_Ccy_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Outstanding__EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Credit_Outstanding__EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Outstanding__EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Credit_Outstanding__EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetCreditOutstandingAmountEURNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.NetCreditOutstandingAmountEURColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetCreditOutstandingAmountEURNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.NetCreditOutstandingAmountEURColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInternalInfoNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.InternalInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInternalInfoNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.InternalInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.PDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.PDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is__1_ER_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.__1_ER_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set__1_ER_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.__1_ER_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Risk_Amount_EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Credit_Risk_Amount_EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Risk_Amount_EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._Credit_Risk_Amount_EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_NetCredit_Risk_Amount_EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._NetCredit_Risk_Amount_EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_NetCredit_Risk_Amount_EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details._NetCredit_Risk_Amount_EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is__1_ER_45_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.__1_ER_45_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set__1_ER_45_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.__1_ER_45_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCreditRiskAmountEUREquER45Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.CreditRiskAmountEUREquER45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCreditRiskAmountEUREquER45Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.CreditRiskAmountEUREquER45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetCreditRiskAmountEUREquER45Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.NetCreditRiskAmountEUREquER45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetCreditRiskAmountEUREquER45Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.NetCreditRiskAmountEUREquER45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCoreDefinitionNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.CoreDefinitionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCoreDefinitionNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.CoreDefinitionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.ClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.ClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.ClientGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNameNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.ClientGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityWithoutCapFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.MaturityWithoutCapFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityWithoutCapFloorNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.MaturityWithoutCapFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEaDweigthedMaturityWithoutCapFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.EaDweigthedMaturityWithoutCapFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEaDweigthedMaturityWithoutCapFloorNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.EaDweigthedMaturityWithoutCapFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPDxFinalEaDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.PDxFinalEaDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPDxFinalEaDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.PDxFinalEaDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLGDfinalEaDweightedNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.LGDfinalEaDweightedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLGDfinalEaDweightedNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.LGDfinalEaDweightedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRiskDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.RiskDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRiskDateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.RiskDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.IdClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdClientGroupNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Details.IdClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow
        Inherits Global.System.Data.DataRow
        
        Private tableScenarioAnalyze_ConcentrationRiskCHINA_Totals As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals = CType(Me.Table,ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroup() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.ClientGroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroup' in table 'ScenarioAnalyze_ConcentrationRiskCHI"& _ 
                            "NA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.ClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.ClientGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroupName' in table 'ScenarioAnalyze_ConcentrationRis"& _ 
                            "kCHINA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.ClientGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubBorrowersCounter() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.SubBorrowersCounterColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubBorrowersCounter' in table 'ScenarioAnalyze_Concentratio"& _ 
                            "nRiskCHINA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.SubBorrowersCounterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FinalEadTotalSum() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.FinalEadTotalSumColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinalEadTotalSum' in table 'ScenarioAnalyze_ConcentrationRi"& _ 
                            "skCHINA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.FinalEadTotalSumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LGD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.LGDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LGD' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_Total"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.LGDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PD_EaD_weighted() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.PD_EaD_weightedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD_EaD_weighted' in table 'ScenarioAnalyze_ConcentrationRis"& _ 
                            "kCHINA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.PD_EaD_weightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PD_3bps_floor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.PD_3bps_floorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD_3bps_floor' in table 'ScenarioAnalyze_ConcentrationRiskC"& _ 
                            "HINA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.PD_3bps_floorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IndicatorOfFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.IndicatorOfFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndicatorOfFloor' in table 'ScenarioAnalyze_ConcentrationRi"& _ 
                            "skCHINA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.IndicatorOfFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityEADweigthed() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.MaturityEADweigthedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityEADweigthed' in table 'ScenarioAnalyze_Concentratio"& _ 
                            "nRiskCHINA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.MaturityEADweigthedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property R_CoefficientOfColleration() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.R_CoefficientOfCollerationColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_CoefficientOfColleration' in table 'ScenarioAnalyze_Conce"& _ 
                            "ntrationRiskCHINA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.R_CoefficientOfCollerationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property b_MaturityAdjustment() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.b_MaturityAdjustmentColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'b_MaturityAdjustment' in table 'ScenarioAnalyze_Concentrati"& _ 
                            "onRiskCHINA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.b_MaturityAdjustmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RW_RiskWeightedExposure() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.RW_RiskWeightedExposureColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RW_RiskWeightedExposure' in table 'ScenarioAnalyze_Concentr"& _ 
                            "ationRiskCHINA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.RW_RiskWeightedExposureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UL_UnexpectedLoss() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.UL_UnexpectedLossColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UL_UnexpectedLoss' in table 'ScenarioAnalyze_ConcentrationR"& _ 
                            "iskCHINA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.UL_UnexpectedLossColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property s_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.s_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 's_i' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_Total"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.s_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property K_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.K_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'K_i' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_Total"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.K_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property R_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.R_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_i' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_Total"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.R_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property VLGD_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.VLGD_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VLGD_i' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_To"& _ 
                            "tals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.VLGD_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property C_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.C_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_i' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_Total"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.C_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GA_n() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.GA_nColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GA_n' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_Tota"& _ 
                            "ls' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.GA_nColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RiskDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.RiskDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RiskDate' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_"& _ 
                            "Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.RiskDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdDate() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.IdDateColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdDate' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_To"& _ 
                            "tals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.IdDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ScenarioAnalyze_ConcentrationRiskCHINA_DateRow() As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date")),ScenarioAnalyze_ConcentrationRiskCHINA_DateRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Totals_Date"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.ClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.ClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.ClientGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNameNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.ClientGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubBorrowersCounterNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.SubBorrowersCounterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubBorrowersCounterNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.SubBorrowersCounterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFinalEadTotalSumNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.FinalEadTotalSumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFinalEadTotalSumNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.FinalEadTotalSumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLGDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.LGDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLGDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.LGDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPD_EaD_weightedNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.PD_EaD_weightedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPD_EaD_weightedNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.PD_EaD_weightedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPD_3bps_floorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.PD_3bps_floorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPD_3bps_floorNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.PD_3bps_floorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIndicatorOfFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.IndicatorOfFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIndicatorOfFloorNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.IndicatorOfFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityEADweigthedNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.MaturityEADweigthedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityEADweigthedNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.MaturityEADweigthedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsR_CoefficientOfCollerationNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.R_CoefficientOfCollerationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetR_CoefficientOfCollerationNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.R_CoefficientOfCollerationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Isb_MaturityAdjustmentNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.b_MaturityAdjustmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setb_MaturityAdjustmentNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.b_MaturityAdjustmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRW_RiskWeightedExposureNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.RW_RiskWeightedExposureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRW_RiskWeightedExposureNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.RW_RiskWeightedExposureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUL_UnexpectedLossNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.UL_UnexpectedLossColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUL_UnexpectedLossNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.UL_UnexpectedLossColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Iss_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.s_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Sets_iNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.s_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsK_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.K_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetK_iNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.K_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsR_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.R_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetR_iNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.R_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsVLGD_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.VLGD_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetVLGD_iNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.VLGD_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsC_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.C_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetC_iNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.C_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGA_nNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.GA_nColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGA_nNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.GA_nColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRiskDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.RiskDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRiskDateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.RiskDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.IdDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdDateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_Totals.IdDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetScenarioAnalyze_ConcentrationRiskCHINA_DetailsRows() As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow()
            If (Me.Table.ChildRelations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals") Is Nothing) Then
                Return New ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_ScenarioAnalyze_ConcentrationRiskCHINA_Details_Totals")),ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ScenarioAnalyze_ConcentrationRiskTBA_DateRow
        Inherits Global.System.Data.DataRow
        
        Private tableScenarioAnalyze_ConcentrationRiskTBA_Date As ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date = CType(Me.Table,ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RiskDate() As Date
            Get
                Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.RiskDateColumn),Date)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.RiskDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LGD_mod() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.LGD_modColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LGD_mod' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Dat"& _ 
                            "e' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.LGD_modColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property R_Colleration_Mod() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.R_Colleration_ModColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Colleration_Mod' in table 'ScenarioAnalyze_ConcentrationR"& _ 
                            "iskTBA_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.R_Colleration_ModColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ObligorRate_Mod() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.ObligorRate_ModColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ObligorRate_Mod' in table 'ScenarioAnalyze_ConcentrationRis"& _ 
                            "kTBA_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.ObligorRate_ModColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LevelOfConfidence() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.LevelOfConfidenceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LevelOfConfidence' in table 'ScenarioAnalyze_ConcentrationR"& _ 
                            "iskTBA_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.LevelOfConfidenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumEL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumELColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumEL' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Date'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumUL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumULColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumUL' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Date'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumULColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property nu_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.nu_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nu_Value' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Da"& _ 
                            "te' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.nu_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property p_alpha_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.p_alpha_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'p_alpha_Value' in table 'ScenarioAnalyze_ConcentrationRiskT"& _ 
                            "BA_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.p_alpha_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property b_beta_value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.b_beta_valueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'b_beta_value' in table 'ScenarioAnalyze_ConcentrationRiskTB"& _ 
                            "A_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.b_beta_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Gamma_inv() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.Gamma_invColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gamma_inv' in table 'ScenarioAnalyze_ConcentrationRiskTBA_D"& _ 
                            "ate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.Gamma_invColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Delta() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.DeltaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Delta' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Date'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.DeltaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property K_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.K_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'K_Value' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Dat"& _ 
                            "e' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.K_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumGA_rel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumGA_relColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumGA_rel' in table 'ScenarioAnalyze_ConcentrationRiskTBA_D"& _ 
                            "ate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumGA_relColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumGA_Total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumGA_TotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumGA_Total' in table 'ScenarioAnalyze_ConcentrationRiskTBA"& _ 
                            "_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumGA_TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdDate() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.IdDateColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdDate' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Date"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.IdDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SCENARIO_ANALYZES_DATERow() As SCENARIO_ANALYZES_DATERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE")),SCENARIO_ANALYZES_DATERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Date_SCENARIO_ANALYZES_DATE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLGD_modNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.LGD_modColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLGD_modNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.LGD_modColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsR_Colleration_ModNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.R_Colleration_ModColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetR_Colleration_ModNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.R_Colleration_ModColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsObligorRate_ModNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.ObligorRate_ModColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetObligorRate_ModNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.ObligorRate_ModColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLevelOfConfidenceNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.LevelOfConfidenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLevelOfConfidenceNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.LevelOfConfidenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumELNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumELNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumULNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumULColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumULNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumULColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Isnu_ValueNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.nu_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setnu_ValueNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.nu_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Isp_alpha_ValueNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.p_alpha_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setp_alpha_ValueNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.p_alpha_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Isb_beta_valueNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.b_beta_valueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setb_beta_valueNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.b_beta_valueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGamma_invNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.Gamma_invColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGamma_invNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.Gamma_invColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDeltaNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.DeltaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDeltaNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.DeltaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsK_ValueNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.K_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetK_ValueNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.K_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumGA_relNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumGA_relColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumGA_relNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumGA_relColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumGA_TotalNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumGA_TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumGA_TotalNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.SumGA_TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.IdDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdDateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Date.IdDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetScenarioAnalyze_ConcentrationRiskTBA_TotalsRows() As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow()
            If (Me.Table.ChildRelations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date") Is Nothing) Then
                Return New ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date")),ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow
        Inherits Global.System.Data.DataRow
        
        Private tableScenarioAnalyze_ConcentrationRiskTBA_Details As ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details = CType(Me.Table,ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Obligor_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Obligor_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Obligor Rate' in table 'ScenarioAnalyze_ConcentrationRiskTB"& _ 
                            "A_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Obligor_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contract_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Contract_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contract Type' in table 'ScenarioAnalyze_ConcentrationRiskT"& _ 
                            "BA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Contract_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Product_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Product_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product Type' in table 'ScenarioAnalyze_ConcentrationRiskTB"& _ 
                            "A_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Product_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _GL_Master___Account_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._GL_Master___Account_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GL Master / Account Type' in table 'ScenarioAnalyze_Concent"& _ 
                            "rationRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._GL_Master___Account_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Counterparty_Issuer_Collateral_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Counterparty_Issuer_Collateral_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Counterparty/Issuer/Collateral Name' in table 'ScenarioAnal"& _ 
                            "yze_ConcentrationRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Counterparty_Issuer_Collateral_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Client_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Client_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Client No' in table 'ScenarioAnalyze_ConcentrationRiskTBA_D"& _ 
                            "etails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Client_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contract_Collateral_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Contract_Collateral_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contract Collateral ID' in table 'ScenarioAnalyze_Concentra"& _ 
                            "tionRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Contract_Collateral_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Maturity_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Maturity_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Maturity Date' in table 'ScenarioAnalyze_ConcentrationRiskT"& _ 
                            "BA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Maturity_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Remaining_Year_s__to_Maturity() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Remaining_Year_s__to_MaturityColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remaining Year(s) to Maturity' in table 'ScenarioAnalyze_Co"& _ 
                            "ncentrationRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Remaining_Year_s__to_MaturityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Org_Ccy() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Org_CcyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Org Ccy' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Det"& _ 
                            "ails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Org_CcyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Outstanding__Org_Ccy_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Credit_Outstanding__Org_Ccy_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Outstanding (Org Ccy)' in table 'ScenarioAnalyze_Con"& _ 
                            "centrationRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Credit_Outstanding__Org_Ccy_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Outstanding__EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Credit_Outstanding__EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Outstanding (EUR Equ)' in table 'ScenarioAnalyze_Con"& _ 
                            "centrationRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Credit_Outstanding__EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetCreditOutstandingAmountEUR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.NetCreditOutstandingAmountEURColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCreditOutstandingAmountEUR' in table 'ScenarioAnalyze_Co"& _ 
                            "ncentrationRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.NetCreditOutstandingAmountEURColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InternalInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.InternalInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InternalInfo' in table 'ScenarioAnalyze_ConcentrationRiskTB"& _ 
                            "A_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.InternalInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.PDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Details'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.PDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property __1_ER_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.__1_ER_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '(1-ER)' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Deta"& _ 
                            "ils' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.__1_ER_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Risk_Amount_EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Credit_Risk_Amount_EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Risk Amount(EUR Equ)' in table 'ScenarioAnalyze_Conc"& _ 
                            "entrationRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Credit_Risk_Amount_EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _NetCredit_Risk_Amount_EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._NetCredit_Risk_Amount_EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCredit Risk Amount(EUR Equ)' in table 'ScenarioAnalyze_C"& _ 
                            "oncentrationRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._NetCredit_Risk_Amount_EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property __1_ER_45_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.__1_ER_45_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '(1-ER_45)' in table 'ScenarioAnalyze_ConcentrationRiskTBA_D"& _ 
                            "etails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.__1_ER_45_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CreditRiskAmountEUREquER45() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.CreditRiskAmountEUREquER45Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreditRiskAmountEUREquER45' in table 'ScenarioAnalyze_Conce"& _ 
                            "ntrationRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.CreditRiskAmountEUREquER45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetCreditRiskAmountEUREquER45() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.NetCreditRiskAmountEUREquER45Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCreditRiskAmountEUREquER45' in table 'ScenarioAnalyze_Co"& _ 
                            "ncentrationRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.NetCreditRiskAmountEUREquER45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CoreDefinition() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.CoreDefinitionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreDefinition' in table 'ScenarioAnalyze_ConcentrationRisk"& _ 
                            "TBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.CoreDefinitionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroup() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.ClientGroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroup' in table 'ScenarioAnalyze_ConcentrationRiskTBA"& _ 
                            "_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.ClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.ClientGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroupName' in table 'ScenarioAnalyze_ConcentrationRis"& _ 
                            "kTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.ClientGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityWithoutCapFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.MaturityWithoutCapFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityWithoutCapFloor' in table 'ScenarioAnalyze_Concentr"& _ 
                            "ationRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.MaturityWithoutCapFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EaDweigthedMaturityWithoutCapFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.EaDweigthedMaturityWithoutCapFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EaDweigthedMaturityWithoutCapFloor' in table 'ScenarioAnaly"& _ 
                            "ze_ConcentrationRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.EaDweigthedMaturityWithoutCapFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PDxFinalEaD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.PDxFinalEaDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PDxFinalEaD' in table 'ScenarioAnalyze_ConcentrationRiskTBA"& _ 
                            "_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.PDxFinalEaDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LGDfinalEaDweighted() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.LGDfinalEaDweightedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LGDfinalEaDweighted' in table 'ScenarioAnalyze_Concentratio"& _ 
                            "nRiskTBA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.LGDfinalEaDweightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RiskDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.RiskDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RiskDate' in table 'ScenarioAnalyze_ConcentrationRiskTBA_De"& _ 
                            "tails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.RiskDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdClientGroup() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.IdClientGroupColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdClientGroup' in table 'ScenarioAnalyze_ConcentrationRiskT"& _ 
                            "BA_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.IdClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow() As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals")),ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsObligor_RateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Obligor_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetObligor_RateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Obligor_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContract_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Contract_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContract_TypeNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Contract_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProduct_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Product_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProduct_TypeNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Product_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_GL_Master___Account_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._GL_Master___Account_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_GL_Master___Account_TypeNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._GL_Master___Account_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Counterparty_Issuer_Collateral_NameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Counterparty_Issuer_Collateral_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Counterparty_Issuer_Collateral_NameNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Counterparty_Issuer_Collateral_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClient_NoNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Client_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClient_NoNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Client_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContract_Collateral_IDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Contract_Collateral_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContract_Collateral_IDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Contract_Collateral_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturity_DateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Maturity_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturity_DateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Maturity_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Remaining_Year_s__to_MaturityNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Remaining_Year_s__to_MaturityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Remaining_Year_s__to_MaturityNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Remaining_Year_s__to_MaturityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOrg_CcyNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Org_CcyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOrg_CcyNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.Org_CcyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Outstanding__Org_Ccy_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Credit_Outstanding__Org_Ccy_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Outstanding__Org_Ccy_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Credit_Outstanding__Org_Ccy_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Outstanding__EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Credit_Outstanding__EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Outstanding__EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Credit_Outstanding__EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetCreditOutstandingAmountEURNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.NetCreditOutstandingAmountEURColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetCreditOutstandingAmountEURNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.NetCreditOutstandingAmountEURColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInternalInfoNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.InternalInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInternalInfoNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.InternalInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.PDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.PDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is__1_ER_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.__1_ER_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set__1_ER_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.__1_ER_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Risk_Amount_EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Credit_Risk_Amount_EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Risk_Amount_EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._Credit_Risk_Amount_EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_NetCredit_Risk_Amount_EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._NetCredit_Risk_Amount_EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_NetCredit_Risk_Amount_EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details._NetCredit_Risk_Amount_EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is__1_ER_45_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.__1_ER_45_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set__1_ER_45_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.__1_ER_45_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCreditRiskAmountEUREquER45Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.CreditRiskAmountEUREquER45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCreditRiskAmountEUREquER45Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.CreditRiskAmountEUREquER45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetCreditRiskAmountEUREquER45Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.NetCreditRiskAmountEUREquER45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetCreditRiskAmountEUREquER45Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.NetCreditRiskAmountEUREquER45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCoreDefinitionNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.CoreDefinitionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCoreDefinitionNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.CoreDefinitionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.ClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.ClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.ClientGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNameNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.ClientGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityWithoutCapFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.MaturityWithoutCapFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityWithoutCapFloorNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.MaturityWithoutCapFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEaDweigthedMaturityWithoutCapFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.EaDweigthedMaturityWithoutCapFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEaDweigthedMaturityWithoutCapFloorNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.EaDweigthedMaturityWithoutCapFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPDxFinalEaDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.PDxFinalEaDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPDxFinalEaDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.PDxFinalEaDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLGDfinalEaDweightedNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.LGDfinalEaDweightedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLGDfinalEaDweightedNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.LGDfinalEaDweightedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRiskDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.RiskDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRiskDateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.RiskDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.IdClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdClientGroupNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Details.IdClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow
        Inherits Global.System.Data.DataRow
        
        Private tableScenarioAnalyze_ConcentrationRiskTBA_Totals As ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals = CType(Me.Table,ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroup() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.ClientGroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroup' in table 'ScenarioAnalyze_ConcentrationRiskTBA"& _ 
                            "_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.ClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.ClientGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroupName' in table 'ScenarioAnalyze_ConcentrationRis"& _ 
                            "kTBA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.ClientGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubBorrowersCounter() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.SubBorrowersCounterColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubBorrowersCounter' in table 'ScenarioAnalyze_Concentratio"& _ 
                            "nRiskTBA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.SubBorrowersCounterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FinalEadTotalSum() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.FinalEadTotalSumColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinalEadTotalSum' in table 'ScenarioAnalyze_ConcentrationRi"& _ 
                            "skTBA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.FinalEadTotalSumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LGD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.LGDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LGD' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Totals'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.LGDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PD_EaD_weighted() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.PD_EaD_weightedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD_EaD_weighted' in table 'ScenarioAnalyze_ConcentrationRis"& _ 
                            "kTBA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.PD_EaD_weightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PD_3bps_floor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.PD_3bps_floorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD_3bps_floor' in table 'ScenarioAnalyze_ConcentrationRiskT"& _ 
                            "BA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.PD_3bps_floorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IndicatorOfFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.IndicatorOfFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndicatorOfFloor' in table 'ScenarioAnalyze_ConcentrationRi"& _ 
                            "skTBA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.IndicatorOfFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityEADweigthed() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.MaturityEADweigthedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityEADweigthed' in table 'ScenarioAnalyze_Concentratio"& _ 
                            "nRiskTBA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.MaturityEADweigthedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property R_CoefficientOfColleration() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.R_CoefficientOfCollerationColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_CoefficientOfColleration' in table 'ScenarioAnalyze_Conce"& _ 
                            "ntrationRiskTBA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.R_CoefficientOfCollerationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property b_MaturityAdjustment() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.b_MaturityAdjustmentColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'b_MaturityAdjustment' in table 'ScenarioAnalyze_Concentrati"& _ 
                            "onRiskTBA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.b_MaturityAdjustmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RW_RiskWeightedExposure() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.RW_RiskWeightedExposureColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RW_RiskWeightedExposure' in table 'ScenarioAnalyze_Concentr"& _ 
                            "ationRiskTBA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.RW_RiskWeightedExposureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UL_UnexpectedLoss() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.UL_UnexpectedLossColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UL_UnexpectedLoss' in table 'ScenarioAnalyze_ConcentrationR"& _ 
                            "iskTBA_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.UL_UnexpectedLossColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property s_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.s_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 's_i' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Totals'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.s_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property K_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.K_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'K_i' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Totals'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.K_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property R_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.R_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_i' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Totals'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.R_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property VLGD_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.VLGD_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VLGD_i' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Tota"& _ 
                            "ls' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.VLGD_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property C_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.C_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_i' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Totals'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.C_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GA_n() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.GA_nColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GA_n' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Totals"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.GA_nColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RiskDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.RiskDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RiskDate' in table 'ScenarioAnalyze_ConcentrationRiskTBA_To"& _ 
                            "tals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.RiskDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdDate() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.IdDateColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdDate' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Tota"& _ 
                            "ls' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.IdDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ScenarioAnalyze_ConcentrationRiskTBA_DateRow() As ScenarioAnalyze_ConcentrationRiskTBA_DateRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date")),ScenarioAnalyze_ConcentrationRiskTBA_DateRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Totals_Date"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.ClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.ClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.ClientGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNameNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.ClientGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubBorrowersCounterNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.SubBorrowersCounterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubBorrowersCounterNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.SubBorrowersCounterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFinalEadTotalSumNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.FinalEadTotalSumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFinalEadTotalSumNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.FinalEadTotalSumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLGDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.LGDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLGDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.LGDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPD_EaD_weightedNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.PD_EaD_weightedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPD_EaD_weightedNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.PD_EaD_weightedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPD_3bps_floorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.PD_3bps_floorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPD_3bps_floorNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.PD_3bps_floorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIndicatorOfFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.IndicatorOfFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIndicatorOfFloorNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.IndicatorOfFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityEADweigthedNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.MaturityEADweigthedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityEADweigthedNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.MaturityEADweigthedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsR_CoefficientOfCollerationNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.R_CoefficientOfCollerationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetR_CoefficientOfCollerationNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.R_CoefficientOfCollerationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Isb_MaturityAdjustmentNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.b_MaturityAdjustmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setb_MaturityAdjustmentNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.b_MaturityAdjustmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRW_RiskWeightedExposureNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.RW_RiskWeightedExposureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRW_RiskWeightedExposureNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.RW_RiskWeightedExposureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUL_UnexpectedLossNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.UL_UnexpectedLossColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUL_UnexpectedLossNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.UL_UnexpectedLossColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Iss_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.s_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Sets_iNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.s_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsK_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.K_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetK_iNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.K_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsR_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.R_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetR_iNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.R_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsVLGD_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.VLGD_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetVLGD_iNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.VLGD_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsC_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.C_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetC_iNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.C_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGA_nNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.GA_nColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGA_nNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.GA_nColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRiskDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.RiskDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRiskDateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.RiskDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.IdDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdDateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_Totals.IdDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetScenarioAnalyze_ConcentrationRiskTBA_DetailsRows() As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow()
            If (Me.Table.ChildRelations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals") Is Nothing) Then
                Return New ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_ScenarioAnalyze_ConcentrationRiskTBA_Details_Totals")),ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ScenarioAnalyze_GeneralStressTest_DateRow
        Inherits Global.System.Data.DataRow
        
        Private tableScenarioAnalyze_GeneralStressTest_Date As ScenarioAnalyze_GeneralStressTest_DateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableScenarioAnalyze_GeneralStressTest_Date = CType(Me.Table,ScenarioAnalyze_GeneralStressTest_DateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RiskDate() As Date
            Get
                Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.RiskDateColumn),Date)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.RiskDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LGD_mod() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.LGD_modColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LGD_mod' in table 'ScenarioAnalyze_GeneralStressTest_Date' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.LGD_modColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property R_Colleration_Mod() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.R_Colleration_ModColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_Colleration_Mod' in table 'ScenarioAnalyze_GeneralStressT"& _ 
                            "est_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.R_Colleration_ModColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ObligorRate_Mod() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.ObligorRate_ModColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ObligorRate_Mod' in table 'ScenarioAnalyze_GeneralStressTes"& _ 
                            "t_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.ObligorRate_ModColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LevelOfConfidence() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.LevelOfConfidenceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LevelOfConfidence' in table 'ScenarioAnalyze_GeneralStressT"& _ 
                            "est_Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.LevelOfConfidenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumEL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumELColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumEL' in table 'ScenarioAnalyze_GeneralStressTest_Date' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumUL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumULColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumUL' in table 'ScenarioAnalyze_GeneralStressTest_Date' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumULColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property nu_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.nu_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nu_Value' in table 'ScenarioAnalyze_GeneralStressTest_Date'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.nu_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property p_alpha_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.p_alpha_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'p_alpha_Value' in table 'ScenarioAnalyze_GeneralStressTest_"& _ 
                            "Date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.p_alpha_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property b_beta_value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.b_beta_valueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'b_beta_value' in table 'ScenarioAnalyze_GeneralStressTest_D"& _ 
                            "ate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.b_beta_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Gamma_inv() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.Gamma_invColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gamma_inv' in table 'ScenarioAnalyze_GeneralStressTest_Date"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.Gamma_invColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Delta() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.DeltaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Delta' in table 'ScenarioAnalyze_GeneralStressTest_Date' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.DeltaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property K_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.K_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'K_Value' in table 'ScenarioAnalyze_GeneralStressTest_Date' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.K_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumGA_rel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumGA_relColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumGA_rel' in table 'ScenarioAnalyze_GeneralStressTest_Date"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumGA_relColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SumGA_Total() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumGA_TotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SumGA_Total' in table 'ScenarioAnalyze_GeneralStressTest_Da"& _ 
                            "te' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumGA_TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdDate() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.IdDateColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdDate' in table 'ScenarioAnalyze_GeneralStressTest_Date' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.IdDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SCENARIO_ANALYZES_DATERow() As SCENARIO_ANALYZES_DATERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE")),SCENARIO_ANALYZES_DATERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_ScenarioAnalyze_GeneralStressTest_Date_SCENARIO_ANALYZES_DATE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLGD_modNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.LGD_modColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLGD_modNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.LGD_modColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsR_Colleration_ModNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.R_Colleration_ModColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetR_Colleration_ModNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.R_Colleration_ModColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsObligorRate_ModNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.ObligorRate_ModColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetObligorRate_ModNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.ObligorRate_ModColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLevelOfConfidenceNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.LevelOfConfidenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLevelOfConfidenceNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.LevelOfConfidenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumELNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumELNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumULNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumULColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumULNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumULColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Isnu_ValueNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.nu_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setnu_ValueNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.nu_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Isp_alpha_ValueNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.p_alpha_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setp_alpha_ValueNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.p_alpha_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Isb_beta_valueNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.b_beta_valueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setb_beta_valueNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.b_beta_valueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGamma_invNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.Gamma_invColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGamma_invNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.Gamma_invColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDeltaNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.DeltaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDeltaNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.DeltaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsK_ValueNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.K_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetK_ValueNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.K_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumGA_relNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumGA_relColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumGA_relNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumGA_relColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSumGA_TotalNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumGA_TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSumGA_TotalNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.SumGA_TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Date.IdDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdDateNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Date.IdDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetScenarioAnalyze_GeneralStressTest_TotalsRows() As ScenarioAnalyze_GeneralStressTest_TotalsRow()
            If (Me.Table.ChildRelations("FK_ScenarioAnalyze_GeneralStressTest_Totals_Date") Is Nothing) Then
                Return New ScenarioAnalyze_GeneralStressTest_TotalsRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_ScenarioAnalyze_GeneralStressTest_Totals_Date")),ScenarioAnalyze_GeneralStressTest_TotalsRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ScenarioAnalyze_GeneralStressTest_DetailsRow
        Inherits Global.System.Data.DataRow
        
        Private tableScenarioAnalyze_GeneralStressTest_Details As ScenarioAnalyze_GeneralStressTest_DetailsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableScenarioAnalyze_GeneralStressTest_Details = CType(Me.Table,ScenarioAnalyze_GeneralStressTest_DetailsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Obligor_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Obligor_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Obligor Rate' in table 'ScenarioAnalyze_GeneralStressTest_D"& _ 
                            "etails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Obligor_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contract_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Contract_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contract Type' in table 'ScenarioAnalyze_GeneralStressTest_"& _ 
                            "Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Contract_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Product_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Product_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product Type' in table 'ScenarioAnalyze_GeneralStressTest_D"& _ 
                            "etails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Product_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _GL_Master___Account_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._GL_Master___Account_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GL Master / Account Type' in table 'ScenarioAnalyze_General"& _ 
                            "StressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._GL_Master___Account_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Counterparty_Issuer_Collateral_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Counterparty_Issuer_Collateral_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Counterparty/Issuer/Collateral Name' in table 'ScenarioAnal"& _ 
                            "yze_GeneralStressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Counterparty_Issuer_Collateral_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Client_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Client_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Client No' in table 'ScenarioAnalyze_GeneralStressTest_Deta"& _ 
                            "ils' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Client_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contract_Collateral_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Contract_Collateral_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contract Collateral ID' in table 'ScenarioAnalyze_GeneralSt"& _ 
                            "ressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Contract_Collateral_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Maturity_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Maturity_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Maturity Date' in table 'ScenarioAnalyze_GeneralStressTest_"& _ 
                            "Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Maturity_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Remaining_Year_s__to_Maturity() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Remaining_Year_s__to_MaturityColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remaining Year(s) to Maturity' in table 'ScenarioAnalyze_Ge"& _ 
                            "neralStressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Remaining_Year_s__to_MaturityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Org_Ccy() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Org_CcyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Org Ccy' in table 'ScenarioAnalyze_GeneralStressTest_Detail"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Org_CcyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Outstanding__Org_Ccy_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Credit_Outstanding__Org_Ccy_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Outstanding (Org Ccy)' in table 'ScenarioAnalyze_Gen"& _ 
                            "eralStressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Credit_Outstanding__Org_Ccy_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Outstanding__EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Credit_Outstanding__EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Outstanding (EUR Equ)' in table 'ScenarioAnalyze_Gen"& _ 
                            "eralStressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Credit_Outstanding__EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetCreditOutstandingAmountEUR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.NetCreditOutstandingAmountEURColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCreditOutstandingAmountEUR' in table 'ScenarioAnalyze_Ge"& _ 
                            "neralStressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.NetCreditOutstandingAmountEURColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InternalInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.InternalInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InternalInfo' in table 'ScenarioAnalyze_GeneralStressTest_D"& _ 
                            "etails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.InternalInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.PDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD' in table 'ScenarioAnalyze_GeneralStressTest_Details' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.PDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property __1_ER_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.__1_ER_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '(1-ER)' in table 'ScenarioAnalyze_GeneralStressTest_Details"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.__1_ER_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Risk_Amount_EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Credit_Risk_Amount_EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Risk Amount(EUR Equ)' in table 'ScenarioAnalyze_Gene"& _ 
                            "ralStressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Credit_Risk_Amount_EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _NetCredit_Risk_Amount_EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._NetCredit_Risk_Amount_EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCredit Risk Amount(EUR Equ)' in table 'ScenarioAnalyze_G"& _ 
                            "eneralStressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._NetCredit_Risk_Amount_EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property __1_ER_45_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.__1_ER_45_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '(1-ER_45)' in table 'ScenarioAnalyze_GeneralStressTest_Deta"& _ 
                            "ils' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.__1_ER_45_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CreditRiskAmountEUREquER45() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.CreditRiskAmountEUREquER45Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreditRiskAmountEUREquER45' in table 'ScenarioAnalyze_Gener"& _ 
                            "alStressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.CreditRiskAmountEUREquER45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetCreditRiskAmountEUREquER45() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.NetCreditRiskAmountEUREquER45Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCreditRiskAmountEUREquER45' in table 'ScenarioAnalyze_Ge"& _ 
                            "neralStressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.NetCreditRiskAmountEUREquER45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CoreDefinition() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.CoreDefinitionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreDefinition' in table 'ScenarioAnalyze_GeneralStressTest"& _ 
                            "_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.CoreDefinitionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroup() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.ClientGroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroup' in table 'ScenarioAnalyze_GeneralStressTest_De"& _ 
                            "tails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.ClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.ClientGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroupName' in table 'ScenarioAnalyze_GeneralStressTes"& _ 
                            "t_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.ClientGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityWithoutCapFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.MaturityWithoutCapFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityWithoutCapFloor' in table 'ScenarioAnalyze_GeneralS"& _ 
                            "tressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.MaturityWithoutCapFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EaDweigthedMaturityWithoutCapFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.EaDweigthedMaturityWithoutCapFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EaDweigthedMaturityWithoutCapFloor' in table 'ScenarioAnaly"& _ 
                            "ze_GeneralStressTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.EaDweigthedMaturityWithoutCapFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PDxFinalEaD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.PDxFinalEaDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PDxFinalEaD' in table 'ScenarioAnalyze_GeneralStressTest_De"& _ 
                            "tails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.PDxFinalEaDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LGDfinalEaDweighted() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.LGDfinalEaDweightedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LGDfinalEaDweighted' in table 'ScenarioAnalyze_GeneralStres"& _ 
                            "sTest_Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.LGDfinalEaDweightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RiskDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.RiskDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RiskDate' in table 'ScenarioAnalyze_GeneralStressTest_Detai"& _ 
                            "ls' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.RiskDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdClientGroup() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.IdClientGroupColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdClientGroup' in table 'ScenarioAnalyze_GeneralStressTest_"& _ 
                            "Details' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.IdClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ScenarioAnalyze_GeneralStressTest_TotalsRow() As ScenarioAnalyze_GeneralStressTest_TotalsRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_ScenarioAnalyze_GeneralStressTest_Details_Totals")),ScenarioAnalyze_GeneralStressTest_TotalsRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_ScenarioAnalyze_GeneralStressTest_Details_Totals"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsObligor_RateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.Obligor_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetObligor_RateNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Obligor_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContract_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.Contract_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContract_TypeNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Contract_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProduct_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.Product_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProduct_TypeNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Product_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_GL_Master___Account_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details._GL_Master___Account_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_GL_Master___Account_TypeNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._GL_Master___Account_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Counterparty_Issuer_Collateral_NameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details._Counterparty_Issuer_Collateral_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Counterparty_Issuer_Collateral_NameNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Counterparty_Issuer_Collateral_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClient_NoNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.Client_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClient_NoNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Client_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContract_Collateral_IDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.Contract_Collateral_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContract_Collateral_IDNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Contract_Collateral_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturity_DateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.Maturity_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturity_DateNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Maturity_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Remaining_Year_s__to_MaturityNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details._Remaining_Year_s__to_MaturityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Remaining_Year_s__to_MaturityNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Remaining_Year_s__to_MaturityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOrg_CcyNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.Org_CcyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOrg_CcyNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.Org_CcyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Outstanding__Org_Ccy_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details._Credit_Outstanding__Org_Ccy_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Outstanding__Org_Ccy_Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Credit_Outstanding__Org_Ccy_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Outstanding__EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details._Credit_Outstanding__EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Outstanding__EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Credit_Outstanding__EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetCreditOutstandingAmountEURNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.NetCreditOutstandingAmountEURColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetCreditOutstandingAmountEURNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.NetCreditOutstandingAmountEURColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInternalInfoNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.InternalInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInternalInfoNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.InternalInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.PDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPDNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.PDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is__1_ER_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.__1_ER_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set__1_ER_Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.__1_ER_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Risk_Amount_EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details._Credit_Risk_Amount_EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Risk_Amount_EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._Credit_Risk_Amount_EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_NetCredit_Risk_Amount_EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details._NetCredit_Risk_Amount_EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_NetCredit_Risk_Amount_EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details._NetCredit_Risk_Amount_EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is__1_ER_45_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.__1_ER_45_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set__1_ER_45_Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.__1_ER_45_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCreditRiskAmountEUREquER45Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.CreditRiskAmountEUREquER45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCreditRiskAmountEUREquER45Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.CreditRiskAmountEUREquER45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetCreditRiskAmountEUREquER45Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.NetCreditRiskAmountEUREquER45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetCreditRiskAmountEUREquER45Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.NetCreditRiskAmountEUREquER45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCoreDefinitionNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.CoreDefinitionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCoreDefinitionNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.CoreDefinitionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.ClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.ClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.ClientGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNameNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.ClientGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityWithoutCapFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.MaturityWithoutCapFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityWithoutCapFloorNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.MaturityWithoutCapFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEaDweigthedMaturityWithoutCapFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.EaDweigthedMaturityWithoutCapFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEaDweigthedMaturityWithoutCapFloorNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.EaDweigthedMaturityWithoutCapFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPDxFinalEaDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.PDxFinalEaDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPDxFinalEaDNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.PDxFinalEaDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLGDfinalEaDweightedNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.LGDfinalEaDweightedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLGDfinalEaDweightedNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.LGDfinalEaDweightedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRiskDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.RiskDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRiskDateNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.RiskDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Details.IdClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdClientGroupNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Details.IdClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ScenarioAnalyze_GeneralStressTest_TotalsRow
        Inherits Global.System.Data.DataRow
        
        Private tableScenarioAnalyze_GeneralStressTest_Totals As ScenarioAnalyze_GeneralStressTest_TotalsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableScenarioAnalyze_GeneralStressTest_Totals = CType(Me.Table,ScenarioAnalyze_GeneralStressTest_TotalsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroup() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.ClientGroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroup' in table 'ScenarioAnalyze_GeneralStressTest_To"& _ 
                            "tals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.ClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.ClientGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroupName' in table 'ScenarioAnalyze_GeneralStressTes"& _ 
                            "t_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.ClientGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubBorrowersCounter() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.SubBorrowersCounterColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubBorrowersCounter' in table 'ScenarioAnalyze_GeneralStres"& _ 
                            "sTest_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.SubBorrowersCounterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FinalEadTotalSum() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.FinalEadTotalSumColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinalEadTotalSum' in table 'ScenarioAnalyze_GeneralStressTe"& _ 
                            "st_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.FinalEadTotalSumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LGD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.LGDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LGD' in table 'ScenarioAnalyze_GeneralStressTest_Totals' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.LGDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PD_EaD_weighted() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.PD_EaD_weightedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD_EaD_weighted' in table 'ScenarioAnalyze_GeneralStressTes"& _ 
                            "t_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.PD_EaD_weightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PD_3bps_floor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.PD_3bps_floorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD_3bps_floor' in table 'ScenarioAnalyze_GeneralStressTest_"& _ 
                            "Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.PD_3bps_floorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IndicatorOfFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.IndicatorOfFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndicatorOfFloor' in table 'ScenarioAnalyze_GeneralStressTe"& _ 
                            "st_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.IndicatorOfFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityEADweigthed() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.MaturityEADweigthedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityEADweigthed' in table 'ScenarioAnalyze_GeneralStres"& _ 
                            "sTest_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.MaturityEADweigthedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property R_CoefficientOfColleration() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.R_CoefficientOfCollerationColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_CoefficientOfColleration' in table 'ScenarioAnalyze_Gener"& _ 
                            "alStressTest_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.R_CoefficientOfCollerationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property b_MaturityAdjustment() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.b_MaturityAdjustmentColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'b_MaturityAdjustment' in table 'ScenarioAnalyze_GeneralStre"& _ 
                            "ssTest_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.b_MaturityAdjustmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RW_RiskWeightedExposure() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.RW_RiskWeightedExposureColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RW_RiskWeightedExposure' in table 'ScenarioAnalyze_GeneralS"& _ 
                            "tressTest_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.RW_RiskWeightedExposureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UL_UnexpectedLoss() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.UL_UnexpectedLossColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UL_UnexpectedLoss' in table 'ScenarioAnalyze_GeneralStressT"& _ 
                            "est_Totals' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.UL_UnexpectedLossColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property s_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.s_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 's_i' in table 'ScenarioAnalyze_GeneralStressTest_Totals' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.s_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property K_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.K_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'K_i' in table 'ScenarioAnalyze_GeneralStressTest_Totals' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.K_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property R_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.R_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'R_i' in table 'ScenarioAnalyze_GeneralStressTest_Totals' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.R_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property VLGD_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.VLGD_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VLGD_i' in table 'ScenarioAnalyze_GeneralStressTest_Totals'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.VLGD_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property C_i() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.C_iColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_i' in table 'ScenarioAnalyze_GeneralStressTest_Totals' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.C_iColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GA_n() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.GA_nColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GA_n' in table 'ScenarioAnalyze_GeneralStressTest_Totals' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.GA_nColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RiskDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.RiskDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RiskDate' in table 'ScenarioAnalyze_GeneralStressTest_Total"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.RiskDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdDate() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.IdDateColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdDate' in table 'ScenarioAnalyze_GeneralStressTest_Totals'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.IdDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ScenarioAnalyze_GeneralStressTest_DateRow() As ScenarioAnalyze_GeneralStressTest_DateRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_ScenarioAnalyze_GeneralStressTest_Totals_Date")),ScenarioAnalyze_GeneralStressTest_DateRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_ScenarioAnalyze_GeneralStressTest_Totals_Date"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.ClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.ClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.ClientGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNameNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.ClientGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubBorrowersCounterNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.SubBorrowersCounterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubBorrowersCounterNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.SubBorrowersCounterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFinalEadTotalSumNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.FinalEadTotalSumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFinalEadTotalSumNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.FinalEadTotalSumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLGDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.LGDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLGDNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.LGDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPD_EaD_weightedNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.PD_EaD_weightedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPD_EaD_weightedNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.PD_EaD_weightedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPD_3bps_floorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.PD_3bps_floorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPD_3bps_floorNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.PD_3bps_floorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIndicatorOfFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.IndicatorOfFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIndicatorOfFloorNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.IndicatorOfFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityEADweigthedNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.MaturityEADweigthedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityEADweigthedNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.MaturityEADweigthedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsR_CoefficientOfCollerationNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.R_CoefficientOfCollerationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetR_CoefficientOfCollerationNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.R_CoefficientOfCollerationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Isb_MaturityAdjustmentNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.b_MaturityAdjustmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setb_MaturityAdjustmentNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.b_MaturityAdjustmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRW_RiskWeightedExposureNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.RW_RiskWeightedExposureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRW_RiskWeightedExposureNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.RW_RiskWeightedExposureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUL_UnexpectedLossNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.UL_UnexpectedLossColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUL_UnexpectedLossNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.UL_UnexpectedLossColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Iss_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.s_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Sets_iNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.s_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsK_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.K_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetK_iNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.K_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsR_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.R_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetR_iNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.R_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsVLGD_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.VLGD_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetVLGD_iNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.VLGD_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsC_iNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.C_iColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetC_iNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.C_iColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGA_nNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.GA_nColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGA_nNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.GA_nColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRiskDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.RiskDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRiskDateNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.RiskDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_Totals.IdDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdDateNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_Totals.IdDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function GetScenarioAnalyze_GeneralStressTest_DetailsRows() As ScenarioAnalyze_GeneralStressTest_DetailsRow()
            If (Me.Table.ChildRelations("FK_ScenarioAnalyze_GeneralStressTest_Details_Totals") Is Nothing) Then
                Return New ScenarioAnalyze_GeneralStressTest_DetailsRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_ScenarioAnalyze_GeneralStressTest_Details_Totals")),ScenarioAnalyze_GeneralStressTest_DetailsRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ScenarioAnalyze_GeneralStressTest_DetailsALLRow
        Inherits Global.System.Data.DataRow
        
        Private tableScenarioAnalyze_GeneralStressTest_DetailsALL As ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL = CType(Me.Table,ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Obligor_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Obligor_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Obligor Rate' in table 'ScenarioAnalyze_GeneralStressTest_D"& _ 
                            "etailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Obligor_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contract_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Contract_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contract Type' in table 'ScenarioAnalyze_GeneralStressTest_"& _ 
                            "DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Contract_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Product_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Product_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product Type' in table 'ScenarioAnalyze_GeneralStressTest_D"& _ 
                            "etailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Product_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _GL_Master___Account_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._GL_Master___Account_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GL Master / Account Type' in table 'ScenarioAnalyze_General"& _ 
                            "StressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._GL_Master___Account_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Counterparty_Issuer_Collateral_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Counterparty_Issuer_Collateral_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Counterparty/Issuer/Collateral Name' in table 'ScenarioAnal"& _ 
                            "yze_GeneralStressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Counterparty_Issuer_Collateral_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Client_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Client_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Client No' in table 'ScenarioAnalyze_GeneralStressTest_Deta"& _ 
                            "ilsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Client_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contract_Collateral_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Contract_Collateral_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contract Collateral ID' in table 'ScenarioAnalyze_GeneralSt"& _ 
                            "ressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Contract_Collateral_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Maturity_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Maturity_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Maturity Date' in table 'ScenarioAnalyze_GeneralStressTest_"& _ 
                            "DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Maturity_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Remaining_Year_s__to_Maturity() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Remaining_Year_s__to_MaturityColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remaining Year(s) to Maturity' in table 'ScenarioAnalyze_Ge"& _ 
                            "neralStressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Remaining_Year_s__to_MaturityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Org_Ccy() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Org_CcyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Org Ccy' in table 'ScenarioAnalyze_GeneralStressTest_Detail"& _ 
                            "sALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Org_CcyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Outstanding__Org_Ccy_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Credit_Outstanding__Org_Ccy_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Outstanding (Org Ccy)' in table 'ScenarioAnalyze_Gen"& _ 
                            "eralStressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Credit_Outstanding__Org_Ccy_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Outstanding__EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Credit_Outstanding__EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Outstanding (EUR Equ)' in table 'ScenarioAnalyze_Gen"& _ 
                            "eralStressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Credit_Outstanding__EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetCreditOutstandingAmountEUR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.NetCreditOutstandingAmountEURColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCreditOutstandingAmountEUR' in table 'ScenarioAnalyze_Ge"& _ 
                            "neralStressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.NetCreditOutstandingAmountEURColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InternalInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.InternalInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InternalInfo' in table 'ScenarioAnalyze_GeneralStressTest_D"& _ 
                            "etailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.InternalInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.PDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD' in table 'ScenarioAnalyze_GeneralStressTest_DetailsALL'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.PDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property __1_ER_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.__1_ER_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '(1-ER)' in table 'ScenarioAnalyze_GeneralStressTest_Details"& _ 
                            "ALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.__1_ER_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Risk_Amount_EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Credit_Risk_Amount_EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Risk Amount(EUR Equ)' in table 'ScenarioAnalyze_Gene"& _ 
                            "ralStressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Credit_Risk_Amount_EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _NetCredit_Risk_Amount_EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._NetCredit_Risk_Amount_EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCredit Risk Amount(EUR Equ)' in table 'ScenarioAnalyze_G"& _ 
                            "eneralStressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._NetCredit_Risk_Amount_EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property __1_ER_45_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.__1_ER_45_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '(1-ER_45)' in table 'ScenarioAnalyze_GeneralStressTest_Deta"& _ 
                            "ilsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.__1_ER_45_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CreditRiskAmountEUREquER45() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.CreditRiskAmountEUREquER45Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreditRiskAmountEUREquER45' in table 'ScenarioAnalyze_Gener"& _ 
                            "alStressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.CreditRiskAmountEUREquER45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetCreditRiskAmountEUREquER45() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.NetCreditRiskAmountEUREquER45Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCreditRiskAmountEUREquER45' in table 'ScenarioAnalyze_Ge"& _ 
                            "neralStressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.NetCreditRiskAmountEUREquER45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CoreDefinition() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.CoreDefinitionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreDefinition' in table 'ScenarioAnalyze_GeneralStressTest"& _ 
                            "_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.CoreDefinitionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroup() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.ClientGroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroup' in table 'ScenarioAnalyze_GeneralStressTest_De"& _ 
                            "tailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.ClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.ClientGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroupName' in table 'ScenarioAnalyze_GeneralStressTes"& _ 
                            "t_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.ClientGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityWithoutCapFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.MaturityWithoutCapFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityWithoutCapFloor' in table 'ScenarioAnalyze_GeneralS"& _ 
                            "tressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.MaturityWithoutCapFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EaDweigthedMaturityWithoutCapFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.EaDweigthedMaturityWithoutCapFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EaDweigthedMaturityWithoutCapFloor' in table 'ScenarioAnaly"& _ 
                            "ze_GeneralStressTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.EaDweigthedMaturityWithoutCapFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PDxFinalEaD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.PDxFinalEaDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PDxFinalEaD' in table 'ScenarioAnalyze_GeneralStressTest_De"& _ 
                            "tailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.PDxFinalEaDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LGDfinalEaDweighted() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.LGDfinalEaDweightedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LGDfinalEaDweighted' in table 'ScenarioAnalyze_GeneralStres"& _ 
                            "sTest_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.LGDfinalEaDweightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RiskDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.RiskDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RiskDate' in table 'ScenarioAnalyze_GeneralStressTest_Detai"& _ 
                            "lsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.RiskDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdClientGroup() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.IdClientGroupColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdClientGroup' in table 'ScenarioAnalyze_GeneralStressTest_"& _ 
                            "DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.IdClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsObligor_RateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Obligor_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetObligor_RateNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Obligor_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContract_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Contract_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContract_TypeNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Contract_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProduct_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Product_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProduct_TypeNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Product_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_GL_Master___Account_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._GL_Master___Account_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_GL_Master___Account_TypeNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._GL_Master___Account_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Counterparty_Issuer_Collateral_NameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Counterparty_Issuer_Collateral_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Counterparty_Issuer_Collateral_NameNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Counterparty_Issuer_Collateral_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClient_NoNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Client_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClient_NoNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Client_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContract_Collateral_IDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Contract_Collateral_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContract_Collateral_IDNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Contract_Collateral_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturity_DateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Maturity_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturity_DateNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Maturity_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Remaining_Year_s__to_MaturityNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Remaining_Year_s__to_MaturityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Remaining_Year_s__to_MaturityNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Remaining_Year_s__to_MaturityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOrg_CcyNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Org_CcyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOrg_CcyNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.Org_CcyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Outstanding__Org_Ccy_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Credit_Outstanding__Org_Ccy_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Outstanding__Org_Ccy_Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Credit_Outstanding__Org_Ccy_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Outstanding__EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Credit_Outstanding__EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Outstanding__EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Credit_Outstanding__EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetCreditOutstandingAmountEURNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.NetCreditOutstandingAmountEURColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetCreditOutstandingAmountEURNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.NetCreditOutstandingAmountEURColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInternalInfoNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.InternalInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInternalInfoNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.InternalInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.PDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPDNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.PDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is__1_ER_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.__1_ER_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set__1_ER_Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.__1_ER_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Risk_Amount_EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Credit_Risk_Amount_EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Risk_Amount_EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._Credit_Risk_Amount_EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_NetCredit_Risk_Amount_EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._NetCredit_Risk_Amount_EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_NetCredit_Risk_Amount_EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL._NetCredit_Risk_Amount_EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is__1_ER_45_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.__1_ER_45_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set__1_ER_45_Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.__1_ER_45_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCreditRiskAmountEUREquER45Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.CreditRiskAmountEUREquER45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCreditRiskAmountEUREquER45Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.CreditRiskAmountEUREquER45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetCreditRiskAmountEUREquER45Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.NetCreditRiskAmountEUREquER45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetCreditRiskAmountEUREquER45Null()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.NetCreditRiskAmountEUREquER45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCoreDefinitionNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.CoreDefinitionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCoreDefinitionNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.CoreDefinitionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.ClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.ClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.ClientGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNameNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.ClientGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityWithoutCapFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.MaturityWithoutCapFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityWithoutCapFloorNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.MaturityWithoutCapFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEaDweigthedMaturityWithoutCapFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.EaDweigthedMaturityWithoutCapFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEaDweigthedMaturityWithoutCapFloorNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.EaDweigthedMaturityWithoutCapFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPDxFinalEaDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.PDxFinalEaDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPDxFinalEaDNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.PDxFinalEaDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLGDfinalEaDweightedNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.LGDfinalEaDweightedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLGDfinalEaDweightedNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.LGDfinalEaDweightedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRiskDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.RiskDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRiskDateNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.RiskDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.IdClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdClientGroupNull()
            Me(Me.tableScenarioAnalyze_GeneralStressTest_DetailsALL.IdClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow
        Inherits Global.System.Data.DataRow
        
        Private tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL = CType(Me.Table,ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Obligor_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Obligor_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Obligor Rate' in table 'ScenarioAnalyze_ConcentrationRiskCH"& _ 
                            "INA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Obligor_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contract_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Contract_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contract Type' in table 'ScenarioAnalyze_ConcentrationRiskC"& _ 
                            "HINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Contract_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Product_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Product_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product Type' in table 'ScenarioAnalyze_ConcentrationRiskCH"& _ 
                            "INA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Product_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _GL_Master___Account_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._GL_Master___Account_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GL Master / Account Type' in table 'ScenarioAnalyze_Concent"& _ 
                            "rationRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._GL_Master___Account_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Counterparty_Issuer_Collateral_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Counterparty_Issuer_Collateral_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Counterparty/Issuer/Collateral Name' in table 'ScenarioAnal"& _ 
                            "yze_ConcentrationRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Counterparty_Issuer_Collateral_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Client_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Client_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Client No' in table 'ScenarioAnalyze_ConcentrationRiskCHINA"& _ 
                            "_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Client_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contract_Collateral_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Contract_Collateral_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contract Collateral ID' in table 'ScenarioAnalyze_Concentra"& _ 
                            "tionRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Contract_Collateral_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Maturity_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Maturity_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Maturity Date' in table 'ScenarioAnalyze_ConcentrationRiskC"& _ 
                            "HINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Maturity_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Remaining_Year_s__to_Maturity() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Remaining_Year_s__to_MaturityColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remaining Year(s) to Maturity' in table 'ScenarioAnalyze_Co"& _ 
                            "ncentrationRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Remaining_Year_s__to_MaturityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Org_Ccy() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Org_CcyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Org Ccy' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_D"& _ 
                            "etailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Org_CcyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Outstanding__Org_Ccy_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Credit_Outstanding__Org_Ccy_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Outstanding (Org Ccy)' in table 'ScenarioAnalyze_Con"& _ 
                            "centrationRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Credit_Outstanding__Org_Ccy_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Outstanding__EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Credit_Outstanding__EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Outstanding (EUR Equ)' in table 'ScenarioAnalyze_Con"& _ 
                            "centrationRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Credit_Outstanding__EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetCreditOutstandingAmountEUR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.NetCreditOutstandingAmountEURColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCreditOutstandingAmountEUR' in table 'ScenarioAnalyze_Co"& _ 
                            "ncentrationRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.NetCreditOutstandingAmountEURColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InternalInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.InternalInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InternalInfo' in table 'ScenarioAnalyze_ConcentrationRiskCH"& _ 
                            "INA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.InternalInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.PDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_Detail"& _ 
                            "sALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.PDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property __1_ER_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.__1_ER_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '(1-ER)' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_De"& _ 
                            "tailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.__1_ER_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Risk_Amount_EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Credit_Risk_Amount_EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Risk Amount(EUR Equ)' in table 'ScenarioAnalyze_Conc"& _ 
                            "entrationRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Credit_Risk_Amount_EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _NetCredit_Risk_Amount_EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._NetCredit_Risk_Amount_EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCredit Risk Amount(EUR Equ)' in table 'ScenarioAnalyze_C"& _ 
                            "oncentrationRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._NetCredit_Risk_Amount_EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property __1_ER_45_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.__1_ER_45_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '(1-ER_45)' in table 'ScenarioAnalyze_ConcentrationRiskCHINA"& _ 
                            "_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.__1_ER_45_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CreditRiskAmountEUREquER45() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.CreditRiskAmountEUREquER45Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreditRiskAmountEUREquER45' in table 'ScenarioAnalyze_Conce"& _ 
                            "ntrationRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.CreditRiskAmountEUREquER45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetCreditRiskAmountEUREquER45() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.NetCreditRiskAmountEUREquER45Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCreditRiskAmountEUREquER45' in table 'ScenarioAnalyze_Co"& _ 
                            "ncentrationRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.NetCreditRiskAmountEUREquER45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CoreDefinition() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.CoreDefinitionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreDefinition' in table 'ScenarioAnalyze_ConcentrationRisk"& _ 
                            "CHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.CoreDefinitionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroup() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.ClientGroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroup' in table 'ScenarioAnalyze_ConcentrationRiskCHI"& _ 
                            "NA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.ClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.ClientGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroupName' in table 'ScenarioAnalyze_ConcentrationRis"& _ 
                            "kCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.ClientGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityWithoutCapFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.MaturityWithoutCapFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityWithoutCapFloor' in table 'ScenarioAnalyze_Concentr"& _ 
                            "ationRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.MaturityWithoutCapFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EaDweigthedMaturityWithoutCapFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.EaDweigthedMaturityWithoutCapFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EaDweigthedMaturityWithoutCapFloor' in table 'ScenarioAnaly"& _ 
                            "ze_ConcentrationRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.EaDweigthedMaturityWithoutCapFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PDxFinalEaD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.PDxFinalEaDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PDxFinalEaD' in table 'ScenarioAnalyze_ConcentrationRiskCHI"& _ 
                            "NA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.PDxFinalEaDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LGDfinalEaDweighted() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.LGDfinalEaDweightedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LGDfinalEaDweighted' in table 'ScenarioAnalyze_Concentratio"& _ 
                            "nRiskCHINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.LGDfinalEaDweightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RiskDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.RiskDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RiskDate' in table 'ScenarioAnalyze_ConcentrationRiskCHINA_"& _ 
                            "DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.RiskDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdClientGroup() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.IdClientGroupColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdClientGroup' in table 'ScenarioAnalyze_ConcentrationRiskC"& _ 
                            "HINA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.IdClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsObligor_RateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Obligor_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetObligor_RateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Obligor_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContract_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Contract_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContract_TypeNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Contract_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProduct_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Product_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProduct_TypeNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Product_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_GL_Master___Account_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._GL_Master___Account_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_GL_Master___Account_TypeNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._GL_Master___Account_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Counterparty_Issuer_Collateral_NameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Counterparty_Issuer_Collateral_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Counterparty_Issuer_Collateral_NameNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Counterparty_Issuer_Collateral_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClient_NoNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Client_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClient_NoNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Client_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContract_Collateral_IDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Contract_Collateral_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContract_Collateral_IDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Contract_Collateral_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturity_DateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Maturity_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturity_DateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Maturity_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Remaining_Year_s__to_MaturityNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Remaining_Year_s__to_MaturityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Remaining_Year_s__to_MaturityNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Remaining_Year_s__to_MaturityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOrg_CcyNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Org_CcyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOrg_CcyNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Org_CcyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Outstanding__Org_Ccy_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Credit_Outstanding__Org_Ccy_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Outstanding__Org_Ccy_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Credit_Outstanding__Org_Ccy_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Outstanding__EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Credit_Outstanding__EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Outstanding__EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Credit_Outstanding__EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetCreditOutstandingAmountEURNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.NetCreditOutstandingAmountEURColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetCreditOutstandingAmountEURNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.NetCreditOutstandingAmountEURColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInternalInfoNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.InternalInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInternalInfoNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.InternalInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.PDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.PDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is__1_ER_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.__1_ER_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set__1_ER_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.__1_ER_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Risk_Amount_EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Credit_Risk_Amount_EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Risk_Amount_EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._Credit_Risk_Amount_EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_NetCredit_Risk_Amount_EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._NetCredit_Risk_Amount_EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_NetCredit_Risk_Amount_EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL._NetCredit_Risk_Amount_EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is__1_ER_45_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.__1_ER_45_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set__1_ER_45_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.__1_ER_45_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCreditRiskAmountEUREquER45Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.CreditRiskAmountEUREquER45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCreditRiskAmountEUREquER45Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.CreditRiskAmountEUREquER45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetCreditRiskAmountEUREquER45Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.NetCreditRiskAmountEUREquER45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetCreditRiskAmountEUREquER45Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.NetCreditRiskAmountEUREquER45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCoreDefinitionNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.CoreDefinitionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCoreDefinitionNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.CoreDefinitionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.ClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.ClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.ClientGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNameNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.ClientGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityWithoutCapFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.MaturityWithoutCapFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityWithoutCapFloorNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.MaturityWithoutCapFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEaDweigthedMaturityWithoutCapFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.EaDweigthedMaturityWithoutCapFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEaDweigthedMaturityWithoutCapFloorNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.EaDweigthedMaturityWithoutCapFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPDxFinalEaDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.PDxFinalEaDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPDxFinalEaDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.PDxFinalEaDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLGDfinalEaDweightedNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.LGDfinalEaDweightedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLGDfinalEaDweightedNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.LGDfinalEaDweightedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRiskDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.RiskDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRiskDateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.RiskDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.IdClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdClientGroupNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.IdClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow
        Inherits Global.System.Data.DataRow
        
        Private tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll = CType(Me.Table,ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Obligor_Rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Obligor_RateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Obligor Rate' in table 'ScenarioAnalyze_ConcentrationRiskTB"& _ 
                            "A_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Obligor_RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contract_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Contract_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contract Type' in table 'ScenarioAnalyze_ConcentrationRiskT"& _ 
                            "BA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Contract_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Product_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Product_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product Type' in table 'ScenarioAnalyze_ConcentrationRiskTB"& _ 
                            "A_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Product_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _GL_Master___Account_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._GL_Master___Account_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GL Master / Account Type' in table 'ScenarioAnalyze_Concent"& _ 
                            "rationRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._GL_Master___Account_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Counterparty_Issuer_Collateral_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Counterparty_Issuer_Collateral_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Counterparty/Issuer/Collateral Name' in table 'ScenarioAnal"& _ 
                            "yze_ConcentrationRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Counterparty_Issuer_Collateral_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Client_No() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Client_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Client No' in table 'ScenarioAnalyze_ConcentrationRiskTBA_D"& _ 
                            "etailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Client_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contract_Collateral_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Contract_Collateral_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contract Collateral ID' in table 'ScenarioAnalyze_Concentra"& _ 
                            "tionRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Contract_Collateral_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Maturity_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Maturity_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Maturity Date' in table 'ScenarioAnalyze_ConcentrationRiskT"& _ 
                            "BA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Maturity_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Remaining_Year_s__to_Maturity() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Remaining_Year_s__to_MaturityColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remaining Year(s) to Maturity' in table 'ScenarioAnalyze_Co"& _ 
                            "ncentrationRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Remaining_Year_s__to_MaturityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Org_Ccy() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Org_CcyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Org Ccy' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Det"& _ 
                            "ailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Org_CcyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Outstanding__Org_Ccy_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Credit_Outstanding__Org_Ccy_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Outstanding (Org Ccy)' in table 'ScenarioAnalyze_Con"& _ 
                            "centrationRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Credit_Outstanding__Org_Ccy_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Outstanding__EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Credit_Outstanding__EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Outstanding (EUR Equ)' in table 'ScenarioAnalyze_Con"& _ 
                            "centrationRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Credit_Outstanding__EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetCreditOutstandingAmountEUR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.NetCreditOutstandingAmountEURColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCreditOutstandingAmountEUR' in table 'ScenarioAnalyze_Co"& _ 
                            "ncentrationRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.NetCreditOutstandingAmountEURColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InternalInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.InternalInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InternalInfo' in table 'ScenarioAnalyze_ConcentrationRiskTB"& _ 
                            "A_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.InternalInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.PDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PD' in table 'ScenarioAnalyze_ConcentrationRiskTBA_DetailsA"& _ 
                            "LL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.PDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property __1_ER_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.__1_ER_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '(1-ER)' in table 'ScenarioAnalyze_ConcentrationRiskTBA_Deta"& _ 
                            "ilsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.__1_ER_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Credit_Risk_Amount_EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Credit_Risk_Amount_EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Credit Risk Amount(EUR Equ)' in table 'ScenarioAnalyze_Conc"& _ 
                            "entrationRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Credit_Risk_Amount_EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _NetCredit_Risk_Amount_EUR_Equ_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._NetCredit_Risk_Amount_EUR_Equ_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCredit Risk Amount(EUR Equ)' in table 'ScenarioAnalyze_C"& _ 
                            "oncentrationRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._NetCredit_Risk_Amount_EUR_Equ_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property __1_ER_45_() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.__1_ER_45_Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '(1-ER_45)' in table 'ScenarioAnalyze_ConcentrationRiskTBA_D"& _ 
                            "etailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.__1_ER_45_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CreditRiskAmountEUREquER45() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.CreditRiskAmountEUREquER45Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreditRiskAmountEUREquER45' in table 'ScenarioAnalyze_Conce"& _ 
                            "ntrationRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.CreditRiskAmountEUREquER45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NetCreditRiskAmountEUREquER45() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.NetCreditRiskAmountEUREquER45Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NetCreditRiskAmountEUREquER45' in table 'ScenarioAnalyze_Co"& _ 
                            "ncentrationRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.NetCreditRiskAmountEUREquER45Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CoreDefinition() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.CoreDefinitionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CoreDefinition' in table 'ScenarioAnalyze_ConcentrationRisk"& _ 
                            "TBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.CoreDefinitionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroup() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.ClientGroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroup' in table 'ScenarioAnalyze_ConcentrationRiskTBA"& _ 
                            "_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.ClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientGroupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.ClientGroupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientGroupName' in table 'ScenarioAnalyze_ConcentrationRis"& _ 
                            "kTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.ClientGroupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaturityWithoutCapFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.MaturityWithoutCapFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaturityWithoutCapFloor' in table 'ScenarioAnalyze_Concentr"& _ 
                            "ationRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.MaturityWithoutCapFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EaDweigthedMaturityWithoutCapFloor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.EaDweigthedMaturityWithoutCapFloorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EaDweigthedMaturityWithoutCapFloor' in table 'ScenarioAnaly"& _ 
                            "ze_ConcentrationRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.EaDweigthedMaturityWithoutCapFloorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PDxFinalEaD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.PDxFinalEaDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PDxFinalEaD' in table 'ScenarioAnalyze_ConcentrationRiskTBA"& _ 
                            "_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.PDxFinalEaDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LGDfinalEaDweighted() As Double
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.LGDfinalEaDweightedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LGDfinalEaDweighted' in table 'ScenarioAnalyze_Concentratio"& _ 
                            "nRiskTBA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.LGDfinalEaDweightedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RiskDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.RiskDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RiskDate' in table 'ScenarioAnalyze_ConcentrationRiskTBA_De"& _ 
                            "tailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.RiskDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdClientGroup() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.IdClientGroupColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdClientGroup' in table 'ScenarioAnalyze_ConcentrationRiskT"& _ 
                            "BA_DetailsALL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.IdClientGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsObligor_RateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Obligor_RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetObligor_RateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Obligor_RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContract_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Contract_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContract_TypeNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Contract_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProduct_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Product_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProduct_TypeNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Product_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_GL_Master___Account_TypeNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._GL_Master___Account_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_GL_Master___Account_TypeNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._GL_Master___Account_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Counterparty_Issuer_Collateral_NameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Counterparty_Issuer_Collateral_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Counterparty_Issuer_Collateral_NameNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Counterparty_Issuer_Collateral_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClient_NoNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Client_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClient_NoNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Client_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContract_Collateral_IDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Contract_Collateral_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContract_Collateral_IDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Contract_Collateral_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturity_DateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Maturity_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturity_DateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Maturity_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Remaining_Year_s__to_MaturityNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Remaining_Year_s__to_MaturityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Remaining_Year_s__to_MaturityNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Remaining_Year_s__to_MaturityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOrg_CcyNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Org_CcyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOrg_CcyNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Org_CcyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Outstanding__Org_Ccy_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Credit_Outstanding__Org_Ccy_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Outstanding__Org_Ccy_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Credit_Outstanding__Org_Ccy_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Outstanding__EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Credit_Outstanding__EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Outstanding__EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Credit_Outstanding__EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetCreditOutstandingAmountEURNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.NetCreditOutstandingAmountEURColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetCreditOutstandingAmountEURNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.NetCreditOutstandingAmountEURColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInternalInfoNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.InternalInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInternalInfoNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.InternalInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.PDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.PDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is__1_ER_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.__1_ER_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set__1_ER_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.__1_ER_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Credit_Risk_Amount_EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Credit_Risk_Amount_EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Credit_Risk_Amount_EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._Credit_Risk_Amount_EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_NetCredit_Risk_Amount_EUR_Equ_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._NetCredit_Risk_Amount_EUR_Equ_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_NetCredit_Risk_Amount_EUR_Equ_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll._NetCredit_Risk_Amount_EUR_Equ_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is__1_ER_45_Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.__1_ER_45_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set__1_ER_45_Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.__1_ER_45_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCreditRiskAmountEUREquER45Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.CreditRiskAmountEUREquER45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCreditRiskAmountEUREquER45Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.CreditRiskAmountEUREquER45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNetCreditRiskAmountEUREquER45Null() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.NetCreditRiskAmountEUREquER45Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNetCreditRiskAmountEUREquER45Null()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.NetCreditRiskAmountEUREquER45Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCoreDefinitionNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.CoreDefinitionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCoreDefinitionNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.CoreDefinitionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.ClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.ClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientGroupNameNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.ClientGroupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientGroupNameNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.ClientGroupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaturityWithoutCapFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.MaturityWithoutCapFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaturityWithoutCapFloorNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.MaturityWithoutCapFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEaDweigthedMaturityWithoutCapFloorNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.EaDweigthedMaturityWithoutCapFloorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEaDweigthedMaturityWithoutCapFloorNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.EaDweigthedMaturityWithoutCapFloorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPDxFinalEaDNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.PDxFinalEaDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPDxFinalEaDNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.PDxFinalEaDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLGDfinalEaDweightedNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.LGDfinalEaDweightedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLGDfinalEaDweightedNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.LGDfinalEaDweightedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRiskDateNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.RiskDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRiskDateNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.RiskDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdClientGroupNull() As Boolean
            Return Me.IsNull(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.IdClientGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdClientGroupNull()
            Me(Me.tableScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.IdClientGroupColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SCENARIO_ANALYZES_DATERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SCENARIO_ANALYZES_DATERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SCENARIO_ANALYZES_DATERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SCENARIO_ANALYZES_DATERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ScenarioAnalyze_ConcentrationRiskCHINA_DateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ScenarioAnalyze_ConcentrationRiskCHINA_DateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ScenarioAnalyze_ConcentrationRiskTBA_DateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ScenarioAnalyze_ConcentrationRiskTBA_DateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ScenarioAnalyze_ConcentrationRiskTBA_DateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ScenarioAnalyze_ConcentrationRiskTBA_DateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ScenarioAnalyze_ConcentrationRiskTBA_DetailsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ScenarioAnalyze_ConcentrationRiskTBA_DetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ScenarioAnalyze_ConcentrationRiskTBA_TotalsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ScenarioAnalyze_ConcentrationRiskTBA_TotalsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ScenarioAnalyze_GeneralStressTest_DateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ScenarioAnalyze_GeneralStressTest_DateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ScenarioAnalyze_GeneralStressTest_DateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ScenarioAnalyze_GeneralStressTest_DateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ScenarioAnalyze_GeneralStressTest_DetailsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ScenarioAnalyze_GeneralStressTest_DetailsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ScenarioAnalyze_GeneralStressTest_DetailsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ScenarioAnalyze_GeneralStressTest_DetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ScenarioAnalyze_GeneralStressTest_TotalsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ScenarioAnalyze_GeneralStressTest_TotalsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ScenarioAnalyze_GeneralStressTest_TotalsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ScenarioAnalyze_GeneralStressTest_TotalsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ScenarioAnalyze_GeneralStressTest_DetailsALLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ScenarioAnalyze_GeneralStressTest_DetailsALLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ScenarioAnalyze_GeneralStressTest_DetailsALLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ScenarioAnalyze_GeneralStressTest_DetailsALLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ScenarioAnalysisDatasetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SCENARIO_ANALYZES_DATETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SCENARIO_ANALYZES_DATE"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("ScenarioAnalyzesDate", "ScenarioAnalyzesDate")
            tableMapping.ColumnMappings.Add("SumEL_Live", "SumEL_Live")
            tableMapping.ColumnMappings.Add("SumUL_Live", "SumUL_Live")
            tableMapping.ColumnMappings.Add("SumGA_Live", "SumGA_Live")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [SCENARIO_ANALYZES_DATE] WHERE (([ID] = @Original_ID) AND ((@IsNull_S"& _ 
                "cenarioAnalyzesDate = 1 AND [ScenarioAnalyzesDate] IS NULL) OR ([ScenarioAnalyze"& _ 
                "sDate] = @Original_ScenarioAnalyzesDate)) AND ((@IsNull_SumEL_Live = 1 AND [SumE"& _ 
                "L_Live] IS NULL) OR ([SumEL_Live] = @Original_SumEL_Live)) AND ((@IsNull_SumGA_L"& _ 
                "ive = 1 AND [SumGA_Live] IS NULL) OR ([SumGA_Live] = @Original_SumGA_Live)) AND "& _ 
                "((@IsNull_SumUL_Live = 1 AND [SumUL_Live] IS NULL) OR ([SumUL_Live] = @Original_"& _ 
                "SumUL_Live)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ScenarioAnalyzesDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ScenarioAnalyzesDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ScenarioAnalyzesDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ScenarioAnalyzesDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumEL_Live", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL_Live", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumEL_Live", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL_Live", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_Live", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_Live", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_Live", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_Live", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumUL_Live", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL_Live", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumUL_Live", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL_Live", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [SCENARIO_ANALYZES_DATE] ([ScenarioAnalyzesDate], [SumEL_Live], [SumG"& _ 
                "A_Live], [SumUL_Live]) VALUES (@ScenarioAnalyzesDate, @SumEL_Live, @SumGA_Live, "& _ 
                "@SumUL_Live)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ScenarioAnalyzesDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ScenarioAnalyzesDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumEL_Live", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL_Live", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_Live", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_Live", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumUL_Live", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL_Live", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [SCENARIO_ANALYZES_DATE] SET [ScenarioAnalyzesDate] = @ScenarioAnalyzesDat"& _ 
                "e, [SumEL_Live] = @SumEL_Live, [SumGA_Live] = @SumGA_Live, [SumUL_Live] = @SumUL"& _ 
                "_Live WHERE (([ID] = @Original_ID) AND ((@IsNull_ScenarioAnalyzesDate = 1 AND [S"& _ 
                "cenarioAnalyzesDate] IS NULL) OR ([ScenarioAnalyzesDate] = @Original_ScenarioAna"& _ 
                "lyzesDate)) AND ((@IsNull_SumEL_Live = 1 AND [SumEL_Live] IS NULL) OR ([SumEL_Li"& _ 
                "ve] = @Original_SumEL_Live)) AND ((@IsNull_SumGA_Live = 1 AND [SumGA_Live] IS NU"& _ 
                "LL) OR ([SumGA_Live] = @Original_SumGA_Live)) AND ((@IsNull_SumUL_Live = 1 AND ["& _ 
                "SumUL_Live] IS NULL) OR ([SumUL_Live] = @Original_SumUL_Live)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ScenarioAnalyzesDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ScenarioAnalyzesDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumEL_Live", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL_Live", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_Live", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_Live", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumUL_Live", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL_Live", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ScenarioAnalyzesDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ScenarioAnalyzesDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ScenarioAnalyzesDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ScenarioAnalyzesDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumEL_Live", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL_Live", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumEL_Live", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL_Live", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_Live", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_Live", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_Live", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_Live", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumUL_Live", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL_Live", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumUL_Live", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL_Live", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, ScenarioAnalyzesDate, SumEL_Live, SumGA_Live, SumUL_Live"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM "& _ 
                "           SCENARIO_ANALYZES_DATE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.SCENARIO_ANALYZES_DATEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.SCENARIO_ANALYZES_DATEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.SCENARIO_ANALYZES_DATEDataTable = New ScenarioAnalysisDataset.SCENARIO_ANALYZES_DATEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.SCENARIO_ANALYZES_DATEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "SCENARIO_ANALYZES_DATE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer, ByVal Original_ScenarioAnalyzesDate As Global.System.Nullable(Of Date), ByVal Original_SumEL_Live As Global.System.Nullable(Of Double), ByVal Original_SumGA_Live As Global.System.Nullable(Of Double), ByVal Original_SumUL_Live As Global.System.Nullable(Of Double)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_ScenarioAnalyzesDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ScenarioAnalyzesDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_SumEL_Live.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SumEL_Live.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_Live.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_SumGA_Live.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_SumUL_Live.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_SumUL_Live.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ScenarioAnalyzesDate As Global.System.Nullable(Of Date), ByVal SumEL_Live As Global.System.Nullable(Of Double), ByVal SumGA_Live As Global.System.Nullable(Of Double), ByVal SumUL_Live As Global.System.Nullable(Of Double)) As Integer
            If (ScenarioAnalyzesDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ScenarioAnalyzesDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SumEL_Live.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SumEL_Live.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (SumGA_Live.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SumGA_Live.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (SumUL_Live.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SumUL_Live.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ScenarioAnalyzesDate As Global.System.Nullable(Of Date), ByVal SumEL_Live As Global.System.Nullable(Of Double), ByVal SumGA_Live As Global.System.Nullable(Of Double), ByVal SumUL_Live As Global.System.Nullable(Of Double), ByVal Original_ID As Integer, ByVal Original_ScenarioAnalyzesDate As Global.System.Nullable(Of Date), ByVal Original_SumEL_Live As Global.System.Nullable(Of Double), ByVal Original_SumGA_Live As Global.System.Nullable(Of Double), ByVal Original_SumUL_Live As Global.System.Nullable(Of Double)) As Integer
            If (ScenarioAnalyzesDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ScenarioAnalyzesDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SumEL_Live.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SumEL_Live.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (SumGA_Live.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SumGA_Live.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (SumUL_Live.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SumUL_Live.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ID,Integer)
            If (Original_ScenarioAnalyzesDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ScenarioAnalyzesDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_SumEL_Live.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_SumEL_Live.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_Live.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_SumGA_Live.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_SumUL_Live.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_SumUL_Live.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ScenarioAnalyze_ConcentrationRiskCHINA_Date"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("RiskDate", "RiskDate")
            tableMapping.ColumnMappings.Add("LGD_mod", "LGD_mod")
            tableMapping.ColumnMappings.Add("R_Colleration_Mod", "R_Colleration_Mod")
            tableMapping.ColumnMappings.Add("ObligorRate_Mod", "ObligorRate_Mod")
            tableMapping.ColumnMappings.Add("LevelOfConfidence", "LevelOfConfidence")
            tableMapping.ColumnMappings.Add("SumEL", "SumEL")
            tableMapping.ColumnMappings.Add("SumUL", "SumUL")
            tableMapping.ColumnMappings.Add("nu_Value", "nu_Value")
            tableMapping.ColumnMappings.Add("p_alpha_Value", "p_alpha_Value")
            tableMapping.ColumnMappings.Add("b_beta_value", "b_beta_value")
            tableMapping.ColumnMappings.Add("Gamma_inv", "Gamma_inv")
            tableMapping.ColumnMappings.Add("Delta", "Delta")
            tableMapping.ColumnMappings.Add("K_Value", "K_Value")
            tableMapping.ColumnMappings.Add("SumGA_rel", "SumGA_rel")
            tableMapping.ColumnMappings.Add("SumGA_Total", "SumGA_Total")
            tableMapping.ColumnMappings.Add("IdDate", "IdDate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ScenarioAnalyze_ConcentrationRiskCHINA_Date] WHERE (([ID] = @Origina"& _ 
                "l_ID) AND ([RiskDate] = @Original_RiskDate) AND ((@IsNull_LGD_mod = 1 AND [LGD_m"& _ 
                "od] IS NULL) OR ([LGD_mod] = @Original_LGD_mod)) AND ((@IsNull_R_Colleration_Mod"& _ 
                " = 1 AND [R_Colleration_Mod] IS NULL) OR ([R_Colleration_Mod] = @Original_R_Coll"& _ 
                "eration_Mod)) AND ((@IsNull_ObligorRate_Mod = 1 AND [ObligorRate_Mod] IS NULL) O"& _ 
                "R ([ObligorRate_Mod] = @Original_ObligorRate_Mod)) AND ((@IsNull_LevelOfConfiden"& _ 
                "ce = 1 AND [LevelOfConfidence] IS NULL) OR ([LevelOfConfidence] = @Original_Leve"& _ 
                "lOfConfidence)) AND ((@IsNull_SumEL = 1 AND [SumEL] IS NULL) OR ([SumEL] = @Orig"& _ 
                "inal_SumEL)) AND ((@IsNull_SumUL = 1 AND [SumUL] IS NULL) OR ([SumUL] = @Origina"& _ 
                "l_SumUL)) AND ((@IsNull_nu_Value = 1 AND [nu_Value] IS NULL) OR ([nu_Value] = @O"& _ 
                "riginal_nu_Value)) AND ((@IsNull_p_alpha_Value = 1 AND [p_alpha_Value] IS NULL) "& _ 
                "OR ([p_alpha_Value] = @Original_p_alpha_Value)) AND ((@IsNull_b_beta_value = 1 A"& _ 
                "ND [b_beta_value] IS NULL) OR ([b_beta_value] = @Original_b_beta_value)) AND ((@"& _ 
                "IsNull_Gamma_inv = 1 AND [Gamma_inv] IS NULL) OR ([Gamma_inv] = @Original_Gamma_"& _ 
                "inv)) AND ((@IsNull_Delta = 1 AND [Delta] IS NULL) OR ([Delta] = @Original_Delta"& _ 
                ")) AND ((@IsNull_K_Value = 1 AND [K_Value] IS NULL) OR ([K_Value] = @Original_K_"& _ 
                "Value)) AND ((@IsNull_SumGA_rel = 1 AND [SumGA_rel] IS NULL) OR ([SumGA_rel] = @"& _ 
                "Original_SumGA_rel)) AND ((@IsNull_SumGA_Total = 1 AND [SumGA_Total] IS NULL) OR"& _ 
                " ([SumGA_Total] = @Original_SumGA_Total)) AND ((@IsNull_IdDate = 1 AND [IdDate] "& _ 
                "IS NULL) OR ([IdDate] = @Original_IdDate)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGD_mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGD_mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_Colleration_Mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_Colleration_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ObligorRate_Mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ObligorRate_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LevelOfConfidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LevelOfConfidence", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumEL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumEL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumUL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumUL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_nu_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_nu_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_p_alpha_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_p_alpha_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_b_beta_value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_b_beta_value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Gamma_inv", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Gamma_inv", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Delta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Delta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_K_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_K_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_rel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_rel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_rel", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "SumGA_rel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_Total", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_Total", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_Total", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SumGA_Total", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ScenarioAnalyze_ConcentrationRiskCHINA_Date] ([RiskDate], [LGD_mod],"& _ 
                " [R_Colleration_Mod], [ObligorRate_Mod], [LevelOfConfidence], [SumEL], [SumUL], "& _ 
                "[nu_Value], [p_alpha_Value], [b_beta_value], [Gamma_inv], [Delta], [K_Value], [S"& _ 
                "umGA_rel], [SumGA_Total], [IdDate]) VALUES (@RiskDate, @LGD_mod, @R_Colleration_"& _ 
                "Mod, @ObligorRate_Mod, @LevelOfConfidence, @SumEL, @SumUL, @nu_Value, @p_alpha_V"& _ 
                "alue, @b_beta_value, @Gamma_inv, @Delta, @K_Value, @SumGA_rel, @SumGA_Total, @Id"& _ 
                "Date)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGD_mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Colleration_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ObligorRate_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LevelOfConfidence", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumEL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumUL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@nu_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p_alpha_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@b_beta_value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gamma_inv", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Delta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@K_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_rel", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "SumGA_rel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_Total", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SumGA_Total", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ScenarioAnalyze_ConcentrationRiskCHINA_Date] SET [RiskDate] = @RiskDate, "& _ 
                "[LGD_mod] = @LGD_mod, [R_Colleration_Mod] = @R_Colleration_Mod, [ObligorRate_Mod"& _ 
                "] = @ObligorRate_Mod, [LevelOfConfidence] = @LevelOfConfidence, [SumEL] = @SumEL"& _ 
                ", [SumUL] = @SumUL, [nu_Value] = @nu_Value, [p_alpha_Value] = @p_alpha_Value, [b"& _ 
                "_beta_value] = @b_beta_value, [Gamma_inv] = @Gamma_inv, [Delta] = @Delta, [K_Val"& _ 
                "ue] = @K_Value, [SumGA_rel] = @SumGA_rel, [SumGA_Total] = @SumGA_Total, [IdDate]"& _ 
                " = @IdDate WHERE (([ID] = @Original_ID) AND ([RiskDate] = @Original_RiskDate) AN"& _ 
                "D ((@IsNull_LGD_mod = 1 AND [LGD_mod] IS NULL) OR ([LGD_mod] = @Original_LGD_mod"& _ 
                ")) AND ((@IsNull_R_Colleration_Mod = 1 AND [R_Colleration_Mod] IS NULL) OR ([R_C"& _ 
                "olleration_Mod] = @Original_R_Colleration_Mod)) AND ((@IsNull_ObligorRate_Mod = "& _ 
                "1 AND [ObligorRate_Mod] IS NULL) OR ([ObligorRate_Mod] = @Original_ObligorRate_M"& _ 
                "od)) AND ((@IsNull_LevelOfConfidence = 1 AND [LevelOfConfidence] IS NULL) OR ([L"& _ 
                "evelOfConfidence] = @Original_LevelOfConfidence)) AND ((@IsNull_SumEL = 1 AND [S"& _ 
                "umEL] IS NULL) OR ([SumEL] = @Original_SumEL)) AND ((@IsNull_SumUL = 1 AND [SumU"& _ 
                "L] IS NULL) OR ([SumUL] = @Original_SumUL)) AND ((@IsNull_nu_Value = 1 AND [nu_V"& _ 
                "alue] IS NULL) OR ([nu_Value] = @Original_nu_Value)) AND ((@IsNull_p_alpha_Value"& _ 
                " = 1 AND [p_alpha_Value] IS NULL) OR ([p_alpha_Value] = @Original_p_alpha_Value)"& _ 
                ") AND ((@IsNull_b_beta_value = 1 AND [b_beta_value] IS NULL) OR ([b_beta_value] "& _ 
                "= @Original_b_beta_value)) AND ((@IsNull_Gamma_inv = 1 AND [Gamma_inv] IS NULL) "& _ 
                "OR ([Gamma_inv] = @Original_Gamma_inv)) AND ((@IsNull_Delta = 1 AND [Delta] IS N"& _ 
                "ULL) OR ([Delta] = @Original_Delta)) AND ((@IsNull_K_Value = 1 AND [K_Value] IS "& _ 
                "NULL) OR ([K_Value] = @Original_K_Value)) AND ((@IsNull_SumGA_rel = 1 AND [SumGA"& _ 
                "_rel] IS NULL) OR ([SumGA_rel] = @Original_SumGA_rel)) AND ((@IsNull_SumGA_Total"& _ 
                " = 1 AND [SumGA_Total] IS NULL) OR ([SumGA_Total] = @Original_SumGA_Total)) AND "& _ 
                "((@IsNull_IdDate = 1 AND [IdDate] IS NULL) OR ([IdDate] = @Original_IdDate)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGD_mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Colleration_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ObligorRate_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LevelOfConfidence", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumEL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumUL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@nu_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p_alpha_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@b_beta_value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gamma_inv", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Delta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@K_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_rel", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "SumGA_rel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_Total", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SumGA_Total", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGD_mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGD_mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_Colleration_Mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_Colleration_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ObligorRate_Mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ObligorRate_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LevelOfConfidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LevelOfConfidence", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumEL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumEL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumUL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumUL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_nu_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_nu_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_p_alpha_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_p_alpha_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_b_beta_value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_b_beta_value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Gamma_inv", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Gamma_inv", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Delta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Delta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_K_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_K_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_rel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_rel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_rel", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "SumGA_rel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_Total", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_Total", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_Total", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SumGA_Total", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, RiskDate, LGD_mod, R_Colleration_Mod, ObligorRate_Mod, LevelOfC"& _ 
                "onfidence, SumEL, SumUL, nu_Value, p_alpha_Value, b_beta_value, Gamma_inv, Delta"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         K_Value, SumGA_rel, SumGA_Total, IdDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM      "& _ 
                "      ScenarioAnalyze_ConcentrationRiskCHINA_Date"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable = New ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DateDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ScenarioAnalyze_ConcentrationRiskCHINA_Date")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_RiskDate As Date,  _
                    ByVal Original_LGD_mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_Colleration_Mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_ObligorRate_Mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_LevelOfConfidence As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumEL As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumUL As Global.System.Nullable(Of Double),  _
                    ByVal Original_nu_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_p_alpha_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_b_beta_value As Global.System.Nullable(Of Double),  _
                    ByVal Original_Gamma_inv As Global.System.Nullable(Of Double),  _
                    ByVal Original_Delta As Global.System.Nullable(Of Double),  _
                    ByVal Original_K_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumGA_rel As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SumGA_Total As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IdDate As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_RiskDate,Date)
            If (Original_LGD_mod.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_LGD_mod.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_R_Colleration_Mod.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_R_Colleration_Mod.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_ObligorRate_Mod.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ObligorRate_Mod.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_LevelOfConfidence.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_LevelOfConfidence.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_SumEL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_SumEL.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_SumUL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_SumUL.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_nu_Value.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_nu_Value.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_p_alpha_Value.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_p_alpha_Value.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_b_beta_value.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_b_beta_value.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_Gamma_inv.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_Gamma_inv.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_Delta.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_Delta.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_K_Value.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_K_Value.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_rel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_SumGA_rel.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_Total.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_SumGA_Total.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_IdDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_IdDate.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal RiskDate As Date,  _
                    ByVal LGD_mod As Global.System.Nullable(Of Double),  _
                    ByVal R_Colleration_Mod As Global.System.Nullable(Of Double),  _
                    ByVal ObligorRate_Mod As Global.System.Nullable(Of Double),  _
                    ByVal LevelOfConfidence As Global.System.Nullable(Of Double),  _
                    ByVal SumEL As Global.System.Nullable(Of Double),  _
                    ByVal SumUL As Global.System.Nullable(Of Double),  _
                    ByVal nu_Value As Global.System.Nullable(Of Double),  _
                    ByVal p_alpha_Value As Global.System.Nullable(Of Double),  _
                    ByVal b_beta_value As Global.System.Nullable(Of Double),  _
                    ByVal Gamma_inv As Global.System.Nullable(Of Double),  _
                    ByVal Delta As Global.System.Nullable(Of Double),  _
                    ByVal K_Value As Global.System.Nullable(Of Double),  _
                    ByVal SumGA_rel As Global.System.Nullable(Of Decimal),  _
                    ByVal SumGA_Total As Global.System.Nullable(Of Decimal),  _
                    ByVal IdDate As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(RiskDate,Date)
            If (LGD_mod.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(LGD_mod.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (R_Colleration_Mod.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(R_Colleration_Mod.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ObligorRate_Mod.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ObligorRate_Mod.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LevelOfConfidence.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LevelOfConfidence.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SumEL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SumEL.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SumUL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SumUL.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (nu_Value.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(nu_Value.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p_alpha_Value.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p_alpha_Value.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (b_beta_value.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(b_beta_value.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Gamma_inv.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Gamma_inv.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Delta.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Delta.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (K_Value.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(K_Value.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SumGA_rel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SumGA_rel.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (SumGA_Total.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(SumGA_Total.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (IdDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(IdDate.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RiskDate As Date,  _
                    ByVal LGD_mod As Global.System.Nullable(Of Double),  _
                    ByVal R_Colleration_Mod As Global.System.Nullable(Of Double),  _
                    ByVal ObligorRate_Mod As Global.System.Nullable(Of Double),  _
                    ByVal LevelOfConfidence As Global.System.Nullable(Of Double),  _
                    ByVal SumEL As Global.System.Nullable(Of Double),  _
                    ByVal SumUL As Global.System.Nullable(Of Double),  _
                    ByVal nu_Value As Global.System.Nullable(Of Double),  _
                    ByVal p_alpha_Value As Global.System.Nullable(Of Double),  _
                    ByVal b_beta_value As Global.System.Nullable(Of Double),  _
                    ByVal Gamma_inv As Global.System.Nullable(Of Double),  _
                    ByVal Delta As Global.System.Nullable(Of Double),  _
                    ByVal K_Value As Global.System.Nullable(Of Double),  _
                    ByVal SumGA_rel As Global.System.Nullable(Of Decimal),  _
                    ByVal SumGA_Total As Global.System.Nullable(Of Decimal),  _
                    ByVal IdDate As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_RiskDate As Date,  _
                    ByVal Original_LGD_mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_Colleration_Mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_ObligorRate_Mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_LevelOfConfidence As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumEL As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumUL As Global.System.Nullable(Of Double),  _
                    ByVal Original_nu_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_p_alpha_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_b_beta_value As Global.System.Nullable(Of Double),  _
                    ByVal Original_Gamma_inv As Global.System.Nullable(Of Double),  _
                    ByVal Original_Delta As Global.System.Nullable(Of Double),  _
                    ByVal Original_K_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumGA_rel As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SumGA_Total As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IdDate As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RiskDate,Date)
            If (LGD_mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LGD_mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (R_Colleration_Mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(R_Colleration_Mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ObligorRate_Mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ObligorRate_Mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LevelOfConfidence.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(LevelOfConfidence.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SumEL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SumEL.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SumUL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(SumUL.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (nu_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(nu_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p_alpha_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p_alpha_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (b_beta_value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(b_beta_value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Gamma_inv.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Gamma_inv.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Delta.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Delta.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (K_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(K_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SumGA_rel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SumGA_rel.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (SumGA_Total.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(SumGA_Total.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (IdDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(IdDate.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_RiskDate,Date)
            If (Original_LGD_mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_LGD_mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_R_Colleration_Mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_R_Colleration_Mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_ObligorRate_Mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ObligorRate_Mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_LevelOfConfidence.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_LevelOfConfidence.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_SumEL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_SumEL.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_SumUL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_SumUL.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_nu_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_nu_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_p_alpha_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_p_alpha_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_b_beta_value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_b_beta_value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_Gamma_inv.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_Gamma_inv.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_Delta.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_Delta.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_K_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_K_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_rel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_SumGA_rel.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_Total.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_SumGA_Total.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_IdDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_IdDate.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ScenarioAnalyze_ConcentrationRiskCHINA_Details"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Obligor Rate", "Obligor Rate")
            tableMapping.ColumnMappings.Add("Contract Type", "Contract Type")
            tableMapping.ColumnMappings.Add("Product Type", "Product Type")
            tableMapping.ColumnMappings.Add("GL Master / Account Type", "GL Master / Account Type")
            tableMapping.ColumnMappings.Add("Counterparty/Issuer/Collateral Name", "Counterparty/Issuer/Collateral Name")
            tableMapping.ColumnMappings.Add("Client No", "Client No")
            tableMapping.ColumnMappings.Add("Contract Collateral ID", "Contract Collateral ID")
            tableMapping.ColumnMappings.Add("Maturity Date", "Maturity Date")
            tableMapping.ColumnMappings.Add("Remaining Year(s) to Maturity", "Remaining Year(s) to Maturity")
            tableMapping.ColumnMappings.Add("Org Ccy", "Org Ccy")
            tableMapping.ColumnMappings.Add("Credit Outstanding (Org Ccy)", "Credit Outstanding (Org Ccy)")
            tableMapping.ColumnMappings.Add("Credit Outstanding (EUR Equ)", "Credit Outstanding (EUR Equ)")
            tableMapping.ColumnMappings.Add("NetCreditOutstandingAmountEUR", "NetCreditOutstandingAmountEUR")
            tableMapping.ColumnMappings.Add("InternalInfo", "InternalInfo")
            tableMapping.ColumnMappings.Add("PD", "PD")
            tableMapping.ColumnMappings.Add("(1-ER)", "(1-ER)")
            tableMapping.ColumnMappings.Add("Credit Risk Amount(EUR Equ)", "Credit Risk Amount(EUR Equ)")
            tableMapping.ColumnMappings.Add("NetCredit Risk Amount(EUR Equ)", "NetCredit Risk Amount(EUR Equ)")
            tableMapping.ColumnMappings.Add("(1-ER_45)", "(1-ER_45)")
            tableMapping.ColumnMappings.Add("CreditRiskAmountEUREquER45", "CreditRiskAmountEUREquER45")
            tableMapping.ColumnMappings.Add("NetCreditRiskAmountEUREquER45", "NetCreditRiskAmountEUREquER45")
            tableMapping.ColumnMappings.Add("CoreDefinition", "CoreDefinition")
            tableMapping.ColumnMappings.Add("ClientGroup", "ClientGroup")
            tableMapping.ColumnMappings.Add("ClientGroupName", "ClientGroupName")
            tableMapping.ColumnMappings.Add("MaturityWithoutCapFloor", "MaturityWithoutCapFloor")
            tableMapping.ColumnMappings.Add("EaDweigthedMaturityWithoutCapFloor", "EaDweigthedMaturityWithoutCapFloor")
            tableMapping.ColumnMappings.Add("PDxFinalEaD", "PDxFinalEaD")
            tableMapping.ColumnMappings.Add("LGDfinalEaDweighted", "LGDfinalEaDweighted")
            tableMapping.ColumnMappings.Add("RiskDate", "RiskDate")
            tableMapping.ColumnMappings.Add("IdClientGroup", "IdClientGroup")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ScenarioAnalyze_ConcentrationRiskCHINA_Details] WHERE (([ID] = @Orig"& _ 
                "inal_ID) AND ((@IsNull_Obligor_Rate = 1 AND [Obligor Rate] IS NULL) OR ([Obligor"& _ 
                " Rate] = @Original_Obligor_Rate)) AND ((@IsNull_Contract_Type = 1 AND [Contract "& _ 
                "Type] IS NULL) OR ([Contract Type] = @Original_Contract_Type)) AND ((@IsNull_Pro"& _ 
                "duct_Type = 1 AND [Product Type] IS NULL) OR ([Product Type] = @Original_Product"& _ 
                "_Type)) AND ((@p3 = 1 AND [GL Master / Account Type] IS NULL) OR ([GL Master / A"& _ 
                "ccount Type] = @p2)) AND ((@p6 = 1 AND [Counterparty/Issuer/Collateral Name] IS "& _ 
                "NULL) OR ([Counterparty/Issuer/Collateral Name] = @p5)) AND ((@IsNull_Client_No "& _ 
                "= 1 AND [Client No] IS NULL) OR ([Client No] = @Original_Client_No)) AND ((@IsNu"& _ 
                "ll_Contract_Collateral_ID = 1 AND [Contract Collateral ID] IS NULL) OR ([Contrac"& _ 
                "t Collateral ID] = @Original_Contract_Collateral_ID)) AND ((@IsNull_Maturity_Dat"& _ 
                "e = 1 AND [Maturity Date] IS NULL) OR ([Maturity Date] = @Original_Maturity_Date"& _ 
                ")) AND ((@p9 = 1 AND [Remaining Year(s) to Maturity] IS NULL) OR ([Remaining Yea"& _ 
                "r(s) to Maturity] = @p8)) AND ((@IsNull_Org_Ccy = 1 AND [Org Ccy] IS NULL) OR (["& _ 
                "Org Ccy] = @Original_Org_Ccy)) AND ((@p12 = 1 AND [Credit Outstanding (Org Ccy)]"& _ 
                " IS NULL) OR ([Credit Outstanding (Org Ccy)] = @p11)) AND ((@p15 = 1 AND [Credit"& _ 
                " Outstanding (EUR Equ)] IS NULL) OR ([Credit Outstanding (EUR Equ)] = @p14)) AND"& _ 
                " ((@IsNull_NetCreditOutstandingAmountEUR = 1 AND [NetCreditOutstandingAmountEUR]"& _ 
                " IS NULL) OR ([NetCreditOutstandingAmountEUR] = @Original_NetCreditOutstandingAm"& _ 
                "ountEUR)) AND ((@IsNull_InternalInfo = 1 AND [InternalInfo] IS NULL) OR ([Intern"& _ 
                "alInfo] = @Original_InternalInfo)) AND ((@IsNull_PD = 1 AND [PD] IS NULL) OR ([P"& _ 
                "D] = @Original_PD)) AND ((@p18 = 1 AND [(1-ER)] IS NULL) OR ([(1-ER)] = @p17)) A"& _ 
                "ND ((@p21 = 1 AND [Credit Risk Amount(EUR Equ)] IS NULL) OR ([Credit Risk Amount"& _ 
                "(EUR Equ)] = @p20)) AND ((@p24 = 1 AND [NetCredit Risk Amount(EUR Equ)] IS NULL)"& _ 
                " OR ([NetCredit Risk Amount(EUR Equ)] = @p23)) AND ((@p27 = 1 AND [(1-ER_45)] IS"& _ 
                " NULL) OR ([(1-ER_45)] = @p26)) AND ((@IsNull_CreditRiskAmountEUREquER45 = 1 AND"& _ 
                " [CreditRiskAmountEUREquER45] IS NULL) OR ([CreditRiskAmountEUREquER45] = @Origi"& _ 
                "nal_CreditRiskAmountEUREquER45)) AND ((@IsNull_NetCreditRiskAmountEUREquER45 = 1"& _ 
                " AND [NetCreditRiskAmountEUREquER45] IS NULL) OR ([NetCreditRiskAmountEUREquER45"& _ 
                "] = @Original_NetCreditRiskAmountEUREquER45)) AND ((@IsNull_CoreDefinition = 1 A"& _ 
                "ND [CoreDefinition] IS NULL) OR ([CoreDefinition] = @Original_CoreDefinition)) A"& _ 
                "ND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) OR ([ClientGroup] = @Ori"& _ 
                "ginal_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AND [ClientGroupName] IS N"& _ 
                "ULL) OR ([ClientGroupName] = @Original_ClientGroupName)) AND ((@IsNull_MaturityW"& _ 
                "ithoutCapFloor = 1 AND [MaturityWithoutCapFloor] IS NULL) OR ([MaturityWithoutCa"& _ 
                "pFloor] = @Original_MaturityWithoutCapFloor)) AND ((@IsNull_EaDweigthedMaturityW"& _ 
                "ithoutCapFloor = 1 AND [EaDweigthedMaturityWithoutCapFloor] IS NULL) OR ([EaDwei"& _ 
                "gthedMaturityWithoutCapFloor] = @Original_EaDweigthedMaturityWithoutCapFloor)) A"& _ 
                "ND ((@IsNull_PDxFinalEaD = 1 AND [PDxFinalEaD] IS NULL) OR ([PDxFinalEaD] = @Ori"& _ 
                "ginal_PDxFinalEaD)) AND ((@IsNull_LGDfinalEaDweighted = 1 AND [LGDfinalEaDweight"& _ 
                "ed] IS NULL) OR ([LGDfinalEaDweighted] = @Original_LGDfinalEaDweighted)) AND ((@"& _ 
                "IsNull_RiskDate = 1 AND [RiskDate] IS NULL) OR ([RiskDate] = @Original_RiskDate)"& _ 
                ") AND ((@IsNull_IdClientGroup = 1 AND [IdClientGroup] IS NULL) OR ([IdClientGrou"& _ 
                "p] = @Original_IdClientGroup)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obligor_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Product_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Collateral_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Maturity_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Org_Ccy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InternalInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p18", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p17", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p20", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p24", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p23", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p27", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p26", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CoreDefinition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PDxFinalEaD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ScenarioAnalyze_ConcentrationRiskCHINA_Details] ([Obligor Rate], [Co"& _ 
                "ntract Type], [Product Type], [GL Master / Account Type], [Counterparty/Issuer/C"& _ 
                "ollateral Name], [Client No], [Contract Collateral ID], [Maturity Date], [Remain"& _ 
                "ing Year(s) to Maturity], [Org Ccy], [Credit Outstanding (Org Ccy)], [Credit Out"& _ 
                "standing (EUR Equ)], [NetCreditOutstandingAmountEUR], [InternalInfo], [PD], [(1-"& _ 
                "ER)], [Credit Risk Amount(EUR Equ)], [NetCredit Risk Amount(EUR Equ)], [(1-ER_45"& _ 
                ")], [CreditRiskAmountEUREquER45], [NetCreditRiskAmountEUREquER45], [CoreDefiniti"& _ 
                "on], [ClientGroup], [ClientGroupName], [MaturityWithoutCapFloor], [EaDweigthedMa"& _ 
                "turityWithoutCapFloor], [PDxFinalEaD], [LGDfinalEaDweighted], [RiskDate], [IdCli"& _ 
                "entGroup]) VALUES (@Obligor_Rate, @Contract_Type, @Product_Type, @p1, @p4, @Clie"& _ 
                "nt_No, @Contract_Collateral_ID, @Maturity_Date, @p7, @Org_Ccy, @p10, @p13, @NetC"& _ 
                "reditOutstandingAmountEUR, @InternalInfo, @PD, @p16, @p19, @p22, @p25, @CreditRi"& _ 
                "skAmountEUREquER45, @NetCreditRiskAmountEUREquER45, @CoreDefinition, @ClientGrou"& _ 
                "p, @ClientGroupName, @MaturityWithoutCapFloor, @EaDweigthedMaturityWithoutCapFlo"& _ 
                "or, @PDxFinalEaD, @LGDfinalEaDweighted, @RiskDate, @IdClientGroup)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ScenarioAnalyze_ConcentrationRiskCHINA_Details] SET [Obligor Rate] = @Obl"& _ 
                "igor_Rate, [Contract Type] = @Contract_Type, [Product Type] = @Product_Type, [GL"& _ 
                " Master / Account Type] = @p1, [Counterparty/Issuer/Collateral Name] = @p4, [Cli"& _ 
                "ent No] = @Client_No, [Contract Collateral ID] = @Contract_Collateral_ID, [Matur"& _ 
                "ity Date] = @Maturity_Date, [Remaining Year(s) to Maturity] = @p7, [Org Ccy] = @"& _ 
                "Org_Ccy, [Credit Outstanding (Org Ccy)] = @p10, [Credit Outstanding (EUR Equ)] ="& _ 
                " @p13, [NetCreditOutstandingAmountEUR] = @NetCreditOutstandingAmountEUR, [Intern"& _ 
                "alInfo] = @InternalInfo, [PD] = @PD, [(1-ER)] = @p16, [Credit Risk Amount(EUR Eq"& _ 
                "u)] = @p19, [NetCredit Risk Amount(EUR Equ)] = @p22, [(1-ER_45)] = @p25, [Credit"& _ 
                "RiskAmountEUREquER45] = @CreditRiskAmountEUREquER45, [NetCreditRiskAmountEUREquE"& _ 
                "R45] = @NetCreditRiskAmountEUREquER45, [CoreDefinition] = @CoreDefinition, [Clie"& _ 
                "ntGroup] = @ClientGroup, [ClientGroupName] = @ClientGroupName, [MaturityWithoutC"& _ 
                "apFloor] = @MaturityWithoutCapFloor, [EaDweigthedMaturityWithoutCapFloor] = @EaD"& _ 
                "weigthedMaturityWithoutCapFloor, [PDxFinalEaD] = @PDxFinalEaD, [LGDfinalEaDweigh"& _ 
                "ted] = @LGDfinalEaDweighted, [RiskDate] = @RiskDate, [IdClientGroup] = @IdClient"& _ 
                "Group WHERE (([ID] = @Original_ID) AND ((@IsNull_Obligor_Rate = 1 AND [Obligor R"& _ 
                "ate] IS NULL) OR ([Obligor Rate] = @Original_Obligor_Rate)) AND ((@IsNull_Contra"& _ 
                "ct_Type = 1 AND [Contract Type] IS NULL) OR ([Contract Type] = @Original_Contrac"& _ 
                "t_Type)) AND ((@IsNull_Product_Type = 1 AND [Product Type] IS NULL) OR ([Product"& _ 
                " Type] = @Original_Product_Type)) AND ((@p3 = 1 AND [GL Master / Account Type] I"& _ 
                "S NULL) OR ([GL Master / Account Type] = @p2)) AND ((@p6 = 1 AND [Counterparty/I"& _ 
                "ssuer/Collateral Name] IS NULL) OR ([Counterparty/Issuer/Collateral Name] = @p5)"& _ 
                ") AND ((@IsNull_Client_No = 1 AND [Client No] IS NULL) OR ([Client No] = @Origin"& _ 
                "al_Client_No)) AND ((@IsNull_Contract_Collateral_ID = 1 AND [Contract Collateral"& _ 
                " ID] IS NULL) OR ([Contract Collateral ID] = @Original_Contract_Collateral_ID)) "& _ 
                "AND ((@IsNull_Maturity_Date = 1 AND [Maturity Date] IS NULL) OR ([Maturity Date]"& _ 
                " = @Original_Maturity_Date)) AND ((@p9 = 1 AND [Remaining Year(s) to Maturity] I"& _ 
                "S NULL) OR ([Remaining Year(s) to Maturity] = @p8)) AND ((@IsNull_Org_Ccy = 1 AN"& _ 
                "D [Org Ccy] IS NULL) OR ([Org Ccy] = @Original_Org_Ccy)) AND ((@p12 = 1 AND [Cre"& _ 
                "dit Outstanding (Org Ccy)] IS NULL) OR ([Credit Outstanding (Org Ccy)] = @p11)) "& _ 
                "AND ((@p15 = 1 AND [Credit Outstanding (EUR Equ)] IS NULL) OR ([Credit Outstandi"& _ 
                "ng (EUR Equ)] = @p14)) AND ((@IsNull_NetCreditOutstandingAmountEUR = 1 AND [NetC"& _ 
                "reditOutstandingAmountEUR] IS NULL) OR ([NetCreditOutstandingAmountEUR] = @Origi"& _ 
                "nal_NetCreditOutstandingAmountEUR)) AND ((@IsNull_InternalInfo = 1 AND [Internal"& _ 
                "Info] IS NULL) OR ([InternalInfo] = @Original_InternalInfo)) AND ((@IsNull_PD = "& _ 
                "1 AND [PD] IS NULL) OR ([PD] = @Original_PD)) AND ((@p18 = 1 AND [(1-ER)] IS NUL"& _ 
                "L) OR ([(1-ER)] = @p17)) AND ((@p21 = 1 AND [Credit Risk Amount(EUR Equ)] IS NUL"& _ 
                "L) OR ([Credit Risk Amount(EUR Equ)] = @p20)) AND ((@p24 = 1 AND [NetCredit Risk"& _ 
                " Amount(EUR Equ)] IS NULL) OR ([NetCredit Risk Amount(EUR Equ)] = @p23)) AND ((@"& _ 
                "p27 = 1 AND [(1-ER_45)] IS NULL) OR ([(1-ER_45)] = @p26)) AND ((@IsNull_CreditRi"& _ 
                "skAmountEUREquER45 = 1 AND [CreditRiskAmountEUREquER45] IS NULL) OR ([CreditRisk"& _ 
                "AmountEUREquER45] = @Original_CreditRiskAmountEUREquER45)) AND ((@IsNull_NetCred"& _ 
                "itRiskAmountEUREquER45 = 1 AND [NetCreditRiskAmountEUREquER45] IS NULL) OR ([Net"& _ 
                "CreditRiskAmountEUREquER45] = @Original_NetCreditRiskAmountEUREquER45)) AND ((@I"& _ 
                "sNull_CoreDefinition = 1 AND [CoreDefinition] IS NULL) OR ([CoreDefinition] = @O"& _ 
                "riginal_CoreDefinition)) AND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL"& _ 
                ") OR ([ClientGroup] = @Original_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 "& _ 
                "AND [ClientGroupName] IS NULL) OR ([ClientGroupName] = @Original_ClientGroupName"& _ 
                ")) AND ((@IsNull_MaturityWithoutCapFloor = 1 AND [MaturityWithoutCapFloor] IS NU"& _ 
                "LL) OR ([MaturityWithoutCapFloor] = @Original_MaturityWithoutCapFloor)) AND ((@I"& _ 
                "sNull_EaDweigthedMaturityWithoutCapFloor = 1 AND [EaDweigthedMaturityWithoutCapF"& _ 
                "loor] IS NULL) OR ([EaDweigthedMaturityWithoutCapFloor] = @Original_EaDweigthedM"& _ 
                "aturityWithoutCapFloor)) AND ((@IsNull_PDxFinalEaD = 1 AND [PDxFinalEaD] IS NULL"& _ 
                ") OR ([PDxFinalEaD] = @Original_PDxFinalEaD)) AND ((@IsNull_LGDfinalEaDweighted "& _ 
                "= 1 AND [LGDfinalEaDweighted] IS NULL) OR ([LGDfinalEaDweighted] = @Original_LGD"& _ 
                "finalEaDweighted)) AND ((@IsNull_RiskDate = 1 AND [RiskDate] IS NULL) OR ([RiskD"& _ 
                "ate] = @Original_RiskDate)) AND ((@IsNull_IdClientGroup = 1 AND [IdClientGroup] "& _ 
                "IS NULL) OR ([IdClientGroup] = @Original_IdClientGroup)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obligor_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Product_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Collateral_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Maturity_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Org_Ccy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InternalInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p18", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p17", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p20", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p24", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p23", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p27", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p26", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CoreDefinition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PDxFinalEaD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, [Obligor Rate], [Contract Type], [Product Type], [GL Master / A"& _ 
                "ccount Type], [Counterparty/Issuer/Collateral Name], [Client No], [Contract Coll"& _ 
                "ateral ID], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         [Maturity Date], [Remaining Year(s) to Ma"& _ 
                "turity], [Org Ccy], [Credit Outstanding (Org Ccy)], [Credit Outstanding (EUR Equ"& _ 
                ")], NetCreditOutstandingAmountEUR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         InternalInfo, PD, "& _ 
                "[(1-ER)], [Credit Risk Amount(EUR Equ)], [NetCredit Risk Amount(EUR Equ)], [(1-E"& _ 
                "R_45)], CreditRiskAmountEUREquER45, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NetCreditRiskAmou"& _ 
                "ntEUREquER45, CoreDefinition, ClientGroup, ClientGroupName, MaturityWithoutCapFl"& _ 
                "oor, EaDweigthedMaturityWithoutCapFloor, PDxFinalEaD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " LGDfinalEaDweighted, RiskDate, IdClientGroup"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ScenarioAnalyze_C"& _ 
                "oncentrationRiskCHINA_Details"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable = New ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ScenarioAnalyze_ConcentrationRiskCHINA_Details")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Obligor_Rate As String,  _
                    ByVal Original_Contract_Type As String,  _
                    ByVal Original_Product_Type As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_Client_No As String,  _
                    ByVal Original_Contract_Collateral_ID As String,  _
                    ByVal Original_Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p8 As Global.System.Nullable(Of Double),  _
                    ByVal Original_Org_Ccy As String,  _
                    ByVal p11 As Global.System.Nullable(Of Double),  _
                    ByVal p14 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal Original_InternalInfo As String,  _
                    ByVal Original_PD As Global.System.Nullable(Of Double),  _
                    ByVal p17 As Global.System.Nullable(Of Double),  _
                    ByVal p20 As Global.System.Nullable(Of Double),  _
                    ByVal p23 As Global.System.Nullable(Of Double),  _
                    ByVal p26 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CoreDefinition As String,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_Obligor_Rate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Obligor_Rate,String)
            End If
            If (Original_Contract_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Contract_Type,String)
            End If
            If (Original_Product_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Product_Type,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(p5,String)
            End If
            If (Original_Client_No Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Client_No,String)
            End If
            If (Original_Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Contract_Collateral_ID,String)
            End If
            If (Original_Maturity_Date.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Maturity_Date.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p8.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(p8.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_Org_Ccy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Org_Ccy,String)
            End If
            If (p11.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(p11.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(p14.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_InternalInfo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_InternalInfo,String)
            End If
            If (Original_PD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_PD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(p17.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(p20.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(p23.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (p26.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(p26.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreDefinition Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_CoreDefinition,String)
            End If
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_PDxFinalEaD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_IdClientGroup.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_IdClientGroup.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p7 As Global.System.Nullable(Of Double),  _
                    ByVal Org_Ccy As String,  _
                    ByVal p10 As Global.System.Nullable(Of Double),  _
                    ByVal p13 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Global.System.Nullable(Of Double),  _
                    ByVal p16 As Global.System.Nullable(Of Double),  _
                    ByVal p19 As Global.System.Nullable(Of Double),  _
                    ByVal p22 As Global.System.Nullable(Of Double),  _
                    ByVal p25 As Global.System.Nullable(Of Double),  _
                    ByVal CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            If (Obligor_Rate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Obligor_Rate,String)
            End If
            If (Contract_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Contract_Type,String)
            End If
            If (Product_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Product_Type,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(p4,String)
            End If
            If (Client_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Client_No,String)
            End If
            If (Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Contract_Collateral_ID,String)
            End If
            If (Maturity_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Maturity_Date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p7.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Org_Ccy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Org_Ccy,String)
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(p10.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(p13.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (InternalInfo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(InternalInfo,String)
            End If
            If (PD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(p16.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(p19.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(p22.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(p25.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CoreDefinition Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CoreDefinition,String)
            End If
            If (ClientGroup Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ClientGroupName,String)
            End If
            If (MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PDxFinalEaD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IdClientGroup.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(IdClientGroup.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p7 As Global.System.Nullable(Of Double),  _
                    ByVal Org_Ccy As String,  _
                    ByVal p10 As Global.System.Nullable(Of Double),  _
                    ByVal p13 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Global.System.Nullable(Of Double),  _
                    ByVal p16 As Global.System.Nullable(Of Double),  _
                    ByVal p19 As Global.System.Nullable(Of Double),  _
                    ByVal p22 As Global.System.Nullable(Of Double),  _
                    ByVal p25 As Global.System.Nullable(Of Double),  _
                    ByVal CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdClientGroup As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Obligor_Rate As String,  _
                    ByVal Original_Contract_Type As String,  _
                    ByVal Original_Product_Type As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_Client_No As String,  _
                    ByVal Original_Contract_Collateral_ID As String,  _
                    ByVal Original_Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p8 As Global.System.Nullable(Of Double),  _
                    ByVal Original_Org_Ccy As String,  _
                    ByVal p11 As Global.System.Nullable(Of Double),  _
                    ByVal p14 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal Original_InternalInfo As String,  _
                    ByVal Original_PD As Global.System.Nullable(Of Double),  _
                    ByVal p17 As Global.System.Nullable(Of Double),  _
                    ByVal p20 As Global.System.Nullable(Of Double),  _
                    ByVal p23 As Global.System.Nullable(Of Double),  _
                    ByVal p26 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CoreDefinition As String,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            If (Obligor_Rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Obligor_Rate,String)
            End If
            If (Contract_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Contract_Type,String)
            End If
            If (Product_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Product_Type,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(p4,String)
            End If
            If (Client_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Client_No,String)
            End If
            If (Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Contract_Collateral_ID,String)
            End If
            If (Maturity_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Maturity_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p7.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Org_Ccy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Org_Ccy,String)
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(p10.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(p13.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (InternalInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(InternalInfo,String)
            End If
            If (PD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(p16.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(p19.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(p22.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(p25.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CoreDefinition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CoreDefinition,String)
            End If
            If (ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ClientGroupName,String)
            End If
            If (MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PDxFinalEaD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IdClientGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(IdClientGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_ID,Integer)
            If (Original_Obligor_Rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_Obligor_Rate,String)
            End If
            If (Original_Contract_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_Contract_Type,String)
            End If
            If (Original_Product_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_Product_Type,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(p5,String)
            End If
            If (Original_Client_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_Client_No,String)
            End If
            If (Original_Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Contract_Collateral_ID,String)
            End If
            If (Original_Maturity_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_Maturity_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (p8.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(p8.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_Org_Ccy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_Org_Ccy,String)
            End If
            If (p11.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(p11.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(p14.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_InternalInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_InternalInfo,String)
            End If
            If (Original_PD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_PD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(p17.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(p20.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(p23.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (p26.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(p26.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreDefinition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_CoreDefinition,String)
            End If
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_PDxFinalEaD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_IdClientGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_IdClientGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ScenarioAnalyze_ConcentrationRiskCHINA_Totals"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("ClientGroup", "ClientGroup")
            tableMapping.ColumnMappings.Add("ClientGroupName", "ClientGroupName")
            tableMapping.ColumnMappings.Add("SubBorrowersCounter", "SubBorrowersCounter")
            tableMapping.ColumnMappings.Add("FinalEadTotalSum", "FinalEadTotalSum")
            tableMapping.ColumnMappings.Add("LGD", "LGD")
            tableMapping.ColumnMappings.Add("PD_EaD_weighted", "PD_EaD_weighted")
            tableMapping.ColumnMappings.Add("PD_3bps_floor", "PD_3bps_floor")
            tableMapping.ColumnMappings.Add("IndicatorOfFloor", "IndicatorOfFloor")
            tableMapping.ColumnMappings.Add("MaturityEADweigthed", "MaturityEADweigthed")
            tableMapping.ColumnMappings.Add("R_CoefficientOfColleration", "R_CoefficientOfColleration")
            tableMapping.ColumnMappings.Add("b_MaturityAdjustment", "b_MaturityAdjustment")
            tableMapping.ColumnMappings.Add("RW_RiskWeightedExposure", "RW_RiskWeightedExposure")
            tableMapping.ColumnMappings.Add("UL_UnexpectedLoss", "UL_UnexpectedLoss")
            tableMapping.ColumnMappings.Add("s_i", "s_i")
            tableMapping.ColumnMappings.Add("K_i", "K_i")
            tableMapping.ColumnMappings.Add("R_i", "R_i")
            tableMapping.ColumnMappings.Add("VLGD_i", "VLGD_i")
            tableMapping.ColumnMappings.Add("C_i", "C_i")
            tableMapping.ColumnMappings.Add("GA_n", "GA_n")
            tableMapping.ColumnMappings.Add("RiskDate", "RiskDate")
            tableMapping.ColumnMappings.Add("IdDate", "IdDate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ScenarioAnalyze_ConcentrationRiskCHINA_Totals] WHERE (([ID] = @Origi"& _ 
                "nal_ID) AND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) OR ([ClientGrou"& _ 
                "p] = @Original_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AND [ClientGroupN"& _ 
                "ame] IS NULL) OR ([ClientGroupName] = @Original_ClientGroupName)) AND ((@IsNull_"& _ 
                "SubBorrowersCounter = 1 AND [SubBorrowersCounter] IS NULL) OR ([SubBorrowersCoun"& _ 
                "ter] = @Original_SubBorrowersCounter)) AND ((@IsNull_FinalEadTotalSum = 1 AND [F"& _ 
                "inalEadTotalSum] IS NULL) OR ([FinalEadTotalSum] = @Original_FinalEadTotalSum)) "& _ 
                "AND ((@IsNull_LGD = 1 AND [LGD] IS NULL) OR ([LGD] = @Original_LGD)) AND ((@IsNu"& _ 
                "ll_PD_EaD_weighted = 1 AND [PD_EaD_weighted] IS NULL) OR ([PD_EaD_weighted] = @O"& _ 
                "riginal_PD_EaD_weighted)) AND ((@IsNull_PD_3bps_floor = 1 AND [PD_3bps_floor] IS"& _ 
                " NULL) OR ([PD_3bps_floor] = @Original_PD_3bps_floor)) AND ((@IsNull_IndicatorOf"& _ 
                "Floor = 1 AND [IndicatorOfFloor] IS NULL) OR ([IndicatorOfFloor] = @Original_Ind"& _ 
                "icatorOfFloor)) AND ((@IsNull_MaturityEADweigthed = 1 AND [MaturityEADweigthed] "& _ 
                "IS NULL) OR ([MaturityEADweigthed] = @Original_MaturityEADweigthed)) AND ((@IsNu"& _ 
                "ll_R_CoefficientOfColleration = 1 AND [R_CoefficientOfColleration] IS NULL) OR ("& _ 
                "[R_CoefficientOfColleration] = @Original_R_CoefficientOfColleration)) AND ((@IsN"& _ 
                "ull_b_MaturityAdjustment = 1 AND [b_MaturityAdjustment] IS NULL) OR ([b_Maturity"& _ 
                "Adjustment] = @Original_b_MaturityAdjustment)) AND ((@IsNull_RW_RiskWeightedExpo"& _ 
                "sure = 1 AND [RW_RiskWeightedExposure] IS NULL) OR ([RW_RiskWeightedExposure] = "& _ 
                "@Original_RW_RiskWeightedExposure)) AND ((@IsNull_UL_UnexpectedLoss = 1 AND [UL_"& _ 
                "UnexpectedLoss] IS NULL) OR ([UL_UnexpectedLoss] = @Original_UL_UnexpectedLoss))"& _ 
                " AND ((@IsNull_s_i = 1 AND [s_i] IS NULL) OR ([s_i] = @Original_s_i)) AND ((@IsN"& _ 
                "ull_K_i = 1 AND [K_i] IS NULL) OR ([K_i] = @Original_K_i)) AND ((@IsNull_R_i = 1"& _ 
                " AND [R_i] IS NULL) OR ([R_i] = @Original_R_i)) AND ((@IsNull_VLGD_i = 1 AND [VL"& _ 
                "GD_i] IS NULL) OR ([VLGD_i] = @Original_VLGD_i)) AND ((@IsNull_C_i = 1 AND [C_i]"& _ 
                " IS NULL) OR ([C_i] = @Original_C_i)) AND ((@IsNull_GA_n = 1 AND [GA_n] IS NULL)"& _ 
                " OR ([GA_n] = @Original_GA_n)) AND ((@IsNull_RiskDate = 1 AND [RiskDate] IS NULL"& _ 
                ") OR ([RiskDate] = @Original_RiskDate)) AND ((@IsNull_IdDate = 1 AND [IdDate] IS"& _ 
                " NULL) OR ([IdDate] = @Original_IdDate)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubBorrowersCounter", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubBorrowersCounter", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinalEadTotalSum", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinalEadTotalSum", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD_EaD_weighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD_EaD_weighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD_3bps_floor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD_3bps_floor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IndicatorOfFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndicatorOfFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityEADweigthed", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityEADweigthed", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_CoefficientOfColleration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_CoefficientOfColleration", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_b_MaturityAdjustment", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_b_MaturityAdjustment", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UL_UnexpectedLoss", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UL_UnexpectedLoss", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_s_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_s_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_K_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_K_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VLGD_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VLGD_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_C_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_C_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GA_n", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GA_n", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GA_n", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "GA_n", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ScenarioAnalyze_ConcentrationRiskCHINA_Totals] ([ClientGroup], [Clie"& _ 
                "ntGroupName], [SubBorrowersCounter], [FinalEadTotalSum], [LGD], [PD_EaD_weighted"& _ 
                "], [PD_3bps_floor], [IndicatorOfFloor], [MaturityEADweigthed], [R_CoefficientOfC"& _ 
                "olleration], [b_MaturityAdjustment], [RW_RiskWeightedExposure], [UL_UnexpectedLo"& _ 
                "ss], [s_i], [K_i], [R_i], [VLGD_i], [C_i], [GA_n], [RiskDate], [IdDate]) VALUES "& _ 
                "(@ClientGroup, @ClientGroupName, @SubBorrowersCounter, @FinalEadTotalSum, @LGD, "& _ 
                "@PD_EaD_weighted, @PD_3bps_floor, @IndicatorOfFloor, @MaturityEADweigthed, @R_Co"& _ 
                "efficientOfColleration, @b_MaturityAdjustment, @RW_RiskWeightedExposure, @UL_Une"& _ 
                "xpectedLoss, @s_i, @K_i, @R_i, @VLGD_i, @C_i, @GA_n, @RiskDate, @IdDate)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubBorrowersCounter", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinalEadTotalSum", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD_EaD_weighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD_3bps_floor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndicatorOfFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityEADweigthed", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_CoefficientOfColleration", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@b_MaturityAdjustment", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UL_UnexpectedLoss", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@s_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@K_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VLGD_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GA_n", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "GA_n", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE       ScenarioAnalyze_ConcentrationRiskCHINA_Totals"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                Cl"& _ 
                "ientGroup = @ClientGroup, ClientGroupName = @ClientGroupName, SubBorrowersCounte"& _ 
                "r = @SubBorrowersCounter, FinalEadTotalSum = @FinalEadTotalSum, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           LGD = @LGD, PD_EaD_weighted = @PD_EaD_weighted, PD_3bps_floor = @PD_3"& _ 
                "bps_floor, IndicatorOfFloor = @IndicatorOfFloor, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Matu"& _ 
                "rityEADweigthed = @MaturityEADweigthed, R_CoefficientOfColleration = @R_Coeffici"& _ 
                "entOfColleration, b_MaturityAdjustment = @b_MaturityAdjustment, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           RW_RiskWeightedExposure = @RW_RiskWeightedExposure, UL_UnexpectedLoss"& _ 
                " = @UL_UnexpectedLoss, s_i = @s_i, K_i = @K_i, R_i = @R_i, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      VLGD_i = @VLGD_i, C_i = @C_i, GA_n = @GA_n, RiskDate = @RiskDate, IdDate ="& _ 
                " @IdDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ID = @Original_ID) AND (@IsNull_ClientGroup = 1 AND Clie"& _ 
                "ntGroup IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ClientGroup = @Original_ClientGroup"& _ 
                ") AND (@IsNull_ClientGroupName = 1 AND ClientGroupName IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            ClientGroupName = @Original_ClientGroupName) AND (@IsNull_SubBorrowe"& _ 
                "rsCounter = 1 AND SubBorrowersCounter IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SubBo"& _ 
                "rrowersCounter = @Original_SubBorrowersCounter) AND (@IsNull_FinalEadTotalSum = "& _ 
                "1 AND FinalEadTotalSum IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FinalEadTotalSum = @"& _ 
                "Original_FinalEadTotalSum) AND (@IsNull_LGD = 1 AND LGD IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "             LGD = @Original_LGD) AND (@IsNull_PD_EaD_weighted = 1 AND PD_EaD_we"& _ 
                "ighted IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PD_EaD_weighted = @Original_PD_EaD_w"& _ 
                "eighted) AND (@IsNull_PD_3bps_floor = 1 AND PD_3bps_floor IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "               PD_3bps_floor = @Original_PD_3bps_floor) AND (@IsNull_IndicatorOf"& _ 
                "Floor = 1 AND IndicatorOfFloor IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         IndicatorOfF"& _ 
                "loor = @Original_IndicatorOfFloor) AND (@IsNull_MaturityEADweigthed = 1 AND Matu"& _ 
                "rityEADweigthed IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         MaturityEADweigthed = @Orig"& _ 
                "inal_MaturityEADweigthed) AND (@IsNull_R_CoefficientOfColleration = 1 AND R_Coef"& _ 
                "ficientOfColleration IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         R_CoefficientOfCollera"& _ 
                "tion = @Original_R_CoefficientOfColleration) AND (@IsNull_b_MaturityAdjustment ="& _ 
                " 1 AND b_MaturityAdjustment IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         b_MaturityAdjus"& _ 
                "tment = @Original_b_MaturityAdjustment) AND (@IsNull_RW_RiskWeightedExposure = 1"& _ 
                " AND RW_RiskWeightedExposure IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RW_RiskWeighte"& _ 
                "dExposure = @Original_RW_RiskWeightedExposure) AND (@IsNull_UL_UnexpectedLoss = "& _ 
                "1 AND UL_UnexpectedLoss IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UL_UnexpectedLoss ="& _ 
                " @Original_UL_UnexpectedLoss) AND (@IsNull_s_i = 1 AND s_i IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                s_i = @Original_s_i) AND (@IsNull_K_i = 1 AND K_i IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       K_i = @Original_K_i) AND (@IsNull_R_i = 1 AND R_i IS NULL"& _ 
                " OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         R_i = @Original_R_i) AND (@IsNull_VLGD_i = 1 AND V"& _ 
                "LGD_i IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VLGD_i = @Original_VLGD_i) AND (@IsNu"& _ 
                "ll_C_i = 1 AND C_i IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         C_i = @Original_C_i) AND"& _ 
                " (@IsNull_GA_n = 1 AND GA_n IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         GA_n = @Origina"& _ 
                "l_GA_n) AND (@IsNull_RiskDate = 1 AND RiskDate IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    RiskDate = @Original_RiskDate) AND (@IsNull_IdDate = 1 AND IdDate IS NULL OR"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         IdDate = @Original_IdDate)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubBorrowersCounter", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinalEadTotalSum", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGD", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD_EaD_weighted", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD_3bps_floor", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndicatorOfFloor", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityEADweigthed", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_CoefficientOfColleration", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@b_MaturityAdjustment", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UL_UnexpectedLoss", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@s_i", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@K_i", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_i", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VLGD_i", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C_i", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GA_n", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 12, "GA_n", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDate", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubBorrowersCounter", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubBorrowersCounter", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinalEadTotalSum", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinalEadTotalSum", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGD", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD_EaD_weighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD_EaD_weighted", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD_3bps_floor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD_3bps_floor", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IndicatorOfFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndicatorOfFloor", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityEADweigthed", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityEADweigthed", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_CoefficientOfColleration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_CoefficientOfColleration", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_b_MaturityAdjustment", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_b_MaturityAdjustment", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UL_UnexpectedLoss", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UL_UnexpectedLoss", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_s_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_s_i", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_K_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_K_i", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_i", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VLGD_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VLGD_i", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_C_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_C_i", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GA_n", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GA_n", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GA_n", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 12, "GA_n", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDate", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, ClientGroup, ClientGroupName, SubBorrowersCounter, FinalEadTota"& _ 
                "lSum, LGD, PD_EaD_weighted, PD_3bps_floor, IndicatorOfFloor, MaturityEADweigthed"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         R_CoefficientOfColleration, b_MaturityAdjustment, R"& _ 
                "W_RiskWeightedExposure, UL_UnexpectedLoss, s_i, K_i, R_i, VLGD_i, C_i, GA_n, Ris"& _ 
                "kDate, IdDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ScenarioAnalyze_ConcentrationRiskCHINA_Totals"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable = New ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_TotalsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ScenarioAnalyze_ConcentrationRiskCHINA_Totals")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_SubBorrowersCounter As Global.System.Nullable(Of Double),  _
                    ByVal Original_FinalEadTotalSum As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGD As Global.System.Nullable(Of Double),  _
                    ByVal Original_PD_EaD_weighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_PD_3bps_floor As Global.System.Nullable(Of Double),  _
                    ByVal Original_IndicatorOfFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_MaturityEADweigthed As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_CoefficientOfColleration As Global.System.Nullable(Of Double),  _
                    ByVal Original_b_MaturityAdjustment As Global.System.Nullable(Of Double),  _
                    ByVal Original_RW_RiskWeightedExposure As Global.System.Nullable(Of Double),  _
                    ByVal Original_UL_UnexpectedLoss As Global.System.Nullable(Of Double),  _
                    ByVal Original_s_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_K_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_VLGD_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_C_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_GA_n As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdDate As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_SubBorrowersCounter.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_SubBorrowersCounter.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_FinalEadTotalSum.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_FinalEadTotalSum.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_LGD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_LGD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_PD_EaD_weighted.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PD_EaD_weighted.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_PD_3bps_floor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_PD_3bps_floor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_IndicatorOfFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_IndicatorOfFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_MaturityEADweigthed.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_MaturityEADweigthed.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_R_CoefficientOfColleration.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_R_CoefficientOfColleration.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_b_MaturityAdjustment.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_b_MaturityAdjustment.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_RW_RiskWeightedExposure.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_RW_RiskWeightedExposure.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_UL_UnexpectedLoss.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_UL_UnexpectedLoss.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_s_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_s_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_K_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_K_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_R_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_R_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_VLGD_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_VLGD_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_C_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_C_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_GA_n.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_GA_n.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_IdDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_IdDate.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal SubBorrowersCounter As Global.System.Nullable(Of Double),  _
                    ByVal FinalEadTotalSum As Global.System.Nullable(Of Double),  _
                    ByVal LGD As Global.System.Nullable(Of Double),  _
                    ByVal PD_EaD_weighted As Global.System.Nullable(Of Double),  _
                    ByVal PD_3bps_floor As Global.System.Nullable(Of Double),  _
                    ByVal IndicatorOfFloor As Global.System.Nullable(Of Double),  _
                    ByVal MaturityEADweigthed As Global.System.Nullable(Of Double),  _
                    ByVal R_CoefficientOfColleration As Global.System.Nullable(Of Double),  _
                    ByVal b_MaturityAdjustment As Global.System.Nullable(Of Double),  _
                    ByVal RW_RiskWeightedExposure As Global.System.Nullable(Of Double),  _
                    ByVal UL_UnexpectedLoss As Global.System.Nullable(Of Double),  _
                    ByVal s_i As Global.System.Nullable(Of Double),  _
                    ByVal K_i As Global.System.Nullable(Of Double),  _
                    ByVal R_i As Global.System.Nullable(Of Double),  _
                    ByVal VLGD_i As Global.System.Nullable(Of Double),  _
                    ByVal C_i As Global.System.Nullable(Of Double),  _
                    ByVal GA_n As Global.System.Nullable(Of Decimal),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdDate As Global.System.Nullable(Of Integer)) As Integer
            If (ClientGroup Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ClientGroupName,String)
            End If
            If (SubBorrowersCounter.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SubBorrowersCounter.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FinalEadTotalSum.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FinalEadTotalSum.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LGD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LGD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PD_EaD_weighted.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PD_EaD_weighted.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PD_3bps_floor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PD_3bps_floor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IndicatorOfFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(IndicatorOfFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MaturityEADweigthed.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(MaturityEADweigthed.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (R_CoefficientOfColleration.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(R_CoefficientOfColleration.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (b_MaturityAdjustment.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(b_MaturityAdjustment.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (RW_RiskWeightedExposure.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(RW_RiskWeightedExposure.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (UL_UnexpectedLoss.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(UL_UnexpectedLoss.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (s_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(s_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (K_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(K_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (R_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(R_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (VLGD_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(VLGD_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (C_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(C_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (GA_n.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(GA_n.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (IdDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(IdDate.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal SubBorrowersCounter As Global.System.Nullable(Of Double),  _
                    ByVal FinalEadTotalSum As Global.System.Nullable(Of Double),  _
                    ByVal LGD As Global.System.Nullable(Of Double),  _
                    ByVal PD_EaD_weighted As Global.System.Nullable(Of Double),  _
                    ByVal PD_3bps_floor As Global.System.Nullable(Of Double),  _
                    ByVal IndicatorOfFloor As Global.System.Nullable(Of Double),  _
                    ByVal MaturityEADweigthed As Global.System.Nullable(Of Double),  _
                    ByVal R_CoefficientOfColleration As Global.System.Nullable(Of Double),  _
                    ByVal b_MaturityAdjustment As Global.System.Nullable(Of Double),  _
                    ByVal RW_RiskWeightedExposure As Global.System.Nullable(Of Double),  _
                    ByVal UL_UnexpectedLoss As Global.System.Nullable(Of Double),  _
                    ByVal s_i As Global.System.Nullable(Of Double),  _
                    ByVal K_i As Global.System.Nullable(Of Double),  _
                    ByVal R_i As Global.System.Nullable(Of Double),  _
                    ByVal VLGD_i As Global.System.Nullable(Of Double),  _
                    ByVal C_i As Global.System.Nullable(Of Double),  _
                    ByVal GA_n As Global.System.Nullable(Of Decimal),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdDate As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_SubBorrowersCounter As Global.System.Nullable(Of Double),  _
                    ByVal Original_FinalEadTotalSum As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGD As Global.System.Nullable(Of Double),  _
                    ByVal Original_PD_EaD_weighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_PD_3bps_floor As Global.System.Nullable(Of Double),  _
                    ByVal Original_IndicatorOfFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_MaturityEADweigthed As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_CoefficientOfColleration As Global.System.Nullable(Of Double),  _
                    ByVal Original_b_MaturityAdjustment As Global.System.Nullable(Of Double),  _
                    ByVal Original_RW_RiskWeightedExposure As Global.System.Nullable(Of Double),  _
                    ByVal Original_UL_UnexpectedLoss As Global.System.Nullable(Of Double),  _
                    ByVal Original_s_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_K_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_VLGD_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_C_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_GA_n As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdDate As Global.System.Nullable(Of Integer)) As Integer
            If (ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ClientGroupName,String)
            End If
            If (SubBorrowersCounter.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SubBorrowersCounter.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FinalEadTotalSum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FinalEadTotalSum.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LGD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(LGD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PD_EaD_weighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PD_EaD_weighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PD_3bps_floor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PD_3bps_floor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IndicatorOfFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(IndicatorOfFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MaturityEADweigthed.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(MaturityEADweigthed.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (R_CoefficientOfColleration.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(R_CoefficientOfColleration.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (b_MaturityAdjustment.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(b_MaturityAdjustment.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (RW_RiskWeightedExposure.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(RW_RiskWeightedExposure.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (UL_UnexpectedLoss.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(UL_UnexpectedLoss.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (s_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(s_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (K_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(K_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (R_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(R_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (VLGD_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(VLGD_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (C_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(C_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (GA_n.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(GA_n.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (IdDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(IdDate.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_ID,Integer)
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_SubBorrowersCounter.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_SubBorrowersCounter.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_FinalEadTotalSum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_FinalEadTotalSum.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_LGD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_LGD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_PD_EaD_weighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_PD_EaD_weighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_PD_3bps_floor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_PD_3bps_floor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_IndicatorOfFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_IndicatorOfFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_MaturityEADweigthed.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_MaturityEADweigthed.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_R_CoefficientOfColleration.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_R_CoefficientOfColleration.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_b_MaturityAdjustment.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_b_MaturityAdjustment.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_RW_RiskWeightedExposure.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_RW_RiskWeightedExposure.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_UL_UnexpectedLoss.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_UL_UnexpectedLoss.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_s_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_s_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_K_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_K_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_R_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_R_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_VLGD_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_VLGD_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_C_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_C_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_GA_n.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_GA_n.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_IdDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_IdDate.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ScenarioAnalyze_ConcentrationRiskTBA_Date"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("RiskDate", "RiskDate")
            tableMapping.ColumnMappings.Add("LGD_mod", "LGD_mod")
            tableMapping.ColumnMappings.Add("R_Colleration_Mod", "R_Colleration_Mod")
            tableMapping.ColumnMappings.Add("ObligorRate_Mod", "ObligorRate_Mod")
            tableMapping.ColumnMappings.Add("LevelOfConfidence", "LevelOfConfidence")
            tableMapping.ColumnMappings.Add("SumEL", "SumEL")
            tableMapping.ColumnMappings.Add("SumUL", "SumUL")
            tableMapping.ColumnMappings.Add("nu_Value", "nu_Value")
            tableMapping.ColumnMappings.Add("p_alpha_Value", "p_alpha_Value")
            tableMapping.ColumnMappings.Add("b_beta_value", "b_beta_value")
            tableMapping.ColumnMappings.Add("Gamma_inv", "Gamma_inv")
            tableMapping.ColumnMappings.Add("Delta", "Delta")
            tableMapping.ColumnMappings.Add("K_Value", "K_Value")
            tableMapping.ColumnMappings.Add("SumGA_rel", "SumGA_rel")
            tableMapping.ColumnMappings.Add("SumGA_Total", "SumGA_Total")
            tableMapping.ColumnMappings.Add("IdDate", "IdDate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ScenarioAnalyze_ConcentrationRiskTBA_Date] WHERE (([ID] = @Original_"& _ 
                "ID) AND ([RiskDate] = @Original_RiskDate) AND ((@IsNull_LGD_mod = 1 AND [LGD_mod"& _ 
                "] IS NULL) OR ([LGD_mod] = @Original_LGD_mod)) AND ((@IsNull_R_Colleration_Mod ="& _ 
                " 1 AND [R_Colleration_Mod] IS NULL) OR ([R_Colleration_Mod] = @Original_R_Coller"& _ 
                "ation_Mod)) AND ((@IsNull_ObligorRate_Mod = 1 AND [ObligorRate_Mod] IS NULL) OR "& _ 
                "([ObligorRate_Mod] = @Original_ObligorRate_Mod)) AND ((@IsNull_LevelOfConfidence"& _ 
                " = 1 AND [LevelOfConfidence] IS NULL) OR ([LevelOfConfidence] = @Original_LevelO"& _ 
                "fConfidence)) AND ((@IsNull_SumEL = 1 AND [SumEL] IS NULL) OR ([SumEL] = @Origin"& _ 
                "al_SumEL)) AND ((@IsNull_SumUL = 1 AND [SumUL] IS NULL) OR ([SumUL] = @Original_"& _ 
                "SumUL)) AND ((@IsNull_nu_Value = 1 AND [nu_Value] IS NULL) OR ([nu_Value] = @Ori"& _ 
                "ginal_nu_Value)) AND ((@IsNull_p_alpha_Value = 1 AND [p_alpha_Value] IS NULL) OR"& _ 
                " ([p_alpha_Value] = @Original_p_alpha_Value)) AND ((@IsNull_b_beta_value = 1 AND"& _ 
                " [b_beta_value] IS NULL) OR ([b_beta_value] = @Original_b_beta_value)) AND ((@Is"& _ 
                "Null_Gamma_inv = 1 AND [Gamma_inv] IS NULL) OR ([Gamma_inv] = @Original_Gamma_in"& _ 
                "v)) AND ((@IsNull_Delta = 1 AND [Delta] IS NULL) OR ([Delta] = @Original_Delta))"& _ 
                " AND ((@IsNull_K_Value = 1 AND [K_Value] IS NULL) OR ([K_Value] = @Original_K_Va"& _ 
                "lue)) AND ((@IsNull_SumGA_rel = 1 AND [SumGA_rel] IS NULL) OR ([SumGA_rel] = @Or"& _ 
                "iginal_SumGA_rel)) AND ((@IsNull_SumGA_Total = 1 AND [SumGA_Total] IS NULL) OR ("& _ 
                "[SumGA_Total] = @Original_SumGA_Total)) AND ((@IsNull_IdDate = 1 AND [IdDate] IS"& _ 
                " NULL) OR ([IdDate] = @Original_IdDate)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGD_mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGD_mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_Colleration_Mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_Colleration_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ObligorRate_Mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ObligorRate_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LevelOfConfidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LevelOfConfidence", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumEL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumEL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumUL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumUL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_nu_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_nu_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_p_alpha_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_p_alpha_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_b_beta_value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_b_beta_value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Gamma_inv", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Gamma_inv", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Delta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Delta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_K_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_K_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_rel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_rel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_rel", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "SumGA_rel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_Total", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_Total", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_Total", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SumGA_Total", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ScenarioAnalyze_ConcentrationRiskTBA_Date] ([RiskDate], [LGD_mod], ["& _ 
                "R_Colleration_Mod], [ObligorRate_Mod], [LevelOfConfidence], [SumEL], [SumUL], [n"& _ 
                "u_Value], [p_alpha_Value], [b_beta_value], [Gamma_inv], [Delta], [K_Value], [Sum"& _ 
                "GA_rel], [SumGA_Total], [IdDate]) VALUES (@RiskDate, @LGD_mod, @R_Colleration_Mo"& _ 
                "d, @ObligorRate_Mod, @LevelOfConfidence, @SumEL, @SumUL, @nu_Value, @p_alpha_Val"& _ 
                "ue, @b_beta_value, @Gamma_inv, @Delta, @K_Value, @SumGA_rel, @SumGA_Total, @IdDa"& _ 
                "te)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGD_mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Colleration_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ObligorRate_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LevelOfConfidence", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumEL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumUL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@nu_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p_alpha_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@b_beta_value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gamma_inv", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Delta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@K_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_rel", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "SumGA_rel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_Total", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SumGA_Total", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ScenarioAnalyze_ConcentrationRiskTBA_Date] SET [RiskDate] = @RiskDate, [L"& _ 
                "GD_mod] = @LGD_mod, [R_Colleration_Mod] = @R_Colleration_Mod, [ObligorRate_Mod] "& _ 
                "= @ObligorRate_Mod, [LevelOfConfidence] = @LevelOfConfidence, [SumEL] = @SumEL, "& _ 
                "[SumUL] = @SumUL, [nu_Value] = @nu_Value, [p_alpha_Value] = @p_alpha_Value, [b_b"& _ 
                "eta_value] = @b_beta_value, [Gamma_inv] = @Gamma_inv, [Delta] = @Delta, [K_Value"& _ 
                "] = @K_Value, [SumGA_rel] = @SumGA_rel, [SumGA_Total] = @SumGA_Total, [IdDate] ="& _ 
                " @IdDate WHERE (([ID] = @Original_ID) AND ([RiskDate] = @Original_RiskDate) AND "& _ 
                "((@IsNull_LGD_mod = 1 AND [LGD_mod] IS NULL) OR ([LGD_mod] = @Original_LGD_mod))"& _ 
                " AND ((@IsNull_R_Colleration_Mod = 1 AND [R_Colleration_Mod] IS NULL) OR ([R_Col"& _ 
                "leration_Mod] = @Original_R_Colleration_Mod)) AND ((@IsNull_ObligorRate_Mod = 1 "& _ 
                "AND [ObligorRate_Mod] IS NULL) OR ([ObligorRate_Mod] = @Original_ObligorRate_Mod"& _ 
                ")) AND ((@IsNull_LevelOfConfidence = 1 AND [LevelOfConfidence] IS NULL) OR ([Lev"& _ 
                "elOfConfidence] = @Original_LevelOfConfidence)) AND ((@IsNull_SumEL = 1 AND [Sum"& _ 
                "EL] IS NULL) OR ([SumEL] = @Original_SumEL)) AND ((@IsNull_SumUL = 1 AND [SumUL]"& _ 
                " IS NULL) OR ([SumUL] = @Original_SumUL)) AND ((@IsNull_nu_Value = 1 AND [nu_Val"& _ 
                "ue] IS NULL) OR ([nu_Value] = @Original_nu_Value)) AND ((@IsNull_p_alpha_Value ="& _ 
                " 1 AND [p_alpha_Value] IS NULL) OR ([p_alpha_Value] = @Original_p_alpha_Value)) "& _ 
                "AND ((@IsNull_b_beta_value = 1 AND [b_beta_value] IS NULL) OR ([b_beta_value] = "& _ 
                "@Original_b_beta_value)) AND ((@IsNull_Gamma_inv = 1 AND [Gamma_inv] IS NULL) OR"& _ 
                " ([Gamma_inv] = @Original_Gamma_inv)) AND ((@IsNull_Delta = 1 AND [Delta] IS NUL"& _ 
                "L) OR ([Delta] = @Original_Delta)) AND ((@IsNull_K_Value = 1 AND [K_Value] IS NU"& _ 
                "LL) OR ([K_Value] = @Original_K_Value)) AND ((@IsNull_SumGA_rel = 1 AND [SumGA_r"& _ 
                "el] IS NULL) OR ([SumGA_rel] = @Original_SumGA_rel)) AND ((@IsNull_SumGA_Total ="& _ 
                " 1 AND [SumGA_Total] IS NULL) OR ([SumGA_Total] = @Original_SumGA_Total)) AND (("& _ 
                "@IsNull_IdDate = 1 AND [IdDate] IS NULL) OR ([IdDate] = @Original_IdDate)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGD_mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Colleration_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ObligorRate_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LevelOfConfidence", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumEL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumUL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@nu_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p_alpha_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@b_beta_value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gamma_inv", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Delta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@K_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_rel", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "SumGA_rel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_Total", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SumGA_Total", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGD_mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGD_mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_Colleration_Mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_Colleration_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ObligorRate_Mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ObligorRate_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LevelOfConfidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LevelOfConfidence", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumEL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumEL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumUL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumUL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_nu_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_nu_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_p_alpha_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_p_alpha_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_b_beta_value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_b_beta_value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Gamma_inv", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Gamma_inv", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Delta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Delta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_K_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_K_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_rel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_rel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_rel", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "SumGA_rel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_Total", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_Total", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_Total", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SumGA_Total", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, RiskDate, LGD_mod, R_Colleration_Mod, ObligorRate_Mod, LevelOfC"& _ 
                "onfidence, SumEL, SumUL, nu_Value, p_alpha_Value, b_beta_value, Gamma_inv, Delta"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         K_Value, SumGA_rel, SumGA_Total, IdDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM      "& _ 
                "      ScenarioAnalyze_ConcentrationRiskTBA_Date"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable = New ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DateDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ScenarioAnalyze_ConcentrationRiskTBA_Date")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_RiskDate As Date,  _
                    ByVal Original_LGD_mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_Colleration_Mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_ObligorRate_Mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_LevelOfConfidence As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumEL As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumUL As Global.System.Nullable(Of Double),  _
                    ByVal Original_nu_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_p_alpha_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_b_beta_value As Global.System.Nullable(Of Double),  _
                    ByVal Original_Gamma_inv As Global.System.Nullable(Of Double),  _
                    ByVal Original_Delta As Global.System.Nullable(Of Double),  _
                    ByVal Original_K_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumGA_rel As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SumGA_Total As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IdDate As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_RiskDate,Date)
            If (Original_LGD_mod.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_LGD_mod.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_R_Colleration_Mod.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_R_Colleration_Mod.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_ObligorRate_Mod.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ObligorRate_Mod.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_LevelOfConfidence.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_LevelOfConfidence.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_SumEL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_SumEL.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_SumUL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_SumUL.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_nu_Value.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_nu_Value.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_p_alpha_Value.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_p_alpha_Value.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_b_beta_value.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_b_beta_value.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_Gamma_inv.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_Gamma_inv.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_Delta.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_Delta.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_K_Value.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_K_Value.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_rel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_SumGA_rel.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_Total.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_SumGA_Total.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_IdDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_IdDate.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal RiskDate As Date,  _
                    ByVal LGD_mod As Global.System.Nullable(Of Double),  _
                    ByVal R_Colleration_Mod As Global.System.Nullable(Of Double),  _
                    ByVal ObligorRate_Mod As Global.System.Nullable(Of Double),  _
                    ByVal LevelOfConfidence As Global.System.Nullable(Of Double),  _
                    ByVal SumEL As Global.System.Nullable(Of Double),  _
                    ByVal SumUL As Global.System.Nullable(Of Double),  _
                    ByVal nu_Value As Global.System.Nullable(Of Double),  _
                    ByVal p_alpha_Value As Global.System.Nullable(Of Double),  _
                    ByVal b_beta_value As Global.System.Nullable(Of Double),  _
                    ByVal Gamma_inv As Global.System.Nullable(Of Double),  _
                    ByVal Delta As Global.System.Nullable(Of Double),  _
                    ByVal K_Value As Global.System.Nullable(Of Double),  _
                    ByVal SumGA_rel As Global.System.Nullable(Of Decimal),  _
                    ByVal SumGA_Total As Global.System.Nullable(Of Decimal),  _
                    ByVal IdDate As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(RiskDate,Date)
            If (LGD_mod.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(LGD_mod.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (R_Colleration_Mod.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(R_Colleration_Mod.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ObligorRate_Mod.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ObligorRate_Mod.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LevelOfConfidence.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LevelOfConfidence.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SumEL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SumEL.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SumUL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SumUL.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (nu_Value.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(nu_Value.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p_alpha_Value.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p_alpha_Value.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (b_beta_value.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(b_beta_value.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Gamma_inv.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Gamma_inv.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Delta.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Delta.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (K_Value.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(K_Value.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SumGA_rel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SumGA_rel.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (SumGA_Total.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(SumGA_Total.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (IdDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(IdDate.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RiskDate As Date,  _
                    ByVal LGD_mod As Global.System.Nullable(Of Double),  _
                    ByVal R_Colleration_Mod As Global.System.Nullable(Of Double),  _
                    ByVal ObligorRate_Mod As Global.System.Nullable(Of Double),  _
                    ByVal LevelOfConfidence As Global.System.Nullable(Of Double),  _
                    ByVal SumEL As Global.System.Nullable(Of Double),  _
                    ByVal SumUL As Global.System.Nullable(Of Double),  _
                    ByVal nu_Value As Global.System.Nullable(Of Double),  _
                    ByVal p_alpha_Value As Global.System.Nullable(Of Double),  _
                    ByVal b_beta_value As Global.System.Nullable(Of Double),  _
                    ByVal Gamma_inv As Global.System.Nullable(Of Double),  _
                    ByVal Delta As Global.System.Nullable(Of Double),  _
                    ByVal K_Value As Global.System.Nullable(Of Double),  _
                    ByVal SumGA_rel As Global.System.Nullable(Of Decimal),  _
                    ByVal SumGA_Total As Global.System.Nullable(Of Decimal),  _
                    ByVal IdDate As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_RiskDate As Date,  _
                    ByVal Original_LGD_mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_Colleration_Mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_ObligorRate_Mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_LevelOfConfidence As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumEL As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumUL As Global.System.Nullable(Of Double),  _
                    ByVal Original_nu_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_p_alpha_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_b_beta_value As Global.System.Nullable(Of Double),  _
                    ByVal Original_Gamma_inv As Global.System.Nullable(Of Double),  _
                    ByVal Original_Delta As Global.System.Nullable(Of Double),  _
                    ByVal Original_K_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumGA_rel As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SumGA_Total As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IdDate As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RiskDate,Date)
            If (LGD_mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LGD_mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (R_Colleration_Mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(R_Colleration_Mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ObligorRate_Mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ObligorRate_Mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LevelOfConfidence.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(LevelOfConfidence.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SumEL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SumEL.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SumUL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(SumUL.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (nu_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(nu_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p_alpha_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p_alpha_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (b_beta_value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(b_beta_value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Gamma_inv.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Gamma_inv.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Delta.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Delta.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (K_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(K_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SumGA_rel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SumGA_rel.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (SumGA_Total.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(SumGA_Total.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (IdDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(IdDate.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_RiskDate,Date)
            If (Original_LGD_mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_LGD_mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_R_Colleration_Mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_R_Colleration_Mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_ObligorRate_Mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ObligorRate_Mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_LevelOfConfidence.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_LevelOfConfidence.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_SumEL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_SumEL.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_SumUL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_SumUL.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_nu_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_nu_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_p_alpha_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_p_alpha_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_b_beta_value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_b_beta_value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_Gamma_inv.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_Gamma_inv.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_Delta.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_Delta.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_K_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_K_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_rel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_SumGA_rel.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_Total.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_SumGA_Total.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_IdDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_IdDate.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ScenarioAnalyze_ConcentrationRiskTBA_Details"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Obligor Rate", "Obligor Rate")
            tableMapping.ColumnMappings.Add("Contract Type", "Contract Type")
            tableMapping.ColumnMappings.Add("Product Type", "Product Type")
            tableMapping.ColumnMappings.Add("GL Master / Account Type", "GL Master / Account Type")
            tableMapping.ColumnMappings.Add("Counterparty/Issuer/Collateral Name", "Counterparty/Issuer/Collateral Name")
            tableMapping.ColumnMappings.Add("Client No", "Client No")
            tableMapping.ColumnMappings.Add("Contract Collateral ID", "Contract Collateral ID")
            tableMapping.ColumnMappings.Add("Maturity Date", "Maturity Date")
            tableMapping.ColumnMappings.Add("Remaining Year(s) to Maturity", "Remaining Year(s) to Maturity")
            tableMapping.ColumnMappings.Add("Org Ccy", "Org Ccy")
            tableMapping.ColumnMappings.Add("Credit Outstanding (Org Ccy)", "Credit Outstanding (Org Ccy)")
            tableMapping.ColumnMappings.Add("Credit Outstanding (EUR Equ)", "Credit Outstanding (EUR Equ)")
            tableMapping.ColumnMappings.Add("NetCreditOutstandingAmountEUR", "NetCreditOutstandingAmountEUR")
            tableMapping.ColumnMappings.Add("InternalInfo", "InternalInfo")
            tableMapping.ColumnMappings.Add("PD", "PD")
            tableMapping.ColumnMappings.Add("(1-ER)", "(1-ER)")
            tableMapping.ColumnMappings.Add("Credit Risk Amount(EUR Equ)", "Credit Risk Amount(EUR Equ)")
            tableMapping.ColumnMappings.Add("NetCredit Risk Amount(EUR Equ)", "NetCredit Risk Amount(EUR Equ)")
            tableMapping.ColumnMappings.Add("(1-ER_45)", "(1-ER_45)")
            tableMapping.ColumnMappings.Add("CreditRiskAmountEUREquER45", "CreditRiskAmountEUREquER45")
            tableMapping.ColumnMappings.Add("NetCreditRiskAmountEUREquER45", "NetCreditRiskAmountEUREquER45")
            tableMapping.ColumnMappings.Add("CoreDefinition", "CoreDefinition")
            tableMapping.ColumnMappings.Add("ClientGroup", "ClientGroup")
            tableMapping.ColumnMappings.Add("ClientGroupName", "ClientGroupName")
            tableMapping.ColumnMappings.Add("MaturityWithoutCapFloor", "MaturityWithoutCapFloor")
            tableMapping.ColumnMappings.Add("EaDweigthedMaturityWithoutCapFloor", "EaDweigthedMaturityWithoutCapFloor")
            tableMapping.ColumnMappings.Add("PDxFinalEaD", "PDxFinalEaD")
            tableMapping.ColumnMappings.Add("LGDfinalEaDweighted", "LGDfinalEaDweighted")
            tableMapping.ColumnMappings.Add("RiskDate", "RiskDate")
            tableMapping.ColumnMappings.Add("IdClientGroup", "IdClientGroup")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ScenarioAnalyze_ConcentrationRiskTBA_Details] WHERE (([ID] = @Origin"& _ 
                "al_ID) AND ((@IsNull_Obligor_Rate = 1 AND [Obligor Rate] IS NULL) OR ([Obligor R"& _ 
                "ate] = @Original_Obligor_Rate)) AND ((@IsNull_Contract_Type = 1 AND [Contract Ty"& _ 
                "pe] IS NULL) OR ([Contract Type] = @Original_Contract_Type)) AND ((@IsNull_Produ"& _ 
                "ct_Type = 1 AND [Product Type] IS NULL) OR ([Product Type] = @Original_Product_T"& _ 
                "ype)) AND ((@p3 = 1 AND [GL Master / Account Type] IS NULL) OR ([GL Master / Acc"& _ 
                "ount Type] = @p2)) AND ((@p6 = 1 AND [Counterparty/Issuer/Collateral Name] IS NU"& _ 
                "LL) OR ([Counterparty/Issuer/Collateral Name] = @p5)) AND ((@IsNull_Client_No = "& _ 
                "1 AND [Client No] IS NULL) OR ([Client No] = @Original_Client_No)) AND ((@IsNull"& _ 
                "_Contract_Collateral_ID = 1 AND [Contract Collateral ID] IS NULL) OR ([Contract "& _ 
                "Collateral ID] = @Original_Contract_Collateral_ID)) AND ((@IsNull_Maturity_Date "& _ 
                "= 1 AND [Maturity Date] IS NULL) OR ([Maturity Date] = @Original_Maturity_Date))"& _ 
                " AND ((@p9 = 1 AND [Remaining Year(s) to Maturity] IS NULL) OR ([Remaining Year("& _ 
                "s) to Maturity] = @p8)) AND ((@IsNull_Org_Ccy = 1 AND [Org Ccy] IS NULL) OR ([Or"& _ 
                "g Ccy] = @Original_Org_Ccy)) AND ((@p12 = 1 AND [Credit Outstanding (Org Ccy)] I"& _ 
                "S NULL) OR ([Credit Outstanding (Org Ccy)] = @p11)) AND ((@p15 = 1 AND [Credit O"& _ 
                "utstanding (EUR Equ)] IS NULL) OR ([Credit Outstanding (EUR Equ)] = @p14)) AND ("& _ 
                "(@IsNull_NetCreditOutstandingAmountEUR = 1 AND [NetCreditOutstandingAmountEUR] I"& _ 
                "S NULL) OR ([NetCreditOutstandingAmountEUR] = @Original_NetCreditOutstandingAmou"& _ 
                "ntEUR)) AND ((@IsNull_InternalInfo = 1 AND [InternalInfo] IS NULL) OR ([Internal"& _ 
                "Info] = @Original_InternalInfo)) AND ((@IsNull_PD = 1 AND [PD] IS NULL) OR ([PD]"& _ 
                " = @Original_PD)) AND ((@p18 = 1 AND [(1-ER)] IS NULL) OR ([(1-ER)] = @p17)) AND"& _ 
                " ((@p21 = 1 AND [Credit Risk Amount(EUR Equ)] IS NULL) OR ([Credit Risk Amount(E"& _ 
                "UR Equ)] = @p20)) AND ((@p24 = 1 AND [NetCredit Risk Amount(EUR Equ)] IS NULL) O"& _ 
                "R ([NetCredit Risk Amount(EUR Equ)] = @p23)) AND ((@p27 = 1 AND [(1-ER_45)] IS N"& _ 
                "ULL) OR ([(1-ER_45)] = @p26)) AND ((@IsNull_CreditRiskAmountEUREquER45 = 1 AND ["& _ 
                "CreditRiskAmountEUREquER45] IS NULL) OR ([CreditRiskAmountEUREquER45] = @Origina"& _ 
                "l_CreditRiskAmountEUREquER45)) AND ((@IsNull_NetCreditRiskAmountEUREquER45 = 1 A"& _ 
                "ND [NetCreditRiskAmountEUREquER45] IS NULL) OR ([NetCreditRiskAmountEUREquER45] "& _ 
                "= @Original_NetCreditRiskAmountEUREquER45)) AND ((@IsNull_CoreDefinition = 1 AND"& _ 
                " [CoreDefinition] IS NULL) OR ([CoreDefinition] = @Original_CoreDefinition)) AND"& _ 
                " ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) OR ([ClientGroup] = @Origi"& _ 
                "nal_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AND [ClientGroupName] IS NUL"& _ 
                "L) OR ([ClientGroupName] = @Original_ClientGroupName)) AND ((@IsNull_MaturityWit"& _ 
                "houtCapFloor = 1 AND [MaturityWithoutCapFloor] IS NULL) OR ([MaturityWithoutCapF"& _ 
                "loor] = @Original_MaturityWithoutCapFloor)) AND ((@IsNull_EaDweigthedMaturityWit"& _ 
                "houtCapFloor = 1 AND [EaDweigthedMaturityWithoutCapFloor] IS NULL) OR ([EaDweigt"& _ 
                "hedMaturityWithoutCapFloor] = @Original_EaDweigthedMaturityWithoutCapFloor)) AND"& _ 
                " ((@IsNull_PDxFinalEaD = 1 AND [PDxFinalEaD] IS NULL) OR ([PDxFinalEaD] = @Origi"& _ 
                "nal_PDxFinalEaD)) AND ((@IsNull_LGDfinalEaDweighted = 1 AND [LGDfinalEaDweighted"& _ 
                "] IS NULL) OR ([LGDfinalEaDweighted] = @Original_LGDfinalEaDweighted)) AND ((@Is"& _ 
                "Null_RiskDate = 1 AND [RiskDate] IS NULL) OR ([RiskDate] = @Original_RiskDate)) "& _ 
                "AND ((@IsNull_IdClientGroup = 1 AND [IdClientGroup] IS NULL) OR ([IdClientGroup]"& _ 
                " = @Original_IdClientGroup)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obligor_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Product_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Collateral_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Maturity_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Org_Ccy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InternalInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p18", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p17", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p20", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p24", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p23", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p27", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p26", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CoreDefinition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PDxFinalEaD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ScenarioAnalyze_ConcentrationRiskTBA_Details] ([Obligor Rate], [Cont"& _ 
                "ract Type], [Product Type], [GL Master / Account Type], [Counterparty/Issuer/Col"& _ 
                "lateral Name], [Client No], [Contract Collateral ID], [Maturity Date], [Remainin"& _ 
                "g Year(s) to Maturity], [Org Ccy], [Credit Outstanding (Org Ccy)], [Credit Outst"& _ 
                "anding (EUR Equ)], [NetCreditOutstandingAmountEUR], [InternalInfo], [PD], [(1-ER"& _ 
                ")], [Credit Risk Amount(EUR Equ)], [NetCredit Risk Amount(EUR Equ)], [(1-ER_45)]"& _ 
                ", [CreditRiskAmountEUREquER45], [NetCreditRiskAmountEUREquER45], [CoreDefinition"& _ 
                "], [ClientGroup], [ClientGroupName], [MaturityWithoutCapFloor], [EaDweigthedMatu"& _ 
                "rityWithoutCapFloor], [PDxFinalEaD], [LGDfinalEaDweighted], [RiskDate], [IdClien"& _ 
                "tGroup]) VALUES (@Obligor_Rate, @Contract_Type, @Product_Type, @p1, @p4, @Client"& _ 
                "_No, @Contract_Collateral_ID, @Maturity_Date, @p7, @Org_Ccy, @p10, @p13, @NetCre"& _ 
                "ditOutstandingAmountEUR, @InternalInfo, @PD, @p16, @p19, @p22, @p25, @CreditRisk"& _ 
                "AmountEUREquER45, @NetCreditRiskAmountEUREquER45, @CoreDefinition, @ClientGroup,"& _ 
                " @ClientGroupName, @MaturityWithoutCapFloor, @EaDweigthedMaturityWithoutCapFloor"& _ 
                ", @PDxFinalEaD, @LGDfinalEaDweighted, @RiskDate, @IdClientGroup)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ScenarioAnalyze_ConcentrationRiskTBA_Details] SET [Obligor Rate] = @Oblig"& _ 
                "or_Rate, [Contract Type] = @Contract_Type, [Product Type] = @Product_Type, [GL M"& _ 
                "aster / Account Type] = @p1, [Counterparty/Issuer/Collateral Name] = @p4, [Clien"& _ 
                "t No] = @Client_No, [Contract Collateral ID] = @Contract_Collateral_ID, [Maturit"& _ 
                "y Date] = @Maturity_Date, [Remaining Year(s) to Maturity] = @p7, [Org Ccy] = @Or"& _ 
                "g_Ccy, [Credit Outstanding (Org Ccy)] = @p10, [Credit Outstanding (EUR Equ)] = @"& _ 
                "p13, [NetCreditOutstandingAmountEUR] = @NetCreditOutstandingAmountEUR, [Internal"& _ 
                "Info] = @InternalInfo, [PD] = @PD, [(1-ER)] = @p16, [Credit Risk Amount(EUR Equ)"& _ 
                "] = @p19, [NetCredit Risk Amount(EUR Equ)] = @p22, [(1-ER_45)] = @p25, [CreditRi"& _ 
                "skAmountEUREquER45] = @CreditRiskAmountEUREquER45, [NetCreditRiskAmountEUREquER4"& _ 
                "5] = @NetCreditRiskAmountEUREquER45, [CoreDefinition] = @CoreDefinition, [Client"& _ 
                "Group] = @ClientGroup, [ClientGroupName] = @ClientGroupName, [MaturityWithoutCap"& _ 
                "Floor] = @MaturityWithoutCapFloor, [EaDweigthedMaturityWithoutCapFloor] = @EaDwe"& _ 
                "igthedMaturityWithoutCapFloor, [PDxFinalEaD] = @PDxFinalEaD, [LGDfinalEaDweighte"& _ 
                "d] = @LGDfinalEaDweighted, [RiskDate] = @RiskDate, [IdClientGroup] = @IdClientGr"& _ 
                "oup WHERE (([ID] = @Original_ID) AND ((@IsNull_Obligor_Rate = 1 AND [Obligor Rat"& _ 
                "e] IS NULL) OR ([Obligor Rate] = @Original_Obligor_Rate)) AND ((@IsNull_Contract"& _ 
                "_Type = 1 AND [Contract Type] IS NULL) OR ([Contract Type] = @Original_Contract_"& _ 
                "Type)) AND ((@IsNull_Product_Type = 1 AND [Product Type] IS NULL) OR ([Product T"& _ 
                "ype] = @Original_Product_Type)) AND ((@p3 = 1 AND [GL Master / Account Type] IS "& _ 
                "NULL) OR ([GL Master / Account Type] = @p2)) AND ((@p6 = 1 AND [Counterparty/Iss"& _ 
                "uer/Collateral Name] IS NULL) OR ([Counterparty/Issuer/Collateral Name] = @p5)) "& _ 
                "AND ((@IsNull_Client_No = 1 AND [Client No] IS NULL) OR ([Client No] = @Original"& _ 
                "_Client_No)) AND ((@IsNull_Contract_Collateral_ID = 1 AND [Contract Collateral I"& _ 
                "D] IS NULL) OR ([Contract Collateral ID] = @Original_Contract_Collateral_ID)) AN"& _ 
                "D ((@IsNull_Maturity_Date = 1 AND [Maturity Date] IS NULL) OR ([Maturity Date] ="& _ 
                " @Original_Maturity_Date)) AND ((@p9 = 1 AND [Remaining Year(s) to Maturity] IS "& _ 
                "NULL) OR ([Remaining Year(s) to Maturity] = @p8)) AND ((@IsNull_Org_Ccy = 1 AND "& _ 
                "[Org Ccy] IS NULL) OR ([Org Ccy] = @Original_Org_Ccy)) AND ((@p12 = 1 AND [Credi"& _ 
                "t Outstanding (Org Ccy)] IS NULL) OR ([Credit Outstanding (Org Ccy)] = @p11)) AN"& _ 
                "D ((@p15 = 1 AND [Credit Outstanding (EUR Equ)] IS NULL) OR ([Credit Outstanding"& _ 
                " (EUR Equ)] = @p14)) AND ((@IsNull_NetCreditOutstandingAmountEUR = 1 AND [NetCre"& _ 
                "ditOutstandingAmountEUR] IS NULL) OR ([NetCreditOutstandingAmountEUR] = @Origina"& _ 
                "l_NetCreditOutstandingAmountEUR)) AND ((@IsNull_InternalInfo = 1 AND [InternalIn"& _ 
                "fo] IS NULL) OR ([InternalInfo] = @Original_InternalInfo)) AND ((@IsNull_PD = 1 "& _ 
                "AND [PD] IS NULL) OR ([PD] = @Original_PD)) AND ((@p18 = 1 AND [(1-ER)] IS NULL)"& _ 
                " OR ([(1-ER)] = @p17)) AND ((@p21 = 1 AND [Credit Risk Amount(EUR Equ)] IS NULL)"& _ 
                " OR ([Credit Risk Amount(EUR Equ)] = @p20)) AND ((@p24 = 1 AND [NetCredit Risk A"& _ 
                "mount(EUR Equ)] IS NULL) OR ([NetCredit Risk Amount(EUR Equ)] = @p23)) AND ((@p2"& _ 
                "7 = 1 AND [(1-ER_45)] IS NULL) OR ([(1-ER_45)] = @p26)) AND ((@IsNull_CreditRisk"& _ 
                "AmountEUREquER45 = 1 AND [CreditRiskAmountEUREquER45] IS NULL) OR ([CreditRiskAm"& _ 
                "ountEUREquER45] = @Original_CreditRiskAmountEUREquER45)) AND ((@IsNull_NetCredit"& _ 
                "RiskAmountEUREquER45 = 1 AND [NetCreditRiskAmountEUREquER45] IS NULL) OR ([NetCr"& _ 
                "editRiskAmountEUREquER45] = @Original_NetCreditRiskAmountEUREquER45)) AND ((@IsN"& _ 
                "ull_CoreDefinition = 1 AND [CoreDefinition] IS NULL) OR ([CoreDefinition] = @Ori"& _ 
                "ginal_CoreDefinition)) AND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) "& _ 
                "OR ([ClientGroup] = @Original_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AN"& _ 
                "D [ClientGroupName] IS NULL) OR ([ClientGroupName] = @Original_ClientGroupName))"& _ 
                " AND ((@IsNull_MaturityWithoutCapFloor = 1 AND [MaturityWithoutCapFloor] IS NULL"& _ 
                ") OR ([MaturityWithoutCapFloor] = @Original_MaturityWithoutCapFloor)) AND ((@IsN"& _ 
                "ull_EaDweigthedMaturityWithoutCapFloor = 1 AND [EaDweigthedMaturityWithoutCapFlo"& _ 
                "or] IS NULL) OR ([EaDweigthedMaturityWithoutCapFloor] = @Original_EaDweigthedMat"& _ 
                "urityWithoutCapFloor)) AND ((@IsNull_PDxFinalEaD = 1 AND [PDxFinalEaD] IS NULL) "& _ 
                "OR ([PDxFinalEaD] = @Original_PDxFinalEaD)) AND ((@IsNull_LGDfinalEaDweighted = "& _ 
                "1 AND [LGDfinalEaDweighted] IS NULL) OR ([LGDfinalEaDweighted] = @Original_LGDfi"& _ 
                "nalEaDweighted)) AND ((@IsNull_RiskDate = 1 AND [RiskDate] IS NULL) OR ([RiskDat"& _ 
                "e] = @Original_RiskDate)) AND ((@IsNull_IdClientGroup = 1 AND [IdClientGroup] IS"& _ 
                " NULL) OR ([IdClientGroup] = @Original_IdClientGroup)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obligor_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Product_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Collateral_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Maturity_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Org_Ccy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InternalInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p18", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p17", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p20", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p24", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p23", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p27", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p26", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CoreDefinition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PDxFinalEaD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, [Obligor Rate], [Contract Type], [Product Type], [GL Master / A"& _ 
                "ccount Type], [Counterparty/Issuer/Collateral Name], [Client No], [Contract Coll"& _ 
                "ateral ID], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         [Maturity Date], [Remaining Year(s) to Ma"& _ 
                "turity], [Org Ccy], [Credit Outstanding (Org Ccy)], [Credit Outstanding (EUR Equ"& _ 
                ")], NetCreditOutstandingAmountEUR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         InternalInfo, PD, "& _ 
                "[(1-ER)], [Credit Risk Amount(EUR Equ)], [NetCredit Risk Amount(EUR Equ)], [(1-E"& _ 
                "R_45)], CreditRiskAmountEUREquER45, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NetCreditRiskAmou"& _ 
                "ntEUREquER45, CoreDefinition, ClientGroup, ClientGroupName, MaturityWithoutCapFl"& _ 
                "oor, EaDweigthedMaturityWithoutCapFloor, PDxFinalEaD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " LGDfinalEaDweighted, RiskDate, IdClientGroup"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ScenarioAnalyze_C"& _ 
                "oncentrationRiskTBA_Details"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable = New ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DetailsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ScenarioAnalyze_ConcentrationRiskTBA_Details")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Obligor_Rate As String,  _
                    ByVal Original_Contract_Type As String,  _
                    ByVal Original_Product_Type As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_Client_No As String,  _
                    ByVal Original_Contract_Collateral_ID As String,  _
                    ByVal Original_Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p8 As Global.System.Nullable(Of Double),  _
                    ByVal Original_Org_Ccy As String,  _
                    ByVal p11 As Global.System.Nullable(Of Double),  _
                    ByVal p14 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal Original_InternalInfo As String,  _
                    ByVal Original_PD As Global.System.Nullable(Of Double),  _
                    ByVal p17 As Global.System.Nullable(Of Double),  _
                    ByVal p20 As Global.System.Nullable(Of Double),  _
                    ByVal p23 As Global.System.Nullable(Of Double),  _
                    ByVal p26 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CoreDefinition As String,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_Obligor_Rate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Obligor_Rate,String)
            End If
            If (Original_Contract_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Contract_Type,String)
            End If
            If (Original_Product_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Product_Type,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(p5,String)
            End If
            If (Original_Client_No Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Client_No,String)
            End If
            If (Original_Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Contract_Collateral_ID,String)
            End If
            If (Original_Maturity_Date.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Maturity_Date.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p8.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(p8.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_Org_Ccy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Org_Ccy,String)
            End If
            If (p11.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(p11.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(p14.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_InternalInfo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_InternalInfo,String)
            End If
            If (Original_PD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_PD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(p17.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(p20.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(p23.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (p26.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(p26.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreDefinition Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_CoreDefinition,String)
            End If
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_PDxFinalEaD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_IdClientGroup.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_IdClientGroup.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p7 As Global.System.Nullable(Of Double),  _
                    ByVal Org_Ccy As String,  _
                    ByVal p10 As Global.System.Nullable(Of Double),  _
                    ByVal p13 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Global.System.Nullable(Of Double),  _
                    ByVal p16 As Global.System.Nullable(Of Double),  _
                    ByVal p19 As Global.System.Nullable(Of Double),  _
                    ByVal p22 As Global.System.Nullable(Of Double),  _
                    ByVal p25 As Global.System.Nullable(Of Double),  _
                    ByVal CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            If (Obligor_Rate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Obligor_Rate,String)
            End If
            If (Contract_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Contract_Type,String)
            End If
            If (Product_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Product_Type,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(p4,String)
            End If
            If (Client_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Client_No,String)
            End If
            If (Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Contract_Collateral_ID,String)
            End If
            If (Maturity_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Maturity_Date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p7.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Org_Ccy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Org_Ccy,String)
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(p10.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(p13.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (InternalInfo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(InternalInfo,String)
            End If
            If (PD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(p16.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(p19.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(p22.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(p25.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CoreDefinition Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CoreDefinition,String)
            End If
            If (ClientGroup Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ClientGroupName,String)
            End If
            If (MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PDxFinalEaD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IdClientGroup.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(IdClientGroup.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p7 As Global.System.Nullable(Of Double),  _
                    ByVal Org_Ccy As String,  _
                    ByVal p10 As Global.System.Nullable(Of Double),  _
                    ByVal p13 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Global.System.Nullable(Of Double),  _
                    ByVal p16 As Global.System.Nullable(Of Double),  _
                    ByVal p19 As Global.System.Nullable(Of Double),  _
                    ByVal p22 As Global.System.Nullable(Of Double),  _
                    ByVal p25 As Global.System.Nullable(Of Double),  _
                    ByVal CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdClientGroup As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Obligor_Rate As String,  _
                    ByVal Original_Contract_Type As String,  _
                    ByVal Original_Product_Type As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_Client_No As String,  _
                    ByVal Original_Contract_Collateral_ID As String,  _
                    ByVal Original_Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p8 As Global.System.Nullable(Of Double),  _
                    ByVal Original_Org_Ccy As String,  _
                    ByVal p11 As Global.System.Nullable(Of Double),  _
                    ByVal p14 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal Original_InternalInfo As String,  _
                    ByVal Original_PD As Global.System.Nullable(Of Double),  _
                    ByVal p17 As Global.System.Nullable(Of Double),  _
                    ByVal p20 As Global.System.Nullable(Of Double),  _
                    ByVal p23 As Global.System.Nullable(Of Double),  _
                    ByVal p26 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CoreDefinition As String,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            If (Obligor_Rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Obligor_Rate,String)
            End If
            If (Contract_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Contract_Type,String)
            End If
            If (Product_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Product_Type,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(p4,String)
            End If
            If (Client_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Client_No,String)
            End If
            If (Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Contract_Collateral_ID,String)
            End If
            If (Maturity_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Maturity_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p7.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Org_Ccy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Org_Ccy,String)
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(p10.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(p13.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (InternalInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(InternalInfo,String)
            End If
            If (PD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(p16.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(p19.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(p22.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(p25.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CoreDefinition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CoreDefinition,String)
            End If
            If (ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ClientGroupName,String)
            End If
            If (MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PDxFinalEaD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IdClientGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(IdClientGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_ID,Integer)
            If (Original_Obligor_Rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_Obligor_Rate,String)
            End If
            If (Original_Contract_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_Contract_Type,String)
            End If
            If (Original_Product_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_Product_Type,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(p5,String)
            End If
            If (Original_Client_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_Client_No,String)
            End If
            If (Original_Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Contract_Collateral_ID,String)
            End If
            If (Original_Maturity_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_Maturity_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (p8.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(p8.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_Org_Ccy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_Org_Ccy,String)
            End If
            If (p11.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(p11.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(p14.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_InternalInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_InternalInfo,String)
            End If
            If (Original_PD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_PD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(p17.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(p20.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(p23.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (p26.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(p26.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreDefinition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_CoreDefinition,String)
            End If
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_PDxFinalEaD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_IdClientGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_IdClientGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ScenarioAnalyze_ConcentrationRiskTBA_Totals"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("ClientGroup", "ClientGroup")
            tableMapping.ColumnMappings.Add("ClientGroupName", "ClientGroupName")
            tableMapping.ColumnMappings.Add("SubBorrowersCounter", "SubBorrowersCounter")
            tableMapping.ColumnMappings.Add("FinalEadTotalSum", "FinalEadTotalSum")
            tableMapping.ColumnMappings.Add("LGD", "LGD")
            tableMapping.ColumnMappings.Add("PD_EaD_weighted", "PD_EaD_weighted")
            tableMapping.ColumnMappings.Add("PD_3bps_floor", "PD_3bps_floor")
            tableMapping.ColumnMappings.Add("IndicatorOfFloor", "IndicatorOfFloor")
            tableMapping.ColumnMappings.Add("MaturityEADweigthed", "MaturityEADweigthed")
            tableMapping.ColumnMappings.Add("R_CoefficientOfColleration", "R_CoefficientOfColleration")
            tableMapping.ColumnMappings.Add("b_MaturityAdjustment", "b_MaturityAdjustment")
            tableMapping.ColumnMappings.Add("RW_RiskWeightedExposure", "RW_RiskWeightedExposure")
            tableMapping.ColumnMappings.Add("UL_UnexpectedLoss", "UL_UnexpectedLoss")
            tableMapping.ColumnMappings.Add("s_i", "s_i")
            tableMapping.ColumnMappings.Add("K_i", "K_i")
            tableMapping.ColumnMappings.Add("R_i", "R_i")
            tableMapping.ColumnMappings.Add("VLGD_i", "VLGD_i")
            tableMapping.ColumnMappings.Add("C_i", "C_i")
            tableMapping.ColumnMappings.Add("GA_n", "GA_n")
            tableMapping.ColumnMappings.Add("RiskDate", "RiskDate")
            tableMapping.ColumnMappings.Add("IdDate", "IdDate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ScenarioAnalyze_ConcentrationRiskTBA_Totals] WHERE (([ID] = @Origina"& _ 
                "l_ID) AND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) OR ([ClientGroup]"& _ 
                " = @Original_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AND [ClientGroupNam"& _ 
                "e] IS NULL) OR ([ClientGroupName] = @Original_ClientGroupName)) AND ((@IsNull_Su"& _ 
                "bBorrowersCounter = 1 AND [SubBorrowersCounter] IS NULL) OR ([SubBorrowersCounte"& _ 
                "r] = @Original_SubBorrowersCounter)) AND ((@IsNull_FinalEadTotalSum = 1 AND [Fin"& _ 
                "alEadTotalSum] IS NULL) OR ([FinalEadTotalSum] = @Original_FinalEadTotalSum)) AN"& _ 
                "D ((@IsNull_LGD = 1 AND [LGD] IS NULL) OR ([LGD] = @Original_LGD)) AND ((@IsNull"& _ 
                "_PD_EaD_weighted = 1 AND [PD_EaD_weighted] IS NULL) OR ([PD_EaD_weighted] = @Ori"& _ 
                "ginal_PD_EaD_weighted)) AND ((@IsNull_PD_3bps_floor = 1 AND [PD_3bps_floor] IS N"& _ 
                "ULL) OR ([PD_3bps_floor] = @Original_PD_3bps_floor)) AND ((@IsNull_IndicatorOfFl"& _ 
                "oor = 1 AND [IndicatorOfFloor] IS NULL) OR ([IndicatorOfFloor] = @Original_Indic"& _ 
                "atorOfFloor)) AND ((@IsNull_MaturityEADweigthed = 1 AND [MaturityEADweigthed] IS"& _ 
                " NULL) OR ([MaturityEADweigthed] = @Original_MaturityEADweigthed)) AND ((@IsNull"& _ 
                "_R_CoefficientOfColleration = 1 AND [R_CoefficientOfColleration] IS NULL) OR ([R"& _ 
                "_CoefficientOfColleration] = @Original_R_CoefficientOfColleration)) AND ((@IsNul"& _ 
                "l_b_MaturityAdjustment = 1 AND [b_MaturityAdjustment] IS NULL) OR ([b_MaturityAd"& _ 
                "justment] = @Original_b_MaturityAdjustment)) AND ((@IsNull_RW_RiskWeightedExposu"& _ 
                "re = 1 AND [RW_RiskWeightedExposure] IS NULL) OR ([RW_RiskWeightedExposure] = @O"& _ 
                "riginal_RW_RiskWeightedExposure)) AND ((@IsNull_UL_UnexpectedLoss = 1 AND [UL_Un"& _ 
                "expectedLoss] IS NULL) OR ([UL_UnexpectedLoss] = @Original_UL_UnexpectedLoss)) A"& _ 
                "ND ((@IsNull_s_i = 1 AND [s_i] IS NULL) OR ([s_i] = @Original_s_i)) AND ((@IsNul"& _ 
                "l_K_i = 1 AND [K_i] IS NULL) OR ([K_i] = @Original_K_i)) AND ((@IsNull_R_i = 1 A"& _ 
                "ND [R_i] IS NULL) OR ([R_i] = @Original_R_i)) AND ((@IsNull_VLGD_i = 1 AND [VLGD"& _ 
                "_i] IS NULL) OR ([VLGD_i] = @Original_VLGD_i)) AND ((@IsNull_C_i = 1 AND [C_i] I"& _ 
                "S NULL) OR ([C_i] = @Original_C_i)) AND ((@IsNull_GA_n = 1 AND [GA_n] IS NULL) O"& _ 
                "R ([GA_n] = @Original_GA_n)) AND ((@IsNull_RiskDate = 1 AND [RiskDate] IS NULL) "& _ 
                "OR ([RiskDate] = @Original_RiskDate)) AND ((@IsNull_IdDate = 1 AND [IdDate] IS N"& _ 
                "ULL) OR ([IdDate] = @Original_IdDate)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubBorrowersCounter", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubBorrowersCounter", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinalEadTotalSum", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinalEadTotalSum", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD_EaD_weighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD_EaD_weighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD_3bps_floor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD_3bps_floor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IndicatorOfFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndicatorOfFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityEADweigthed", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityEADweigthed", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_CoefficientOfColleration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_CoefficientOfColleration", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_b_MaturityAdjustment", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_b_MaturityAdjustment", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UL_UnexpectedLoss", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UL_UnexpectedLoss", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_s_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_s_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_K_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_K_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VLGD_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VLGD_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_C_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_C_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GA_n", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GA_n", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GA_n", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "GA_n", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ScenarioAnalyze_ConcentrationRiskTBA_Totals] ([ClientGroup], [Client"& _ 
                "GroupName], [SubBorrowersCounter], [FinalEadTotalSum], [LGD], [PD_EaD_weighted],"& _ 
                " [PD_3bps_floor], [IndicatorOfFloor], [MaturityEADweigthed], [R_CoefficientOfCol"& _ 
                "leration], [b_MaturityAdjustment], [RW_RiskWeightedExposure], [UL_UnexpectedLoss"& _ 
                "], [s_i], [K_i], [R_i], [VLGD_i], [C_i], [GA_n], [RiskDate], [IdDate]) VALUES (@"& _ 
                "ClientGroup, @ClientGroupName, @SubBorrowersCounter, @FinalEadTotalSum, @LGD, @P"& _ 
                "D_EaD_weighted, @PD_3bps_floor, @IndicatorOfFloor, @MaturityEADweigthed, @R_Coef"& _ 
                "ficientOfColleration, @b_MaturityAdjustment, @RW_RiskWeightedExposure, @UL_Unexp"& _ 
                "ectedLoss, @s_i, @K_i, @R_i, @VLGD_i, @C_i, @GA_n, @RiskDate, @IdDate)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubBorrowersCounter", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinalEadTotalSum", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD_EaD_weighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD_3bps_floor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndicatorOfFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityEADweigthed", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_CoefficientOfColleration", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@b_MaturityAdjustment", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UL_UnexpectedLoss", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@s_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@K_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VLGD_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GA_n", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "GA_n", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ScenarioAnalyze_ConcentrationRiskTBA_Totals] SET [ClientGroup] = @ClientG"& _ 
                "roup, [ClientGroupName] = @ClientGroupName, [SubBorrowersCounter] = @SubBorrower"& _ 
                "sCounter, [FinalEadTotalSum] = @FinalEadTotalSum, [LGD] = @LGD, [PD_EaD_weighted"& _ 
                "] = @PD_EaD_weighted, [PD_3bps_floor] = @PD_3bps_floor, [IndicatorOfFloor] = @In"& _ 
                "dicatorOfFloor, [MaturityEADweigthed] = @MaturityEADweigthed, [R_CoefficientOfCo"& _ 
                "lleration] = @R_CoefficientOfColleration, [b_MaturityAdjustment] = @b_MaturityAd"& _ 
                "justment, [RW_RiskWeightedExposure] = @RW_RiskWeightedExposure, [UL_UnexpectedLo"& _ 
                "ss] = @UL_UnexpectedLoss, [s_i] = @s_i, [K_i] = @K_i, [R_i] = @R_i, [VLGD_i] = @"& _ 
                "VLGD_i, [C_i] = @C_i, [GA_n] = @GA_n, [RiskDate] = @RiskDate, [IdDate] = @IdDate"& _ 
                " WHERE (([ID] = @Original_ID) AND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS"& _ 
                " NULL) OR ([ClientGroup] = @Original_ClientGroup)) AND ((@IsNull_ClientGroupName"& _ 
                " = 1 AND [ClientGroupName] IS NULL) OR ([ClientGroupName] = @Original_ClientGrou"& _ 
                "pName)) AND ((@IsNull_SubBorrowersCounter = 1 AND [SubBorrowersCounter] IS NULL)"& _ 
                " OR ([SubBorrowersCounter] = @Original_SubBorrowersCounter)) AND ((@IsNull_Final"& _ 
                "EadTotalSum = 1 AND [FinalEadTotalSum] IS NULL) OR ([FinalEadTotalSum] = @Origin"& _ 
                "al_FinalEadTotalSum)) AND ((@IsNull_LGD = 1 AND [LGD] IS NULL) OR ([LGD] = @Orig"& _ 
                "inal_LGD)) AND ((@IsNull_PD_EaD_weighted = 1 AND [PD_EaD_weighted] IS NULL) OR ("& _ 
                "[PD_EaD_weighted] = @Original_PD_EaD_weighted)) AND ((@IsNull_PD_3bps_floor = 1 "& _ 
                "AND [PD_3bps_floor] IS NULL) OR ([PD_3bps_floor] = @Original_PD_3bps_floor)) AND"& _ 
                " ((@IsNull_IndicatorOfFloor = 1 AND [IndicatorOfFloor] IS NULL) OR ([IndicatorOf"& _ 
                "Floor] = @Original_IndicatorOfFloor)) AND ((@IsNull_MaturityEADweigthed = 1 AND "& _ 
                "[MaturityEADweigthed] IS NULL) OR ([MaturityEADweigthed] = @Original_MaturityEAD"& _ 
                "weigthed)) AND ((@IsNull_R_CoefficientOfColleration = 1 AND [R_CoefficientOfColl"& _ 
                "eration] IS NULL) OR ([R_CoefficientOfColleration] = @Original_R_CoefficientOfCo"& _ 
                "lleration)) AND ((@IsNull_b_MaturityAdjustment = 1 AND [b_MaturityAdjustment] IS"& _ 
                " NULL) OR ([b_MaturityAdjustment] = @Original_b_MaturityAdjustment)) AND ((@IsNu"& _ 
                "ll_RW_RiskWeightedExposure = 1 AND [RW_RiskWeightedExposure] IS NULL) OR ([RW_Ri"& _ 
                "skWeightedExposure] = @Original_RW_RiskWeightedExposure)) AND ((@IsNull_UL_Unexp"& _ 
                "ectedLoss = 1 AND [UL_UnexpectedLoss] IS NULL) OR ([UL_UnexpectedLoss] = @Origin"& _ 
                "al_UL_UnexpectedLoss)) AND ((@IsNull_s_i = 1 AND [s_i] IS NULL) OR ([s_i] = @Ori"& _ 
                "ginal_s_i)) AND ((@IsNull_K_i = 1 AND [K_i] IS NULL) OR ([K_i] = @Original_K_i))"& _ 
                " AND ((@IsNull_R_i = 1 AND [R_i] IS NULL) OR ([R_i] = @Original_R_i)) AND ((@IsN"& _ 
                "ull_VLGD_i = 1 AND [VLGD_i] IS NULL) OR ([VLGD_i] = @Original_VLGD_i)) AND ((@Is"& _ 
                "Null_C_i = 1 AND [C_i] IS NULL) OR ([C_i] = @Original_C_i)) AND ((@IsNull_GA_n ="& _ 
                " 1 AND [GA_n] IS NULL) OR ([GA_n] = @Original_GA_n)) AND ((@IsNull_RiskDate = 1 "& _ 
                "AND [RiskDate] IS NULL) OR ([RiskDate] = @Original_RiskDate)) AND ((@IsNull_IdDa"& _ 
                "te = 1 AND [IdDate] IS NULL) OR ([IdDate] = @Original_IdDate)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubBorrowersCounter", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinalEadTotalSum", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD_EaD_weighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD_3bps_floor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndicatorOfFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityEADweigthed", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_CoefficientOfColleration", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@b_MaturityAdjustment", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UL_UnexpectedLoss", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@s_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@K_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VLGD_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GA_n", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "GA_n", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubBorrowersCounter", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubBorrowersCounter", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinalEadTotalSum", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinalEadTotalSum", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD_EaD_weighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD_EaD_weighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD_3bps_floor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD_3bps_floor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IndicatorOfFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndicatorOfFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityEADweigthed", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityEADweigthed", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_CoefficientOfColleration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_CoefficientOfColleration", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_b_MaturityAdjustment", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_b_MaturityAdjustment", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UL_UnexpectedLoss", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UL_UnexpectedLoss", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_s_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_s_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_K_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_K_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VLGD_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VLGD_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_C_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_C_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GA_n", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GA_n", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GA_n", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "GA_n", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, ClientGroup, ClientGroupName, SubBorrowersCounter, FinalEadTota"& _ 
                "lSum, LGD, PD_EaD_weighted, PD_3bps_floor, IndicatorOfFloor, MaturityEADweigthed"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         R_CoefficientOfColleration, b_MaturityAdjustment, R"& _ 
                "W_RiskWeightedExposure, UL_UnexpectedLoss, s_i, K_i, R_i, VLGD_i, C_i, GA_n, Ris"& _ 
                "kDate, IdDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ScenarioAnalyze_ConcentrationRiskTBA_Totals"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable = New ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_TotalsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ScenarioAnalyze_ConcentrationRiskTBA_Totals")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_SubBorrowersCounter As Global.System.Nullable(Of Double),  _
                    ByVal Original_FinalEadTotalSum As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGD As Global.System.Nullable(Of Double),  _
                    ByVal Original_PD_EaD_weighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_PD_3bps_floor As Global.System.Nullable(Of Double),  _
                    ByVal Original_IndicatorOfFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_MaturityEADweigthed As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_CoefficientOfColleration As Global.System.Nullable(Of Double),  _
                    ByVal Original_b_MaturityAdjustment As Global.System.Nullable(Of Double),  _
                    ByVal Original_RW_RiskWeightedExposure As Global.System.Nullable(Of Double),  _
                    ByVal Original_UL_UnexpectedLoss As Global.System.Nullable(Of Double),  _
                    ByVal Original_s_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_K_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_VLGD_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_C_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_GA_n As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdDate As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_SubBorrowersCounter.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_SubBorrowersCounter.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_FinalEadTotalSum.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_FinalEadTotalSum.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_LGD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_LGD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_PD_EaD_weighted.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PD_EaD_weighted.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_PD_3bps_floor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_PD_3bps_floor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_IndicatorOfFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_IndicatorOfFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_MaturityEADweigthed.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_MaturityEADweigthed.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_R_CoefficientOfColleration.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_R_CoefficientOfColleration.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_b_MaturityAdjustment.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_b_MaturityAdjustment.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_RW_RiskWeightedExposure.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_RW_RiskWeightedExposure.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_UL_UnexpectedLoss.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_UL_UnexpectedLoss.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_s_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_s_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_K_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_K_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_R_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_R_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_VLGD_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_VLGD_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_C_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_C_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_GA_n.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_GA_n.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_IdDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_IdDate.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal SubBorrowersCounter As Global.System.Nullable(Of Double),  _
                    ByVal FinalEadTotalSum As Global.System.Nullable(Of Double),  _
                    ByVal LGD As Global.System.Nullable(Of Double),  _
                    ByVal PD_EaD_weighted As Global.System.Nullable(Of Double),  _
                    ByVal PD_3bps_floor As Global.System.Nullable(Of Double),  _
                    ByVal IndicatorOfFloor As Global.System.Nullable(Of Double),  _
                    ByVal MaturityEADweigthed As Global.System.Nullable(Of Double),  _
                    ByVal R_CoefficientOfColleration As Global.System.Nullable(Of Double),  _
                    ByVal b_MaturityAdjustment As Global.System.Nullable(Of Double),  _
                    ByVal RW_RiskWeightedExposure As Global.System.Nullable(Of Double),  _
                    ByVal UL_UnexpectedLoss As Global.System.Nullable(Of Double),  _
                    ByVal s_i As Global.System.Nullable(Of Double),  _
                    ByVal K_i As Global.System.Nullable(Of Double),  _
                    ByVal R_i As Global.System.Nullable(Of Double),  _
                    ByVal VLGD_i As Global.System.Nullable(Of Double),  _
                    ByVal C_i As Global.System.Nullable(Of Double),  _
                    ByVal GA_n As Global.System.Nullable(Of Decimal),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdDate As Global.System.Nullable(Of Integer)) As Integer
            If (ClientGroup Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ClientGroupName,String)
            End If
            If (SubBorrowersCounter.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SubBorrowersCounter.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FinalEadTotalSum.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FinalEadTotalSum.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LGD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LGD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PD_EaD_weighted.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PD_EaD_weighted.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PD_3bps_floor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PD_3bps_floor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IndicatorOfFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(IndicatorOfFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MaturityEADweigthed.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(MaturityEADweigthed.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (R_CoefficientOfColleration.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(R_CoefficientOfColleration.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (b_MaturityAdjustment.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(b_MaturityAdjustment.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (RW_RiskWeightedExposure.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(RW_RiskWeightedExposure.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (UL_UnexpectedLoss.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(UL_UnexpectedLoss.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (s_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(s_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (K_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(K_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (R_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(R_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (VLGD_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(VLGD_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (C_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(C_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (GA_n.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(GA_n.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (IdDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(IdDate.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal SubBorrowersCounter As Global.System.Nullable(Of Double),  _
                    ByVal FinalEadTotalSum As Global.System.Nullable(Of Double),  _
                    ByVal LGD As Global.System.Nullable(Of Double),  _
                    ByVal PD_EaD_weighted As Global.System.Nullable(Of Double),  _
                    ByVal PD_3bps_floor As Global.System.Nullable(Of Double),  _
                    ByVal IndicatorOfFloor As Global.System.Nullable(Of Double),  _
                    ByVal MaturityEADweigthed As Global.System.Nullable(Of Double),  _
                    ByVal R_CoefficientOfColleration As Global.System.Nullable(Of Double),  _
                    ByVal b_MaturityAdjustment As Global.System.Nullable(Of Double),  _
                    ByVal RW_RiskWeightedExposure As Global.System.Nullable(Of Double),  _
                    ByVal UL_UnexpectedLoss As Global.System.Nullable(Of Double),  _
                    ByVal s_i As Global.System.Nullable(Of Double),  _
                    ByVal K_i As Global.System.Nullable(Of Double),  _
                    ByVal R_i As Global.System.Nullable(Of Double),  _
                    ByVal VLGD_i As Global.System.Nullable(Of Double),  _
                    ByVal C_i As Global.System.Nullable(Of Double),  _
                    ByVal GA_n As Global.System.Nullable(Of Decimal),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdDate As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_SubBorrowersCounter As Global.System.Nullable(Of Double),  _
                    ByVal Original_FinalEadTotalSum As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGD As Global.System.Nullable(Of Double),  _
                    ByVal Original_PD_EaD_weighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_PD_3bps_floor As Global.System.Nullable(Of Double),  _
                    ByVal Original_IndicatorOfFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_MaturityEADweigthed As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_CoefficientOfColleration As Global.System.Nullable(Of Double),  _
                    ByVal Original_b_MaturityAdjustment As Global.System.Nullable(Of Double),  _
                    ByVal Original_RW_RiskWeightedExposure As Global.System.Nullable(Of Double),  _
                    ByVal Original_UL_UnexpectedLoss As Global.System.Nullable(Of Double),  _
                    ByVal Original_s_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_K_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_VLGD_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_C_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_GA_n As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdDate As Global.System.Nullable(Of Integer)) As Integer
            If (ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ClientGroupName,String)
            End If
            If (SubBorrowersCounter.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SubBorrowersCounter.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FinalEadTotalSum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FinalEadTotalSum.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LGD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(LGD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PD_EaD_weighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PD_EaD_weighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PD_3bps_floor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PD_3bps_floor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IndicatorOfFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(IndicatorOfFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MaturityEADweigthed.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(MaturityEADweigthed.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (R_CoefficientOfColleration.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(R_CoefficientOfColleration.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (b_MaturityAdjustment.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(b_MaturityAdjustment.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (RW_RiskWeightedExposure.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(RW_RiskWeightedExposure.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (UL_UnexpectedLoss.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(UL_UnexpectedLoss.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (s_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(s_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (K_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(K_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (R_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(R_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (VLGD_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(VLGD_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (C_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(C_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (GA_n.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(GA_n.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (IdDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(IdDate.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_ID,Integer)
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_SubBorrowersCounter.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_SubBorrowersCounter.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_FinalEadTotalSum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_FinalEadTotalSum.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_LGD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_LGD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_PD_EaD_weighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_PD_EaD_weighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_PD_3bps_floor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_PD_3bps_floor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_IndicatorOfFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_IndicatorOfFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_MaturityEADweigthed.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_MaturityEADweigthed.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_R_CoefficientOfColleration.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_R_CoefficientOfColleration.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_b_MaturityAdjustment.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_b_MaturityAdjustment.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_RW_RiskWeightedExposure.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_RW_RiskWeightedExposure.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_UL_UnexpectedLoss.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_UL_UnexpectedLoss.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_s_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_s_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_K_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_K_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_R_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_R_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_VLGD_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_VLGD_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_C_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_C_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_GA_n.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_GA_n.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_IdDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_IdDate.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ScenarioAnalyze_GeneralStressTest_DateTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ScenarioAnalyze_GeneralStressTest_Date"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("RiskDate", "RiskDate")
            tableMapping.ColumnMappings.Add("LGD_mod", "LGD_mod")
            tableMapping.ColumnMappings.Add("R_Colleration_Mod", "R_Colleration_Mod")
            tableMapping.ColumnMappings.Add("ObligorRate_Mod", "ObligorRate_Mod")
            tableMapping.ColumnMappings.Add("LevelOfConfidence", "LevelOfConfidence")
            tableMapping.ColumnMappings.Add("SumEL", "SumEL")
            tableMapping.ColumnMappings.Add("SumUL", "SumUL")
            tableMapping.ColumnMappings.Add("nu_Value", "nu_Value")
            tableMapping.ColumnMappings.Add("p_alpha_Value", "p_alpha_Value")
            tableMapping.ColumnMappings.Add("b_beta_value", "b_beta_value")
            tableMapping.ColumnMappings.Add("Gamma_inv", "Gamma_inv")
            tableMapping.ColumnMappings.Add("Delta", "Delta")
            tableMapping.ColumnMappings.Add("K_Value", "K_Value")
            tableMapping.ColumnMappings.Add("SumGA_rel", "SumGA_rel")
            tableMapping.ColumnMappings.Add("SumGA_Total", "SumGA_Total")
            tableMapping.ColumnMappings.Add("IdDate", "IdDate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ScenarioAnalyze_GeneralStressTest_Date] WHERE (([ID] = @Original_ID)"& _ 
                " AND ([RiskDate] = @Original_RiskDate) AND ((@IsNull_LGD_mod = 1 AND [LGD_mod] I"& _ 
                "S NULL) OR ([LGD_mod] = @Original_LGD_mod)) AND ((@IsNull_R_Colleration_Mod = 1 "& _ 
                "AND [R_Colleration_Mod] IS NULL) OR ([R_Colleration_Mod] = @Original_R_Collerati"& _ 
                "on_Mod)) AND ((@IsNull_ObligorRate_Mod = 1 AND [ObligorRate_Mod] IS NULL) OR ([O"& _ 
                "bligorRate_Mod] = @Original_ObligorRate_Mod)) AND ((@IsNull_LevelOfConfidence = "& _ 
                "1 AND [LevelOfConfidence] IS NULL) OR ([LevelOfConfidence] = @Original_LevelOfCo"& _ 
                "nfidence)) AND ((@IsNull_SumEL = 1 AND [SumEL] IS NULL) OR ([SumEL] = @Original_"& _ 
                "SumEL)) AND ((@IsNull_SumUL = 1 AND [SumUL] IS NULL) OR ([SumUL] = @Original_Sum"& _ 
                "UL)) AND ((@IsNull_nu_Value = 1 AND [nu_Value] IS NULL) OR ([nu_Value] = @Origin"& _ 
                "al_nu_Value)) AND ((@IsNull_p_alpha_Value = 1 AND [p_alpha_Value] IS NULL) OR (["& _ 
                "p_alpha_Value] = @Original_p_alpha_Value)) AND ((@IsNull_b_beta_value = 1 AND [b"& _ 
                "_beta_value] IS NULL) OR ([b_beta_value] = @Original_b_beta_value)) AND ((@IsNul"& _ 
                "l_Gamma_inv = 1 AND [Gamma_inv] IS NULL) OR ([Gamma_inv] = @Original_Gamma_inv))"& _ 
                " AND ((@IsNull_Delta = 1 AND [Delta] IS NULL) OR ([Delta] = @Original_Delta)) AN"& _ 
                "D ((@IsNull_K_Value = 1 AND [K_Value] IS NULL) OR ([K_Value] = @Original_K_Value"& _ 
                ")) AND ((@IsNull_SumGA_rel = 1 AND [SumGA_rel] IS NULL) OR ([SumGA_rel] = @Origi"& _ 
                "nal_SumGA_rel)) AND ((@IsNull_SumGA_Total = 1 AND [SumGA_Total] IS NULL) OR ([Su"& _ 
                "mGA_Total] = @Original_SumGA_Total)) AND ((@IsNull_IdDate = 1 AND [IdDate] IS NU"& _ 
                "LL) OR ([IdDate] = @Original_IdDate)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGD_mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGD_mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_Colleration_Mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_Colleration_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ObligorRate_Mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ObligorRate_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LevelOfConfidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LevelOfConfidence", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumEL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumEL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumUL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumUL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_nu_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_nu_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_p_alpha_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_p_alpha_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_b_beta_value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_b_beta_value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Gamma_inv", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Gamma_inv", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Delta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Delta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_K_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_K_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_rel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_rel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_rel", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "SumGA_rel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_Total", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_Total", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_Total", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SumGA_Total", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ScenarioAnalyze_GeneralStressTest_Date] ([RiskDate], [LGD_mod], [R_C"& _ 
                "olleration_Mod], [ObligorRate_Mod], [LevelOfConfidence], [SumEL], [SumUL], [nu_V"& _ 
                "alue], [p_alpha_Value], [b_beta_value], [Gamma_inv], [Delta], [K_Value], [SumGA_"& _ 
                "rel], [SumGA_Total], [IdDate]) VALUES (@RiskDate, @LGD_mod, @R_Colleration_Mod, "& _ 
                "@ObligorRate_Mod, @LevelOfConfidence, @SumEL, @SumUL, @nu_Value, @p_alpha_Value,"& _ 
                " @b_beta_value, @Gamma_inv, @Delta, @K_Value, @SumGA_rel, @SumGA_Total, @IdDate)"& _ 
                ""
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGD_mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Colleration_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ObligorRate_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LevelOfConfidence", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumEL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumUL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@nu_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p_alpha_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@b_beta_value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gamma_inv", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Delta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@K_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_rel", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "SumGA_rel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_Total", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SumGA_Total", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ScenarioAnalyze_GeneralStressTest_Date] SET [RiskDate] = @RiskDate, [LGD_"& _ 
                "mod] = @LGD_mod, [R_Colleration_Mod] = @R_Colleration_Mod, [ObligorRate_Mod] = @"& _ 
                "ObligorRate_Mod, [LevelOfConfidence] = @LevelOfConfidence, [SumEL] = @SumEL, [Su"& _ 
                "mUL] = @SumUL, [nu_Value] = @nu_Value, [p_alpha_Value] = @p_alpha_Value, [b_beta"& _ 
                "_value] = @b_beta_value, [Gamma_inv] = @Gamma_inv, [Delta] = @Delta, [K_Value] ="& _ 
                " @K_Value, [SumGA_rel] = @SumGA_rel, [SumGA_Total] = @SumGA_Total, [IdDate] = @I"& _ 
                "dDate WHERE (([ID] = @Original_ID) AND ([RiskDate] = @Original_RiskDate) AND ((@"& _ 
                "IsNull_LGD_mod = 1 AND [LGD_mod] IS NULL) OR ([LGD_mod] = @Original_LGD_mod)) AN"& _ 
                "D ((@IsNull_R_Colleration_Mod = 1 AND [R_Colleration_Mod] IS NULL) OR ([R_Coller"& _ 
                "ation_Mod] = @Original_R_Colleration_Mod)) AND ((@IsNull_ObligorRate_Mod = 1 AND"& _ 
                " [ObligorRate_Mod] IS NULL) OR ([ObligorRate_Mod] = @Original_ObligorRate_Mod)) "& _ 
                "AND ((@IsNull_LevelOfConfidence = 1 AND [LevelOfConfidence] IS NULL) OR ([LevelO"& _ 
                "fConfidence] = @Original_LevelOfConfidence)) AND ((@IsNull_SumEL = 1 AND [SumEL]"& _ 
                " IS NULL) OR ([SumEL] = @Original_SumEL)) AND ((@IsNull_SumUL = 1 AND [SumUL] IS"& _ 
                " NULL) OR ([SumUL] = @Original_SumUL)) AND ((@IsNull_nu_Value = 1 AND [nu_Value]"& _ 
                " IS NULL) OR ([nu_Value] = @Original_nu_Value)) AND ((@IsNull_p_alpha_Value = 1 "& _ 
                "AND [p_alpha_Value] IS NULL) OR ([p_alpha_Value] = @Original_p_alpha_Value)) AND"& _ 
                " ((@IsNull_b_beta_value = 1 AND [b_beta_value] IS NULL) OR ([b_beta_value] = @Or"& _ 
                "iginal_b_beta_value)) AND ((@IsNull_Gamma_inv = 1 AND [Gamma_inv] IS NULL) OR (["& _ 
                "Gamma_inv] = @Original_Gamma_inv)) AND ((@IsNull_Delta = 1 AND [Delta] IS NULL) "& _ 
                "OR ([Delta] = @Original_Delta)) AND ((@IsNull_K_Value = 1 AND [K_Value] IS NULL)"& _ 
                " OR ([K_Value] = @Original_K_Value)) AND ((@IsNull_SumGA_rel = 1 AND [SumGA_rel]"& _ 
                " IS NULL) OR ([SumGA_rel] = @Original_SumGA_rel)) AND ((@IsNull_SumGA_Total = 1 "& _ 
                "AND [SumGA_Total] IS NULL) OR ([SumGA_Total] = @Original_SumGA_Total)) AND ((@Is"& _ 
                "Null_IdDate = 1 AND [IdDate] IS NULL) OR ([IdDate] = @Original_IdDate)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGD_mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_Colleration_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ObligorRate_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LevelOfConfidence", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumEL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumUL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@nu_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p_alpha_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@b_beta_value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gamma_inv", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Delta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@K_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_rel", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "SumGA_rel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SumGA_Total", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SumGA_Total", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGD_mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGD_mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD_mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_Colleration_Mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_Colleration_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_Colleration_Mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ObligorRate_Mod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ObligorRate_Mod", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ObligorRate_Mod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LevelOfConfidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LevelOfConfidence", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LevelOfConfidence", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumEL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumEL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumEL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumUL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumUL", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumUL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_nu_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_nu_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nu_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_p_alpha_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_p_alpha_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "p_alpha_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_b_beta_value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_b_beta_value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_beta_value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Gamma_inv", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Gamma_inv", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gamma_inv", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Delta", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Delta", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Delta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_K_Value", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_K_Value", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_Value", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_rel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_rel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_rel", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "SumGA_rel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SumGA_Total", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SumGA_Total", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SumGA_Total", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "SumGA_Total", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, RiskDate, LGD_mod, R_Colleration_Mod, ObligorRate_Mod, LevelOfC"& _ 
                "onfidence, SumEL, SumUL, nu_Value, p_alpha_Value, b_beta_value, Gamma_inv, Delta"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         K_Value, SumGA_rel, SumGA_Total, IdDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM      "& _ 
                "      ScenarioAnalyze_GeneralStressTest_Date"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DateDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DateDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DateDataTable = New ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DateDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DateDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ScenarioAnalyze_GeneralStressTest_Date")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_RiskDate As Date,  _
                    ByVal Original_LGD_mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_Colleration_Mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_ObligorRate_Mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_LevelOfConfidence As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumEL As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumUL As Global.System.Nullable(Of Double),  _
                    ByVal Original_nu_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_p_alpha_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_b_beta_value As Global.System.Nullable(Of Double),  _
                    ByVal Original_Gamma_inv As Global.System.Nullable(Of Double),  _
                    ByVal Original_Delta As Global.System.Nullable(Of Double),  _
                    ByVal Original_K_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumGA_rel As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SumGA_Total As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IdDate As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_RiskDate,Date)
            If (Original_LGD_mod.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_LGD_mod.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_R_Colleration_Mod.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_R_Colleration_Mod.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_ObligorRate_Mod.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_ObligorRate_Mod.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_LevelOfConfidence.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_LevelOfConfidence.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_SumEL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_SumEL.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_SumUL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_SumUL.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_nu_Value.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_nu_Value.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_p_alpha_Value.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_p_alpha_Value.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_b_beta_value.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_b_beta_value.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_Gamma_inv.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_Gamma_inv.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_Delta.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_Delta.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_K_Value.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_K_Value.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_rel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_SumGA_rel.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_Total.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_SumGA_Total.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_IdDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_IdDate.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal RiskDate As Date,  _
                    ByVal LGD_mod As Global.System.Nullable(Of Double),  _
                    ByVal R_Colleration_Mod As Global.System.Nullable(Of Double),  _
                    ByVal ObligorRate_Mod As Global.System.Nullable(Of Double),  _
                    ByVal LevelOfConfidence As Global.System.Nullable(Of Double),  _
                    ByVal SumEL As Global.System.Nullable(Of Double),  _
                    ByVal SumUL As Global.System.Nullable(Of Double),  _
                    ByVal nu_Value As Global.System.Nullable(Of Double),  _
                    ByVal p_alpha_Value As Global.System.Nullable(Of Double),  _
                    ByVal b_beta_value As Global.System.Nullable(Of Double),  _
                    ByVal Gamma_inv As Global.System.Nullable(Of Double),  _
                    ByVal Delta As Global.System.Nullable(Of Double),  _
                    ByVal K_Value As Global.System.Nullable(Of Double),  _
                    ByVal SumGA_rel As Global.System.Nullable(Of Decimal),  _
                    ByVal SumGA_Total As Global.System.Nullable(Of Decimal),  _
                    ByVal IdDate As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(RiskDate,Date)
            If (LGD_mod.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(LGD_mod.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (R_Colleration_Mod.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(R_Colleration_Mod.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ObligorRate_Mod.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ObligorRate_Mod.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LevelOfConfidence.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LevelOfConfidence.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SumEL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SumEL.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SumUL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SumUL.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (nu_Value.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(nu_Value.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p_alpha_Value.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p_alpha_Value.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (b_beta_value.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(b_beta_value.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Gamma_inv.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Gamma_inv.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Delta.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Delta.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (K_Value.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(K_Value.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SumGA_rel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SumGA_rel.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (SumGA_Total.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(SumGA_Total.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (IdDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(IdDate.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RiskDate As Date,  _
                    ByVal LGD_mod As Global.System.Nullable(Of Double),  _
                    ByVal R_Colleration_Mod As Global.System.Nullable(Of Double),  _
                    ByVal ObligorRate_Mod As Global.System.Nullable(Of Double),  _
                    ByVal LevelOfConfidence As Global.System.Nullable(Of Double),  _
                    ByVal SumEL As Global.System.Nullable(Of Double),  _
                    ByVal SumUL As Global.System.Nullable(Of Double),  _
                    ByVal nu_Value As Global.System.Nullable(Of Double),  _
                    ByVal p_alpha_Value As Global.System.Nullable(Of Double),  _
                    ByVal b_beta_value As Global.System.Nullable(Of Double),  _
                    ByVal Gamma_inv As Global.System.Nullable(Of Double),  _
                    ByVal Delta As Global.System.Nullable(Of Double),  _
                    ByVal K_Value As Global.System.Nullable(Of Double),  _
                    ByVal SumGA_rel As Global.System.Nullable(Of Decimal),  _
                    ByVal SumGA_Total As Global.System.Nullable(Of Decimal),  _
                    ByVal IdDate As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_RiskDate As Date,  _
                    ByVal Original_LGD_mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_Colleration_Mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_ObligorRate_Mod As Global.System.Nullable(Of Double),  _
                    ByVal Original_LevelOfConfidence As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumEL As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumUL As Global.System.Nullable(Of Double),  _
                    ByVal Original_nu_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_p_alpha_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_b_beta_value As Global.System.Nullable(Of Double),  _
                    ByVal Original_Gamma_inv As Global.System.Nullable(Of Double),  _
                    ByVal Original_Delta As Global.System.Nullable(Of Double),  _
                    ByVal Original_K_Value As Global.System.Nullable(Of Double),  _
                    ByVal Original_SumGA_rel As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SumGA_Total As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IdDate As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RiskDate,Date)
            If (LGD_mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LGD_mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (R_Colleration_Mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(R_Colleration_Mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ObligorRate_Mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ObligorRate_Mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LevelOfConfidence.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(LevelOfConfidence.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SumEL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SumEL.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SumUL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(SumUL.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (nu_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(nu_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p_alpha_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p_alpha_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (b_beta_value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(b_beta_value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Gamma_inv.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Gamma_inv.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Delta.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Delta.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (K_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(K_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SumGA_rel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SumGA_rel.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (SumGA_Total.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(SumGA_Total.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (IdDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(IdDate.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_RiskDate,Date)
            If (Original_LGD_mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_LGD_mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_R_Colleration_Mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_R_Colleration_Mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_ObligorRate_Mod.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ObligorRate_Mod.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_LevelOfConfidence.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_LevelOfConfidence.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_SumEL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_SumEL.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_SumUL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_SumUL.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_nu_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_nu_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_p_alpha_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_p_alpha_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_b_beta_value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_b_beta_value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_Gamma_inv.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_Gamma_inv.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_Delta.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_Delta.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_K_Value.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_K_Value.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_rel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_SumGA_rel.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_SumGA_Total.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_SumGA_Total.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_IdDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_IdDate.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ScenarioAnalyze_GeneralStressTest_DetailsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ScenarioAnalyze_GeneralStressTest_Details"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Obligor Rate", "Obligor Rate")
            tableMapping.ColumnMappings.Add("Contract Type", "Contract Type")
            tableMapping.ColumnMappings.Add("Product Type", "Product Type")
            tableMapping.ColumnMappings.Add("GL Master / Account Type", "GL Master / Account Type")
            tableMapping.ColumnMappings.Add("Counterparty/Issuer/Collateral Name", "Counterparty/Issuer/Collateral Name")
            tableMapping.ColumnMappings.Add("Client No", "Client No")
            tableMapping.ColumnMappings.Add("Contract Collateral ID", "Contract Collateral ID")
            tableMapping.ColumnMappings.Add("Maturity Date", "Maturity Date")
            tableMapping.ColumnMappings.Add("Remaining Year(s) to Maturity", "Remaining Year(s) to Maturity")
            tableMapping.ColumnMappings.Add("Org Ccy", "Org Ccy")
            tableMapping.ColumnMappings.Add("Credit Outstanding (Org Ccy)", "Credit Outstanding (Org Ccy)")
            tableMapping.ColumnMappings.Add("Credit Outstanding (EUR Equ)", "Credit Outstanding (EUR Equ)")
            tableMapping.ColumnMappings.Add("NetCreditOutstandingAmountEUR", "NetCreditOutstandingAmountEUR")
            tableMapping.ColumnMappings.Add("InternalInfo", "InternalInfo")
            tableMapping.ColumnMappings.Add("PD", "PD")
            tableMapping.ColumnMappings.Add("(1-ER)", "(1-ER)")
            tableMapping.ColumnMappings.Add("Credit Risk Amount(EUR Equ)", "Credit Risk Amount(EUR Equ)")
            tableMapping.ColumnMappings.Add("NetCredit Risk Amount(EUR Equ)", "NetCredit Risk Amount(EUR Equ)")
            tableMapping.ColumnMappings.Add("(1-ER_45)", "(1-ER_45)")
            tableMapping.ColumnMappings.Add("CreditRiskAmountEUREquER45", "CreditRiskAmountEUREquER45")
            tableMapping.ColumnMappings.Add("NetCreditRiskAmountEUREquER45", "NetCreditRiskAmountEUREquER45")
            tableMapping.ColumnMappings.Add("CoreDefinition", "CoreDefinition")
            tableMapping.ColumnMappings.Add("ClientGroup", "ClientGroup")
            tableMapping.ColumnMappings.Add("ClientGroupName", "ClientGroupName")
            tableMapping.ColumnMappings.Add("MaturityWithoutCapFloor", "MaturityWithoutCapFloor")
            tableMapping.ColumnMappings.Add("EaDweigthedMaturityWithoutCapFloor", "EaDweigthedMaturityWithoutCapFloor")
            tableMapping.ColumnMappings.Add("PDxFinalEaD", "PDxFinalEaD")
            tableMapping.ColumnMappings.Add("LGDfinalEaDweighted", "LGDfinalEaDweighted")
            tableMapping.ColumnMappings.Add("RiskDate", "RiskDate")
            tableMapping.ColumnMappings.Add("IdClientGroup", "IdClientGroup")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ScenarioAnalyze_GeneralStressTest_Details] WHERE (([ID] = @Original_"& _ 
                "ID) AND ((@IsNull_Obligor_Rate = 1 AND [Obligor Rate] IS NULL) OR ([Obligor Rate"& _ 
                "] = @Original_Obligor_Rate)) AND ((@IsNull_Contract_Type = 1 AND [Contract Type]"& _ 
                " IS NULL) OR ([Contract Type] = @Original_Contract_Type)) AND ((@IsNull_Product_"& _ 
                "Type = 1 AND [Product Type] IS NULL) OR ([Product Type] = @Original_Product_Type"& _ 
                ")) AND ((@p3 = 1 AND [GL Master / Account Type] IS NULL) OR ([GL Master / Accoun"& _ 
                "t Type] = @p2)) AND ((@p6 = 1 AND [Counterparty/Issuer/Collateral Name] IS NULL)"& _ 
                " OR ([Counterparty/Issuer/Collateral Name] = @p5)) AND ((@IsNull_Client_No = 1 A"& _ 
                "ND [Client No] IS NULL) OR ([Client No] = @Original_Client_No)) AND ((@IsNull_Co"& _ 
                "ntract_Collateral_ID = 1 AND [Contract Collateral ID] IS NULL) OR ([Contract Col"& _ 
                "lateral ID] = @Original_Contract_Collateral_ID)) AND ((@IsNull_Maturity_Date = 1"& _ 
                " AND [Maturity Date] IS NULL) OR ([Maturity Date] = @Original_Maturity_Date)) AN"& _ 
                "D ((@p9 = 1 AND [Remaining Year(s) to Maturity] IS NULL) OR ([Remaining Year(s) "& _ 
                "to Maturity] = @p8)) AND ((@IsNull_Org_Ccy = 1 AND [Org Ccy] IS NULL) OR ([Org C"& _ 
                "cy] = @Original_Org_Ccy)) AND ((@p12 = 1 AND [Credit Outstanding (Org Ccy)] IS N"& _ 
                "ULL) OR ([Credit Outstanding (Org Ccy)] = @p11)) AND ((@p15 = 1 AND [Credit Outs"& _ 
                "tanding (EUR Equ)] IS NULL) OR ([Credit Outstanding (EUR Equ)] = @p14)) AND ((@I"& _ 
                "sNull_NetCreditOutstandingAmountEUR = 1 AND [NetCreditOutstandingAmountEUR] IS N"& _ 
                "ULL) OR ([NetCreditOutstandingAmountEUR] = @Original_NetCreditOutstandingAmountE"& _ 
                "UR)) AND ((@IsNull_InternalInfo = 1 AND [InternalInfo] IS NULL) OR ([InternalInf"& _ 
                "o] = @Original_InternalInfo)) AND ((@IsNull_PD = 1 AND [PD] IS NULL) OR ([PD] = "& _ 
                "@Original_PD)) AND ((@p18 = 1 AND [(1-ER)] IS NULL) OR ([(1-ER)] = @p17)) AND (("& _ 
                "@p21 = 1 AND [Credit Risk Amount(EUR Equ)] IS NULL) OR ([Credit Risk Amount(EUR "& _ 
                "Equ)] = @p20)) AND ((@p24 = 1 AND [NetCredit Risk Amount(EUR Equ)] IS NULL) OR ("& _ 
                "[NetCredit Risk Amount(EUR Equ)] = @p23)) AND ((@p27 = 1 AND [(1-ER_45)] IS NULL"& _ 
                ") OR ([(1-ER_45)] = @p26)) AND ((@IsNull_CreditRiskAmountEUREquER45 = 1 AND [Cre"& _ 
                "ditRiskAmountEUREquER45] IS NULL) OR ([CreditRiskAmountEUREquER45] = @Original_C"& _ 
                "reditRiskAmountEUREquER45)) AND ((@IsNull_NetCreditRiskAmountEUREquER45 = 1 AND "& _ 
                "[NetCreditRiskAmountEUREquER45] IS NULL) OR ([NetCreditRiskAmountEUREquER45] = @"& _ 
                "Original_NetCreditRiskAmountEUREquER45)) AND ((@IsNull_CoreDefinition = 1 AND [C"& _ 
                "oreDefinition] IS NULL) OR ([CoreDefinition] = @Original_CoreDefinition)) AND (("& _ 
                "@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) OR ([ClientGroup] = @Original"& _ 
                "_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AND [ClientGroupName] IS NULL) "& _ 
                "OR ([ClientGroupName] = @Original_ClientGroupName)) AND ((@IsNull_MaturityWithou"& _ 
                "tCapFloor = 1 AND [MaturityWithoutCapFloor] IS NULL) OR ([MaturityWithoutCapFloo"& _ 
                "r] = @Original_MaturityWithoutCapFloor)) AND ((@IsNull_EaDweigthedMaturityWithou"& _ 
                "tCapFloor = 1 AND [EaDweigthedMaturityWithoutCapFloor] IS NULL) OR ([EaDweigthed"& _ 
                "MaturityWithoutCapFloor] = @Original_EaDweigthedMaturityWithoutCapFloor)) AND (("& _ 
                "@IsNull_PDxFinalEaD = 1 AND [PDxFinalEaD] IS NULL) OR ([PDxFinalEaD] = @Original"& _ 
                "_PDxFinalEaD)) AND ((@IsNull_LGDfinalEaDweighted = 1 AND [LGDfinalEaDweighted] I"& _ 
                "S NULL) OR ([LGDfinalEaDweighted] = @Original_LGDfinalEaDweighted)) AND ((@IsNul"& _ 
                "l_RiskDate = 1 AND [RiskDate] IS NULL) OR ([RiskDate] = @Original_RiskDate)) AND"& _ 
                " ((@IsNull_IdClientGroup = 1 AND [IdClientGroup] IS NULL) OR ([IdClientGroup] = "& _ 
                "@Original_IdClientGroup)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obligor_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Product_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Collateral_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Maturity_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Org_Ccy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InternalInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p18", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p17", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p20", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p24", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p23", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p27", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p26", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CoreDefinition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PDxFinalEaD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ScenarioAnalyze_GeneralStressTest_Details] ([Obligor Rate], [Contrac"& _ 
                "t Type], [Product Type], [GL Master / Account Type], [Counterparty/Issuer/Collat"& _ 
                "eral Name], [Client No], [Contract Collateral ID], [Maturity Date], [Remaining Y"& _ 
                "ear(s) to Maturity], [Org Ccy], [Credit Outstanding (Org Ccy)], [Credit Outstand"& _ 
                "ing (EUR Equ)], [NetCreditOutstandingAmountEUR], [InternalInfo], [PD], [(1-ER)],"& _ 
                " [Credit Risk Amount(EUR Equ)], [NetCredit Risk Amount(EUR Equ)], [(1-ER_45)], ["& _ 
                "CreditRiskAmountEUREquER45], [NetCreditRiskAmountEUREquER45], [CoreDefinition], "& _ 
                "[ClientGroup], [ClientGroupName], [MaturityWithoutCapFloor], [EaDweigthedMaturit"& _ 
                "yWithoutCapFloor], [PDxFinalEaD], [LGDfinalEaDweighted], [RiskDate], [IdClientGr"& _ 
                "oup]) VALUES (@Obligor_Rate, @Contract_Type, @Product_Type, @p1, @p4, @Client_No"& _ 
                ", @Contract_Collateral_ID, @Maturity_Date, @p7, @Org_Ccy, @p10, @p13, @NetCredit"& _ 
                "OutstandingAmountEUR, @InternalInfo, @PD, @p16, @p19, @p22, @p25, @CreditRiskAmo"& _ 
                "untEUREquER45, @NetCreditRiskAmountEUREquER45, @CoreDefinition, @ClientGroup, @C"& _ 
                "lientGroupName, @MaturityWithoutCapFloor, @EaDweigthedMaturityWithoutCapFloor, @"& _ 
                "PDxFinalEaD, @LGDfinalEaDweighted, @RiskDate, @IdClientGroup)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ScenarioAnalyze_GeneralStressTest_Details] SET [Obligor Rate] = @Obligor_"& _ 
                "Rate, [Contract Type] = @Contract_Type, [Product Type] = @Product_Type, [GL Mast"& _ 
                "er / Account Type] = @p1, [Counterparty/Issuer/Collateral Name] = @p4, [Client N"& _ 
                "o] = @Client_No, [Contract Collateral ID] = @Contract_Collateral_ID, [Maturity D"& _ 
                "ate] = @Maturity_Date, [Remaining Year(s) to Maturity] = @p7, [Org Ccy] = @Org_C"& _ 
                "cy, [Credit Outstanding (Org Ccy)] = @p10, [Credit Outstanding (EUR Equ)] = @p13"& _ 
                ", [NetCreditOutstandingAmountEUR] = @NetCreditOutstandingAmountEUR, [InternalInf"& _ 
                "o] = @InternalInfo, [PD] = @PD, [(1-ER)] = @p16, [Credit Risk Amount(EUR Equ)] ="& _ 
                " @p19, [NetCredit Risk Amount(EUR Equ)] = @p22, [(1-ER_45)] = @p25, [CreditRiskA"& _ 
                "mountEUREquER45] = @CreditRiskAmountEUREquER45, [NetCreditRiskAmountEUREquER45] "& _ 
                "= @NetCreditRiskAmountEUREquER45, [CoreDefinition] = @CoreDefinition, [ClientGro"& _ 
                "up] = @ClientGroup, [ClientGroupName] = @ClientGroupName, [MaturityWithoutCapFlo"& _ 
                "or] = @MaturityWithoutCapFloor, [EaDweigthedMaturityWithoutCapFloor] = @EaDweigt"& _ 
                "hedMaturityWithoutCapFloor, [PDxFinalEaD] = @PDxFinalEaD, [LGDfinalEaDweighted] "& _ 
                "= @LGDfinalEaDweighted, [RiskDate] = @RiskDate, [IdClientGroup] = @IdClientGroup"& _ 
                " WHERE (([ID] = @Original_ID) AND ((@IsNull_Obligor_Rate = 1 AND [Obligor Rate] "& _ 
                "IS NULL) OR ([Obligor Rate] = @Original_Obligor_Rate)) AND ((@IsNull_Contract_Ty"& _ 
                "pe = 1 AND [Contract Type] IS NULL) OR ([Contract Type] = @Original_Contract_Typ"& _ 
                "e)) AND ((@IsNull_Product_Type = 1 AND [Product Type] IS NULL) OR ([Product Type"& _ 
                "] = @Original_Product_Type)) AND ((@p3 = 1 AND [GL Master / Account Type] IS NUL"& _ 
                "L) OR ([GL Master / Account Type] = @p2)) AND ((@p6 = 1 AND [Counterparty/Issuer"& _ 
                "/Collateral Name] IS NULL) OR ([Counterparty/Issuer/Collateral Name] = @p5)) AND"& _ 
                " ((@IsNull_Client_No = 1 AND [Client No] IS NULL) OR ([Client No] = @Original_Cl"& _ 
                "ient_No)) AND ((@IsNull_Contract_Collateral_ID = 1 AND [Contract Collateral ID] "& _ 
                "IS NULL) OR ([Contract Collateral ID] = @Original_Contract_Collateral_ID)) AND ("& _ 
                "(@IsNull_Maturity_Date = 1 AND [Maturity Date] IS NULL) OR ([Maturity Date] = @O"& _ 
                "riginal_Maturity_Date)) AND ((@p9 = 1 AND [Remaining Year(s) to Maturity] IS NUL"& _ 
                "L) OR ([Remaining Year(s) to Maturity] = @p8)) AND ((@IsNull_Org_Ccy = 1 AND [Or"& _ 
                "g Ccy] IS NULL) OR ([Org Ccy] = @Original_Org_Ccy)) AND ((@p12 = 1 AND [Credit O"& _ 
                "utstanding (Org Ccy)] IS NULL) OR ([Credit Outstanding (Org Ccy)] = @p11)) AND ("& _ 
                "(@p15 = 1 AND [Credit Outstanding (EUR Equ)] IS NULL) OR ([Credit Outstanding (E"& _ 
                "UR Equ)] = @p14)) AND ((@IsNull_NetCreditOutstandingAmountEUR = 1 AND [NetCredit"& _ 
                "OutstandingAmountEUR] IS NULL) OR ([NetCreditOutstandingAmountEUR] = @Original_N"& _ 
                "etCreditOutstandingAmountEUR)) AND ((@IsNull_InternalInfo = 1 AND [InternalInfo]"& _ 
                " IS NULL) OR ([InternalInfo] = @Original_InternalInfo)) AND ((@IsNull_PD = 1 AND"& _ 
                " [PD] IS NULL) OR ([PD] = @Original_PD)) AND ((@p18 = 1 AND [(1-ER)] IS NULL) OR"& _ 
                " ([(1-ER)] = @p17)) AND ((@p21 = 1 AND [Credit Risk Amount(EUR Equ)] IS NULL) OR"& _ 
                " ([Credit Risk Amount(EUR Equ)] = @p20)) AND ((@p24 = 1 AND [NetCredit Risk Amou"& _ 
                "nt(EUR Equ)] IS NULL) OR ([NetCredit Risk Amount(EUR Equ)] = @p23)) AND ((@p27 ="& _ 
                " 1 AND [(1-ER_45)] IS NULL) OR ([(1-ER_45)] = @p26)) AND ((@IsNull_CreditRiskAmo"& _ 
                "untEUREquER45 = 1 AND [CreditRiskAmountEUREquER45] IS NULL) OR ([CreditRiskAmoun"& _ 
                "tEUREquER45] = @Original_CreditRiskAmountEUREquER45)) AND ((@IsNull_NetCreditRis"& _ 
                "kAmountEUREquER45 = 1 AND [NetCreditRiskAmountEUREquER45] IS NULL) OR ([NetCredi"& _ 
                "tRiskAmountEUREquER45] = @Original_NetCreditRiskAmountEUREquER45)) AND ((@IsNull"& _ 
                "_CoreDefinition = 1 AND [CoreDefinition] IS NULL) OR ([CoreDefinition] = @Origin"& _ 
                "al_CoreDefinition)) AND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) OR "& _ 
                "([ClientGroup] = @Original_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AND ["& _ 
                "ClientGroupName] IS NULL) OR ([ClientGroupName] = @Original_ClientGroupName)) AN"& _ 
                "D ((@IsNull_MaturityWithoutCapFloor = 1 AND [MaturityWithoutCapFloor] IS NULL) O"& _ 
                "R ([MaturityWithoutCapFloor] = @Original_MaturityWithoutCapFloor)) AND ((@IsNull"& _ 
                "_EaDweigthedMaturityWithoutCapFloor = 1 AND [EaDweigthedMaturityWithoutCapFloor]"& _ 
                " IS NULL) OR ([EaDweigthedMaturityWithoutCapFloor] = @Original_EaDweigthedMaturi"& _ 
                "tyWithoutCapFloor)) AND ((@IsNull_PDxFinalEaD = 1 AND [PDxFinalEaD] IS NULL) OR "& _ 
                "([PDxFinalEaD] = @Original_PDxFinalEaD)) AND ((@IsNull_LGDfinalEaDweighted = 1 A"& _ 
                "ND [LGDfinalEaDweighted] IS NULL) OR ([LGDfinalEaDweighted] = @Original_LGDfinal"& _ 
                "EaDweighted)) AND ((@IsNull_RiskDate = 1 AND [RiskDate] IS NULL) OR ([RiskDate] "& _ 
                "= @Original_RiskDate)) AND ((@IsNull_IdClientGroup = 1 AND [IdClientGroup] IS NU"& _ 
                "LL) OR ([IdClientGroup] = @Original_IdClientGroup)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obligor_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Product_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Collateral_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Maturity_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Org_Ccy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InternalInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p18", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p17", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p20", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p24", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p23", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p27", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p26", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CoreDefinition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PDxFinalEaD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, [Obligor Rate], [Contract Type], [Product Type], [GL Master / A"& _ 
                "ccount Type], [Counterparty/Issuer/Collateral Name], [Client No], [Contract Coll"& _ 
                "ateral ID], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         [Maturity Date], [Remaining Year(s) to Ma"& _ 
                "turity], [Org Ccy], [Credit Outstanding (Org Ccy)], [Credit Outstanding (EUR Equ"& _ 
                ")], NetCreditOutstandingAmountEUR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         InternalInfo, PD, "& _ 
                "[(1-ER)], [Credit Risk Amount(EUR Equ)], [NetCredit Risk Amount(EUR Equ)], [(1-E"& _ 
                "R_45)], CreditRiskAmountEUREquER45, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NetCreditRiskAmou"& _ 
                "ntEUREquER45, CoreDefinition, ClientGroup, ClientGroupName, MaturityWithoutCapFl"& _ 
                "oor, EaDweigthedMaturityWithoutCapFloor, PDxFinalEaD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " LGDfinalEaDweighted, RiskDate, IdClientGroup"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ScenarioAnalyze_G"& _ 
                "eneralStressTest_Details"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DetailsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DetailsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DetailsDataTable = New ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DetailsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DetailsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ScenarioAnalyze_GeneralStressTest_Details")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Obligor_Rate As String,  _
                    ByVal Original_Contract_Type As String,  _
                    ByVal Original_Product_Type As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_Client_No As String,  _
                    ByVal Original_Contract_Collateral_ID As String,  _
                    ByVal Original_Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p8 As Global.System.Nullable(Of Double),  _
                    ByVal Original_Org_Ccy As String,  _
                    ByVal p11 As Global.System.Nullable(Of Double),  _
                    ByVal p14 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal Original_InternalInfo As String,  _
                    ByVal Original_PD As Global.System.Nullable(Of Double),  _
                    ByVal p17 As Global.System.Nullable(Of Double),  _
                    ByVal p20 As Global.System.Nullable(Of Double),  _
                    ByVal p23 As Global.System.Nullable(Of Double),  _
                    ByVal p26 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CoreDefinition As String,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_Obligor_Rate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Obligor_Rate,String)
            End If
            If (Original_Contract_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Contract_Type,String)
            End If
            If (Original_Product_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Product_Type,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(p5,String)
            End If
            If (Original_Client_No Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Client_No,String)
            End If
            If (Original_Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Contract_Collateral_ID,String)
            End If
            If (Original_Maturity_Date.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Maturity_Date.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p8.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(p8.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_Org_Ccy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Org_Ccy,String)
            End If
            If (p11.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(p11.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(p14.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_InternalInfo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_InternalInfo,String)
            End If
            If (Original_PD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_PD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(p17.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(p20.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(p23.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (p26.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(p26.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreDefinition Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_CoreDefinition,String)
            End If
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_PDxFinalEaD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_IdClientGroup.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_IdClientGroup.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p7 As Global.System.Nullable(Of Double),  _
                    ByVal Org_Ccy As String,  _
                    ByVal p10 As Global.System.Nullable(Of Double),  _
                    ByVal p13 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Global.System.Nullable(Of Double),  _
                    ByVal p16 As Global.System.Nullable(Of Double),  _
                    ByVal p19 As Global.System.Nullable(Of Double),  _
                    ByVal p22 As Global.System.Nullable(Of Double),  _
                    ByVal p25 As Global.System.Nullable(Of Double),  _
                    ByVal CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            If (Obligor_Rate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Obligor_Rate,String)
            End If
            If (Contract_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Contract_Type,String)
            End If
            If (Product_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Product_Type,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(p4,String)
            End If
            If (Client_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Client_No,String)
            End If
            If (Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Contract_Collateral_ID,String)
            End If
            If (Maturity_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Maturity_Date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p7.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Org_Ccy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Org_Ccy,String)
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(p10.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(p13.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (InternalInfo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(InternalInfo,String)
            End If
            If (PD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(p16.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(p19.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(p22.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(p25.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CoreDefinition Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CoreDefinition,String)
            End If
            If (ClientGroup Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ClientGroupName,String)
            End If
            If (MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PDxFinalEaD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IdClientGroup.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(IdClientGroup.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p7 As Global.System.Nullable(Of Double),  _
                    ByVal Org_Ccy As String,  _
                    ByVal p10 As Global.System.Nullable(Of Double),  _
                    ByVal p13 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Global.System.Nullable(Of Double),  _
                    ByVal p16 As Global.System.Nullable(Of Double),  _
                    ByVal p19 As Global.System.Nullable(Of Double),  _
                    ByVal p22 As Global.System.Nullable(Of Double),  _
                    ByVal p25 As Global.System.Nullable(Of Double),  _
                    ByVal CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdClientGroup As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Obligor_Rate As String,  _
                    ByVal Original_Contract_Type As String,  _
                    ByVal Original_Product_Type As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_Client_No As String,  _
                    ByVal Original_Contract_Collateral_ID As String,  _
                    ByVal Original_Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p8 As Global.System.Nullable(Of Double),  _
                    ByVal Original_Org_Ccy As String,  _
                    ByVal p11 As Global.System.Nullable(Of Double),  _
                    ByVal p14 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal Original_InternalInfo As String,  _
                    ByVal Original_PD As Global.System.Nullable(Of Double),  _
                    ByVal p17 As Global.System.Nullable(Of Double),  _
                    ByVal p20 As Global.System.Nullable(Of Double),  _
                    ByVal p23 As Global.System.Nullable(Of Double),  _
                    ByVal p26 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CoreDefinition As String,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            If (Obligor_Rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Obligor_Rate,String)
            End If
            If (Contract_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Contract_Type,String)
            End If
            If (Product_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Product_Type,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(p4,String)
            End If
            If (Client_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Client_No,String)
            End If
            If (Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Contract_Collateral_ID,String)
            End If
            If (Maturity_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Maturity_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p7.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Org_Ccy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Org_Ccy,String)
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(p10.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(p13.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (InternalInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(InternalInfo,String)
            End If
            If (PD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(p16.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(p19.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(p22.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(p25.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CoreDefinition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CoreDefinition,String)
            End If
            If (ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ClientGroupName,String)
            End If
            If (MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PDxFinalEaD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IdClientGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(IdClientGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_ID,Integer)
            If (Original_Obligor_Rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_Obligor_Rate,String)
            End If
            If (Original_Contract_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_Contract_Type,String)
            End If
            If (Original_Product_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_Product_Type,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(p5,String)
            End If
            If (Original_Client_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_Client_No,String)
            End If
            If (Original_Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Contract_Collateral_ID,String)
            End If
            If (Original_Maturity_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_Maturity_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (p8.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(p8.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_Org_Ccy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_Org_Ccy,String)
            End If
            If (p11.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(p11.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(p14.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_InternalInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_InternalInfo,String)
            End If
            If (Original_PD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_PD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(p17.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(p20.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(p23.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (p26.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(p26.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreDefinition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_CoreDefinition,String)
            End If
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_PDxFinalEaD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_IdClientGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_IdClientGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ScenarioAnalyze_GeneralStressTest_TotalsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ScenarioAnalyze_GeneralStressTest_Totals"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("ClientGroup", "ClientGroup")
            tableMapping.ColumnMappings.Add("ClientGroupName", "ClientGroupName")
            tableMapping.ColumnMappings.Add("SubBorrowersCounter", "SubBorrowersCounter")
            tableMapping.ColumnMappings.Add("FinalEadTotalSum", "FinalEadTotalSum")
            tableMapping.ColumnMappings.Add("LGD", "LGD")
            tableMapping.ColumnMappings.Add("PD_EaD_weighted", "PD_EaD_weighted")
            tableMapping.ColumnMappings.Add("PD_3bps_floor", "PD_3bps_floor")
            tableMapping.ColumnMappings.Add("IndicatorOfFloor", "IndicatorOfFloor")
            tableMapping.ColumnMappings.Add("MaturityEADweigthed", "MaturityEADweigthed")
            tableMapping.ColumnMappings.Add("R_CoefficientOfColleration", "R_CoefficientOfColleration")
            tableMapping.ColumnMappings.Add("b_MaturityAdjustment", "b_MaturityAdjustment")
            tableMapping.ColumnMappings.Add("RW_RiskWeightedExposure", "RW_RiskWeightedExposure")
            tableMapping.ColumnMappings.Add("UL_UnexpectedLoss", "UL_UnexpectedLoss")
            tableMapping.ColumnMappings.Add("s_i", "s_i")
            tableMapping.ColumnMappings.Add("K_i", "K_i")
            tableMapping.ColumnMappings.Add("R_i", "R_i")
            tableMapping.ColumnMappings.Add("VLGD_i", "VLGD_i")
            tableMapping.ColumnMappings.Add("C_i", "C_i")
            tableMapping.ColumnMappings.Add("GA_n", "GA_n")
            tableMapping.ColumnMappings.Add("RiskDate", "RiskDate")
            tableMapping.ColumnMappings.Add("IdDate", "IdDate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ScenarioAnalyze_GeneralStressTest_Totals] WHERE (([ID] = @Original_I"& _ 
                "D) AND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) OR ([ClientGroup] = "& _ 
                "@Original_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AND [ClientGroupName] "& _ 
                "IS NULL) OR ([ClientGroupName] = @Original_ClientGroupName)) AND ((@IsNull_SubBo"& _ 
                "rrowersCounter = 1 AND [SubBorrowersCounter] IS NULL) OR ([SubBorrowersCounter] "& _ 
                "= @Original_SubBorrowersCounter)) AND ((@IsNull_FinalEadTotalSum = 1 AND [FinalE"& _ 
                "adTotalSum] IS NULL) OR ([FinalEadTotalSum] = @Original_FinalEadTotalSum)) AND ("& _ 
                "(@IsNull_LGD = 1 AND [LGD] IS NULL) OR ([LGD] = @Original_LGD)) AND ((@IsNull_PD"& _ 
                "_EaD_weighted = 1 AND [PD_EaD_weighted] IS NULL) OR ([PD_EaD_weighted] = @Origin"& _ 
                "al_PD_EaD_weighted)) AND ((@IsNull_PD_3bps_floor = 1 AND [PD_3bps_floor] IS NULL"& _ 
                ") OR ([PD_3bps_floor] = @Original_PD_3bps_floor)) AND ((@IsNull_IndicatorOfFloor"& _ 
                " = 1 AND [IndicatorOfFloor] IS NULL) OR ([IndicatorOfFloor] = @Original_Indicato"& _ 
                "rOfFloor)) AND ((@IsNull_MaturityEADweigthed = 1 AND [MaturityEADweigthed] IS NU"& _ 
                "LL) OR ([MaturityEADweigthed] = @Original_MaturityEADweigthed)) AND ((@IsNull_R_"& _ 
                "CoefficientOfColleration = 1 AND [R_CoefficientOfColleration] IS NULL) OR ([R_Co"& _ 
                "efficientOfColleration] = @Original_R_CoefficientOfColleration)) AND ((@IsNull_b"& _ 
                "_MaturityAdjustment = 1 AND [b_MaturityAdjustment] IS NULL) OR ([b_MaturityAdjus"& _ 
                "tment] = @Original_b_MaturityAdjustment)) AND ((@IsNull_RW_RiskWeightedExposure "& _ 
                "= 1 AND [RW_RiskWeightedExposure] IS NULL) OR ([RW_RiskWeightedExposure] = @Orig"& _ 
                "inal_RW_RiskWeightedExposure)) AND ((@IsNull_UL_UnexpectedLoss = 1 AND [UL_Unexp"& _ 
                "ectedLoss] IS NULL) OR ([UL_UnexpectedLoss] = @Original_UL_UnexpectedLoss)) AND "& _ 
                "((@IsNull_s_i = 1 AND [s_i] IS NULL) OR ([s_i] = @Original_s_i)) AND ((@IsNull_K"& _ 
                "_i = 1 AND [K_i] IS NULL) OR ([K_i] = @Original_K_i)) AND ((@IsNull_R_i = 1 AND "& _ 
                "[R_i] IS NULL) OR ([R_i] = @Original_R_i)) AND ((@IsNull_VLGD_i = 1 AND [VLGD_i]"& _ 
                " IS NULL) OR ([VLGD_i] = @Original_VLGD_i)) AND ((@IsNull_C_i = 1 AND [C_i] IS N"& _ 
                "ULL) OR ([C_i] = @Original_C_i)) AND ((@IsNull_GA_n = 1 AND [GA_n] IS NULL) OR ("& _ 
                "[GA_n] = @Original_GA_n)) AND ((@IsNull_RiskDate = 1 AND [RiskDate] IS NULL) OR "& _ 
                "([RiskDate] = @Original_RiskDate)) AND ((@IsNull_IdDate = 1 AND [IdDate] IS NULL"& _ 
                ") OR ([IdDate] = @Original_IdDate)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubBorrowersCounter", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubBorrowersCounter", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinalEadTotalSum", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinalEadTotalSum", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD_EaD_weighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD_EaD_weighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD_3bps_floor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD_3bps_floor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IndicatorOfFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndicatorOfFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityEADweigthed", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityEADweigthed", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_CoefficientOfColleration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_CoefficientOfColleration", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_b_MaturityAdjustment", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_b_MaturityAdjustment", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UL_UnexpectedLoss", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UL_UnexpectedLoss", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_s_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_s_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_K_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_K_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VLGD_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VLGD_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_C_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_C_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GA_n", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GA_n", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GA_n", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "GA_n", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ScenarioAnalyze_GeneralStressTest_Totals] ([ClientGroup], [ClientGro"& _ 
                "upName], [SubBorrowersCounter], [FinalEadTotalSum], [LGD], [PD_EaD_weighted], [P"& _ 
                "D_3bps_floor], [IndicatorOfFloor], [MaturityEADweigthed], [R_CoefficientOfColler"& _ 
                "ation], [b_MaturityAdjustment], [RW_RiskWeightedExposure], [UL_UnexpectedLoss], "& _ 
                "[s_i], [K_i], [R_i], [VLGD_i], [C_i], [GA_n], [RiskDate], [IdDate]) VALUES (@Cli"& _ 
                "entGroup, @ClientGroupName, @SubBorrowersCounter, @FinalEadTotalSum, @LGD, @PD_E"& _ 
                "aD_weighted, @PD_3bps_floor, @IndicatorOfFloor, @MaturityEADweigthed, @R_Coeffic"& _ 
                "ientOfColleration, @b_MaturityAdjustment, @RW_RiskWeightedExposure, @UL_Unexpect"& _ 
                "edLoss, @s_i, @K_i, @R_i, @VLGD_i, @C_i, @GA_n, @RiskDate, @IdDate)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubBorrowersCounter", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinalEadTotalSum", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD_EaD_weighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD_3bps_floor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndicatorOfFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityEADweigthed", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_CoefficientOfColleration", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@b_MaturityAdjustment", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UL_UnexpectedLoss", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@s_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@K_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VLGD_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GA_n", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "GA_n", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ScenarioAnalyze_GeneralStressTest_Totals] SET [ClientGroup] = @ClientGrou"& _ 
                "p, [ClientGroupName] = @ClientGroupName, [SubBorrowersCounter] = @SubBorrowersCo"& _ 
                "unter, [FinalEadTotalSum] = @FinalEadTotalSum, [LGD] = @LGD, [PD_EaD_weighted] ="& _ 
                " @PD_EaD_weighted, [PD_3bps_floor] = @PD_3bps_floor, [IndicatorOfFloor] = @Indic"& _ 
                "atorOfFloor, [MaturityEADweigthed] = @MaturityEADweigthed, [R_CoefficientOfColle"& _ 
                "ration] = @R_CoefficientOfColleration, [b_MaturityAdjustment] = @b_MaturityAdjus"& _ 
                "tment, [RW_RiskWeightedExposure] = @RW_RiskWeightedExposure, [UL_UnexpectedLoss]"& _ 
                " = @UL_UnexpectedLoss, [s_i] = @s_i, [K_i] = @K_i, [R_i] = @R_i, [VLGD_i] = @VLG"& _ 
                "D_i, [C_i] = @C_i, [GA_n] = @GA_n, [RiskDate] = @RiskDate, [IdDate] = @IdDate WH"& _ 
                "ERE (([ID] = @Original_ID) AND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NU"& _ 
                "LL) OR ([ClientGroup] = @Original_ClientGroup)) AND ((@IsNull_ClientGroupName = "& _ 
                "1 AND [ClientGroupName] IS NULL) OR ([ClientGroupName] = @Original_ClientGroupNa"& _ 
                "me)) AND ((@IsNull_SubBorrowersCounter = 1 AND [SubBorrowersCounter] IS NULL) OR"& _ 
                " ([SubBorrowersCounter] = @Original_SubBorrowersCounter)) AND ((@IsNull_FinalEad"& _ 
                "TotalSum = 1 AND [FinalEadTotalSum] IS NULL) OR ([FinalEadTotalSum] = @Original_"& _ 
                "FinalEadTotalSum)) AND ((@IsNull_LGD = 1 AND [LGD] IS NULL) OR ([LGD] = @Origina"& _ 
                "l_LGD)) AND ((@IsNull_PD_EaD_weighted = 1 AND [PD_EaD_weighted] IS NULL) OR ([PD"& _ 
                "_EaD_weighted] = @Original_PD_EaD_weighted)) AND ((@IsNull_PD_3bps_floor = 1 AND"& _ 
                " [PD_3bps_floor] IS NULL) OR ([PD_3bps_floor] = @Original_PD_3bps_floor)) AND (("& _ 
                "@IsNull_IndicatorOfFloor = 1 AND [IndicatorOfFloor] IS NULL) OR ([IndicatorOfFlo"& _ 
                "or] = @Original_IndicatorOfFloor)) AND ((@IsNull_MaturityEADweigthed = 1 AND [Ma"& _ 
                "turityEADweigthed] IS NULL) OR ([MaturityEADweigthed] = @Original_MaturityEADwei"& _ 
                "gthed)) AND ((@IsNull_R_CoefficientOfColleration = 1 AND [R_CoefficientOfCollera"& _ 
                "tion] IS NULL) OR ([R_CoefficientOfColleration] = @Original_R_CoefficientOfColle"& _ 
                "ration)) AND ((@IsNull_b_MaturityAdjustment = 1 AND [b_MaturityAdjustment] IS NU"& _ 
                "LL) OR ([b_MaturityAdjustment] = @Original_b_MaturityAdjustment)) AND ((@IsNull_"& _ 
                "RW_RiskWeightedExposure = 1 AND [RW_RiskWeightedExposure] IS NULL) OR ([RW_RiskW"& _ 
                "eightedExposure] = @Original_RW_RiskWeightedExposure)) AND ((@IsNull_UL_Unexpect"& _ 
                "edLoss = 1 AND [UL_UnexpectedLoss] IS NULL) OR ([UL_UnexpectedLoss] = @Original_"& _ 
                "UL_UnexpectedLoss)) AND ((@IsNull_s_i = 1 AND [s_i] IS NULL) OR ([s_i] = @Origin"& _ 
                "al_s_i)) AND ((@IsNull_K_i = 1 AND [K_i] IS NULL) OR ([K_i] = @Original_K_i)) AN"& _ 
                "D ((@IsNull_R_i = 1 AND [R_i] IS NULL) OR ([R_i] = @Original_R_i)) AND ((@IsNull"& _ 
                "_VLGD_i = 1 AND [VLGD_i] IS NULL) OR ([VLGD_i] = @Original_VLGD_i)) AND ((@IsNul"& _ 
                "l_C_i = 1 AND [C_i] IS NULL) OR ([C_i] = @Original_C_i)) AND ((@IsNull_GA_n = 1 "& _ 
                "AND [GA_n] IS NULL) OR ([GA_n] = @Original_GA_n)) AND ((@IsNull_RiskDate = 1 AND"& _ 
                " [RiskDate] IS NULL) OR ([RiskDate] = @Original_RiskDate)) AND ((@IsNull_IdDate "& _ 
                "= 1 AND [IdDate] IS NULL) OR ([IdDate] = @Original_IdDate)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubBorrowersCounter", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FinalEadTotalSum", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD_EaD_weighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD_3bps_floor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IndicatorOfFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityEADweigthed", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_CoefficientOfColleration", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@b_MaturityAdjustment", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UL_UnexpectedLoss", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@s_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@K_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@R_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VLGD_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GA_n", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "GA_n", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubBorrowersCounter", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubBorrowersCounter", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubBorrowersCounter", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FinalEadTotalSum", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FinalEadTotalSum", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FinalEadTotalSum", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD_EaD_weighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD_EaD_weighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_EaD_weighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD_3bps_floor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD_3bps_floor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD_3bps_floor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IndicatorOfFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IndicatorOfFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IndicatorOfFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityEADweigthed", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityEADweigthed", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityEADweigthed", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_CoefficientOfColleration", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_CoefficientOfColleration", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_CoefficientOfColleration", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_b_MaturityAdjustment", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_b_MaturityAdjustment", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "b_MaturityAdjustment", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RW_RiskWeightedExposure", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RW_RiskWeightedExposure", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UL_UnexpectedLoss", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UL_UnexpectedLoss", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UL_UnexpectedLoss", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_s_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_s_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "s_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_K_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_K_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "K_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_R_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_R_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "R_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VLGD_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VLGD_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VLGD_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_C_i", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_C_i", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C_i", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GA_n", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GA_n", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GA_n", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 12, "GA_n", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, ClientGroup, ClientGroupName, SubBorrowersCounter, FinalEadTota"& _ 
                "lSum, LGD, PD_EaD_weighted, PD_3bps_floor, IndicatorOfFloor, MaturityEADweigthed"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         R_CoefficientOfColleration, b_MaturityAdjustment, R"& _ 
                "W_RiskWeightedExposure, UL_UnexpectedLoss, s_i, K_i, R_i, VLGD_i, C_i, GA_n, Ris"& _ 
                "kDate, IdDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ScenarioAnalyze_GeneralStressTest_Totals"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_TotalsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_TotalsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_TotalsDataTable = New ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_TotalsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_TotalsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ScenarioAnalyze_GeneralStressTest_Totals")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_SubBorrowersCounter As Global.System.Nullable(Of Double),  _
                    ByVal Original_FinalEadTotalSum As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGD As Global.System.Nullable(Of Double),  _
                    ByVal Original_PD_EaD_weighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_PD_3bps_floor As Global.System.Nullable(Of Double),  _
                    ByVal Original_IndicatorOfFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_MaturityEADweigthed As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_CoefficientOfColleration As Global.System.Nullable(Of Double),  _
                    ByVal Original_b_MaturityAdjustment As Global.System.Nullable(Of Double),  _
                    ByVal Original_RW_RiskWeightedExposure As Global.System.Nullable(Of Double),  _
                    ByVal Original_UL_UnexpectedLoss As Global.System.Nullable(Of Double),  _
                    ByVal Original_s_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_K_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_VLGD_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_C_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_GA_n As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdDate As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_SubBorrowersCounter.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_SubBorrowersCounter.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_FinalEadTotalSum.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_FinalEadTotalSum.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_LGD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_LGD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_PD_EaD_weighted.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PD_EaD_weighted.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_PD_3bps_floor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_PD_3bps_floor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_IndicatorOfFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_IndicatorOfFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_MaturityEADweigthed.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_MaturityEADweigthed.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_R_CoefficientOfColleration.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_R_CoefficientOfColleration.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_b_MaturityAdjustment.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_b_MaturityAdjustment.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_RW_RiskWeightedExposure.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_RW_RiskWeightedExposure.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_UL_UnexpectedLoss.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_UL_UnexpectedLoss.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_s_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_s_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_K_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_K_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_R_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_R_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_VLGD_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_VLGD_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_C_i.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_C_i.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_GA_n.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_GA_n.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_IdDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_IdDate.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal SubBorrowersCounter As Global.System.Nullable(Of Double),  _
                    ByVal FinalEadTotalSum As Global.System.Nullable(Of Double),  _
                    ByVal LGD As Global.System.Nullable(Of Double),  _
                    ByVal PD_EaD_weighted As Global.System.Nullable(Of Double),  _
                    ByVal PD_3bps_floor As Global.System.Nullable(Of Double),  _
                    ByVal IndicatorOfFloor As Global.System.Nullable(Of Double),  _
                    ByVal MaturityEADweigthed As Global.System.Nullable(Of Double),  _
                    ByVal R_CoefficientOfColleration As Global.System.Nullable(Of Double),  _
                    ByVal b_MaturityAdjustment As Global.System.Nullable(Of Double),  _
                    ByVal RW_RiskWeightedExposure As Global.System.Nullable(Of Double),  _
                    ByVal UL_UnexpectedLoss As Global.System.Nullable(Of Double),  _
                    ByVal s_i As Global.System.Nullable(Of Double),  _
                    ByVal K_i As Global.System.Nullable(Of Double),  _
                    ByVal R_i As Global.System.Nullable(Of Double),  _
                    ByVal VLGD_i As Global.System.Nullable(Of Double),  _
                    ByVal C_i As Global.System.Nullable(Of Double),  _
                    ByVal GA_n As Global.System.Nullable(Of Decimal),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdDate As Global.System.Nullable(Of Integer)) As Integer
            If (ClientGroup Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ClientGroupName,String)
            End If
            If (SubBorrowersCounter.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SubBorrowersCounter.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FinalEadTotalSum.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FinalEadTotalSum.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LGD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LGD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PD_EaD_weighted.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PD_EaD_weighted.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PD_3bps_floor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PD_3bps_floor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IndicatorOfFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(IndicatorOfFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MaturityEADweigthed.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(MaturityEADweigthed.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (R_CoefficientOfColleration.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(R_CoefficientOfColleration.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (b_MaturityAdjustment.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(b_MaturityAdjustment.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (RW_RiskWeightedExposure.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(RW_RiskWeightedExposure.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (UL_UnexpectedLoss.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(UL_UnexpectedLoss.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (s_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(s_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (K_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(K_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (R_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(R_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (VLGD_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(VLGD_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (C_i.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(C_i.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (GA_n.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(GA_n.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (IdDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(IdDate.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal SubBorrowersCounter As Global.System.Nullable(Of Double),  _
                    ByVal FinalEadTotalSum As Global.System.Nullable(Of Double),  _
                    ByVal LGD As Global.System.Nullable(Of Double),  _
                    ByVal PD_EaD_weighted As Global.System.Nullable(Of Double),  _
                    ByVal PD_3bps_floor As Global.System.Nullable(Of Double),  _
                    ByVal IndicatorOfFloor As Global.System.Nullable(Of Double),  _
                    ByVal MaturityEADweigthed As Global.System.Nullable(Of Double),  _
                    ByVal R_CoefficientOfColleration As Global.System.Nullable(Of Double),  _
                    ByVal b_MaturityAdjustment As Global.System.Nullable(Of Double),  _
                    ByVal RW_RiskWeightedExposure As Global.System.Nullable(Of Double),  _
                    ByVal UL_UnexpectedLoss As Global.System.Nullable(Of Double),  _
                    ByVal s_i As Global.System.Nullable(Of Double),  _
                    ByVal K_i As Global.System.Nullable(Of Double),  _
                    ByVal R_i As Global.System.Nullable(Of Double),  _
                    ByVal VLGD_i As Global.System.Nullable(Of Double),  _
                    ByVal C_i As Global.System.Nullable(Of Double),  _
                    ByVal GA_n As Global.System.Nullable(Of Decimal),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdDate As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_SubBorrowersCounter As Global.System.Nullable(Of Double),  _
                    ByVal Original_FinalEadTotalSum As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGD As Global.System.Nullable(Of Double),  _
                    ByVal Original_PD_EaD_weighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_PD_3bps_floor As Global.System.Nullable(Of Double),  _
                    ByVal Original_IndicatorOfFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_MaturityEADweigthed As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_CoefficientOfColleration As Global.System.Nullable(Of Double),  _
                    ByVal Original_b_MaturityAdjustment As Global.System.Nullable(Of Double),  _
                    ByVal Original_RW_RiskWeightedExposure As Global.System.Nullable(Of Double),  _
                    ByVal Original_UL_UnexpectedLoss As Global.System.Nullable(Of Double),  _
                    ByVal Original_s_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_K_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_R_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_VLGD_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_C_i As Global.System.Nullable(Of Double),  _
                    ByVal Original_GA_n As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdDate As Global.System.Nullable(Of Integer)) As Integer
            If (ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ClientGroupName,String)
            End If
            If (SubBorrowersCounter.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SubBorrowersCounter.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FinalEadTotalSum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FinalEadTotalSum.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LGD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(LGD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PD_EaD_weighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PD_EaD_weighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PD_3bps_floor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PD_3bps_floor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IndicatorOfFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(IndicatorOfFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MaturityEADweigthed.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(MaturityEADweigthed.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (R_CoefficientOfColleration.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(R_CoefficientOfColleration.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (b_MaturityAdjustment.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(b_MaturityAdjustment.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (RW_RiskWeightedExposure.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(RW_RiskWeightedExposure.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (UL_UnexpectedLoss.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(UL_UnexpectedLoss.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (s_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(s_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (K_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(K_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (R_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(R_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (VLGD_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(VLGD_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (C_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(C_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (GA_n.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(GA_n.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (IdDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(IdDate.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_ID,Integer)
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_SubBorrowersCounter.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_SubBorrowersCounter.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_FinalEadTotalSum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_FinalEadTotalSum.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_LGD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_LGD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_PD_EaD_weighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_PD_EaD_weighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_PD_3bps_floor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_PD_3bps_floor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_IndicatorOfFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_IndicatorOfFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_MaturityEADweigthed.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_MaturityEADweigthed.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_R_CoefficientOfColleration.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_R_CoefficientOfColleration.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_b_MaturityAdjustment.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_b_MaturityAdjustment.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_RW_RiskWeightedExposure.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_RW_RiskWeightedExposure.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_UL_UnexpectedLoss.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_UL_UnexpectedLoss.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_s_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_s_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_K_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_K_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_R_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_R_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_VLGD_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_VLGD_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_C_i.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_C_i.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_GA_n.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_GA_n.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_IdDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_IdDate.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ScenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ScenarioAnalyze_GeneralStressTest_DetailsALL"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Obligor Rate", "Obligor Rate")
            tableMapping.ColumnMappings.Add("Contract Type", "Contract Type")
            tableMapping.ColumnMappings.Add("Product Type", "Product Type")
            tableMapping.ColumnMappings.Add("GL Master / Account Type", "GL Master / Account Type")
            tableMapping.ColumnMappings.Add("Counterparty/Issuer/Collateral Name", "Counterparty/Issuer/Collateral Name")
            tableMapping.ColumnMappings.Add("Client No", "Client No")
            tableMapping.ColumnMappings.Add("Contract Collateral ID", "Contract Collateral ID")
            tableMapping.ColumnMappings.Add("Maturity Date", "Maturity Date")
            tableMapping.ColumnMappings.Add("Remaining Year(s) to Maturity", "Remaining Year(s) to Maturity")
            tableMapping.ColumnMappings.Add("Org Ccy", "Org Ccy")
            tableMapping.ColumnMappings.Add("Credit Outstanding (Org Ccy)", "Credit Outstanding (Org Ccy)")
            tableMapping.ColumnMappings.Add("Credit Outstanding (EUR Equ)", "Credit Outstanding (EUR Equ)")
            tableMapping.ColumnMappings.Add("NetCreditOutstandingAmountEUR", "NetCreditOutstandingAmountEUR")
            tableMapping.ColumnMappings.Add("InternalInfo", "InternalInfo")
            tableMapping.ColumnMappings.Add("PD", "PD")
            tableMapping.ColumnMappings.Add("(1-ER)", "(1-ER)")
            tableMapping.ColumnMappings.Add("Credit Risk Amount(EUR Equ)", "Credit Risk Amount(EUR Equ)")
            tableMapping.ColumnMappings.Add("NetCredit Risk Amount(EUR Equ)", "NetCredit Risk Amount(EUR Equ)")
            tableMapping.ColumnMappings.Add("(1-ER_45)", "(1-ER_45)")
            tableMapping.ColumnMappings.Add("CreditRiskAmountEUREquER45", "CreditRiskAmountEUREquER45")
            tableMapping.ColumnMappings.Add("NetCreditRiskAmountEUREquER45", "NetCreditRiskAmountEUREquER45")
            tableMapping.ColumnMappings.Add("CoreDefinition", "CoreDefinition")
            tableMapping.ColumnMappings.Add("ClientGroup", "ClientGroup")
            tableMapping.ColumnMappings.Add("ClientGroupName", "ClientGroupName")
            tableMapping.ColumnMappings.Add("MaturityWithoutCapFloor", "MaturityWithoutCapFloor")
            tableMapping.ColumnMappings.Add("EaDweigthedMaturityWithoutCapFloor", "EaDweigthedMaturityWithoutCapFloor")
            tableMapping.ColumnMappings.Add("PDxFinalEaD", "PDxFinalEaD")
            tableMapping.ColumnMappings.Add("LGDfinalEaDweighted", "LGDfinalEaDweighted")
            tableMapping.ColumnMappings.Add("RiskDate", "RiskDate")
            tableMapping.ColumnMappings.Add("IdClientGroup", "IdClientGroup")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ScenarioAnalyze_GeneralStressTest_Details] WHERE (([ID] = @Original_"& _ 
                "ID) AND ((@IsNull_Obligor_Rate = 1 AND [Obligor Rate] IS NULL) OR ([Obligor Rate"& _ 
                "] = @Original_Obligor_Rate)) AND ((@IsNull_Contract_Type = 1 AND [Contract Type]"& _ 
                " IS NULL) OR ([Contract Type] = @Original_Contract_Type)) AND ((@IsNull_Product_"& _ 
                "Type = 1 AND [Product Type] IS NULL) OR ([Product Type] = @Original_Product_Type"& _ 
                ")) AND ((@p3 = 1 AND [GL Master / Account Type] IS NULL) OR ([GL Master / Accoun"& _ 
                "t Type] = @p2)) AND ((@p6 = 1 AND [Counterparty/Issuer/Collateral Name] IS NULL)"& _ 
                " OR ([Counterparty/Issuer/Collateral Name] = @p5)) AND ((@IsNull_Client_No = 1 A"& _ 
                "ND [Client No] IS NULL) OR ([Client No] = @Original_Client_No)) AND ((@IsNull_Co"& _ 
                "ntract_Collateral_ID = 1 AND [Contract Collateral ID] IS NULL) OR ([Contract Col"& _ 
                "lateral ID] = @Original_Contract_Collateral_ID)) AND ((@IsNull_Maturity_Date = 1"& _ 
                " AND [Maturity Date] IS NULL) OR ([Maturity Date] = @Original_Maturity_Date)) AN"& _ 
                "D ((@p9 = 1 AND [Remaining Year(s) to Maturity] IS NULL) OR ([Remaining Year(s) "& _ 
                "to Maturity] = @p8)) AND ((@IsNull_Org_Ccy = 1 AND [Org Ccy] IS NULL) OR ([Org C"& _ 
                "cy] = @Original_Org_Ccy)) AND ((@p12 = 1 AND [Credit Outstanding (Org Ccy)] IS N"& _ 
                "ULL) OR ([Credit Outstanding (Org Ccy)] = @p11)) AND ((@p15 = 1 AND [Credit Outs"& _ 
                "tanding (EUR Equ)] IS NULL) OR ([Credit Outstanding (EUR Equ)] = @p14)) AND ((@I"& _ 
                "sNull_NetCreditOutstandingAmountEUR = 1 AND [NetCreditOutstandingAmountEUR] IS N"& _ 
                "ULL) OR ([NetCreditOutstandingAmountEUR] = @Original_NetCreditOutstandingAmountE"& _ 
                "UR)) AND ((@IsNull_InternalInfo = 1 AND [InternalInfo] IS NULL) OR ([InternalInf"& _ 
                "o] = @Original_InternalInfo)) AND ((@IsNull_PD = 1 AND [PD] IS NULL) OR ([PD] = "& _ 
                "@Original_PD)) AND ((@p18 = 1 AND [(1-ER)] IS NULL) OR ([(1-ER)] = @p17)) AND (("& _ 
                "@p21 = 1 AND [Credit Risk Amount(EUR Equ)] IS NULL) OR ([Credit Risk Amount(EUR "& _ 
                "Equ)] = @p20)) AND ((@p24 = 1 AND [NetCredit Risk Amount(EUR Equ)] IS NULL) OR ("& _ 
                "[NetCredit Risk Amount(EUR Equ)] = @p23)) AND ((@p27 = 1 AND [(1-ER_45)] IS NULL"& _ 
                ") OR ([(1-ER_45)] = @p26)) AND ((@IsNull_CreditRiskAmountEUREquER45 = 1 AND [Cre"& _ 
                "ditRiskAmountEUREquER45] IS NULL) OR ([CreditRiskAmountEUREquER45] = @Original_C"& _ 
                "reditRiskAmountEUREquER45)) AND ((@IsNull_NetCreditRiskAmountEUREquER45 = 1 AND "& _ 
                "[NetCreditRiskAmountEUREquER45] IS NULL) OR ([NetCreditRiskAmountEUREquER45] = @"& _ 
                "Original_NetCreditRiskAmountEUREquER45)) AND ((@IsNull_CoreDefinition = 1 AND [C"& _ 
                "oreDefinition] IS NULL) OR ([CoreDefinition] = @Original_CoreDefinition)) AND (("& _ 
                "@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) OR ([ClientGroup] = @Original"& _ 
                "_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AND [ClientGroupName] IS NULL) "& _ 
                "OR ([ClientGroupName] = @Original_ClientGroupName)) AND ((@IsNull_MaturityWithou"& _ 
                "tCapFloor = 1 AND [MaturityWithoutCapFloor] IS NULL) OR ([MaturityWithoutCapFloo"& _ 
                "r] = @Original_MaturityWithoutCapFloor)) AND ((@IsNull_EaDweigthedMaturityWithou"& _ 
                "tCapFloor = 1 AND [EaDweigthedMaturityWithoutCapFloor] IS NULL) OR ([EaDweigthed"& _ 
                "MaturityWithoutCapFloor] = @Original_EaDweigthedMaturityWithoutCapFloor)) AND (("& _ 
                "@IsNull_PDxFinalEaD = 1 AND [PDxFinalEaD] IS NULL) OR ([PDxFinalEaD] = @Original"& _ 
                "_PDxFinalEaD)) AND ((@IsNull_LGDfinalEaDweighted = 1 AND [LGDfinalEaDweighted] I"& _ 
                "S NULL) OR ([LGDfinalEaDweighted] = @Original_LGDfinalEaDweighted)) AND ((@IsNul"& _ 
                "l_RiskDate = 1 AND [RiskDate] IS NULL) OR ([RiskDate] = @Original_RiskDate)) AND"& _ 
                " ((@IsNull_IdClientGroup = 1 AND [IdClientGroup] IS NULL) OR ([IdClientGroup] = "& _ 
                "@Original_IdClientGroup)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obligor_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Product_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Collateral_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Maturity_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Org_Ccy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InternalInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p18", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p17", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p20", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p24", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p23", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p27", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p26", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CoreDefinition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PDxFinalEaD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ScenarioAnalyze_GeneralStressTest_Details] ([Obligor Rate], [Contrac"& _ 
                "t Type], [Product Type], [GL Master / Account Type], [Counterparty/Issuer/Collat"& _ 
                "eral Name], [Client No], [Contract Collateral ID], [Maturity Date], [Remaining Y"& _ 
                "ear(s) to Maturity], [Org Ccy], [Credit Outstanding (Org Ccy)], [Credit Outstand"& _ 
                "ing (EUR Equ)], [NetCreditOutstandingAmountEUR], [InternalInfo], [PD], [(1-ER)],"& _ 
                " [Credit Risk Amount(EUR Equ)], [NetCredit Risk Amount(EUR Equ)], [(1-ER_45)], ["& _ 
                "CreditRiskAmountEUREquER45], [NetCreditRiskAmountEUREquER45], [CoreDefinition], "& _ 
                "[ClientGroup], [ClientGroupName], [MaturityWithoutCapFloor], [EaDweigthedMaturit"& _ 
                "yWithoutCapFloor], [PDxFinalEaD], [LGDfinalEaDweighted], [RiskDate], [IdClientGr"& _ 
                "oup]) VALUES (@Obligor_Rate, @Contract_Type, @Product_Type, @p1, @p4, @Client_No"& _ 
                ", @Contract_Collateral_ID, @Maturity_Date, @p7, @Org_Ccy, @p10, @p13, @NetCredit"& _ 
                "OutstandingAmountEUR, @InternalInfo, @PD, @p16, @p19, @p22, @p25, @CreditRiskAmo"& _ 
                "untEUREquER45, @NetCreditRiskAmountEUREquER45, @CoreDefinition, @ClientGroup, @C"& _ 
                "lientGroupName, @MaturityWithoutCapFloor, @EaDweigthedMaturityWithoutCapFloor, @"& _ 
                "PDxFinalEaD, @LGDfinalEaDweighted, @RiskDate, @IdClientGroup)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ScenarioAnalyze_GeneralStressTest_Details] SET [Obligor Rate] = @Obligor_"& _ 
                "Rate, [Contract Type] = @Contract_Type, [Product Type] = @Product_Type, [GL Mast"& _ 
                "er / Account Type] = @p1, [Counterparty/Issuer/Collateral Name] = @p4, [Client N"& _ 
                "o] = @Client_No, [Contract Collateral ID] = @Contract_Collateral_ID, [Maturity D"& _ 
                "ate] = @Maturity_Date, [Remaining Year(s) to Maturity] = @p7, [Org Ccy] = @Org_C"& _ 
                "cy, [Credit Outstanding (Org Ccy)] = @p10, [Credit Outstanding (EUR Equ)] = @p13"& _ 
                ", [NetCreditOutstandingAmountEUR] = @NetCreditOutstandingAmountEUR, [InternalInf"& _ 
                "o] = @InternalInfo, [PD] = @PD, [(1-ER)] = @p16, [Credit Risk Amount(EUR Equ)] ="& _ 
                " @p19, [NetCredit Risk Amount(EUR Equ)] = @p22, [(1-ER_45)] = @p25, [CreditRiskA"& _ 
                "mountEUREquER45] = @CreditRiskAmountEUREquER45, [NetCreditRiskAmountEUREquER45] "& _ 
                "= @NetCreditRiskAmountEUREquER45, [CoreDefinition] = @CoreDefinition, [ClientGro"& _ 
                "up] = @ClientGroup, [ClientGroupName] = @ClientGroupName, [MaturityWithoutCapFlo"& _ 
                "or] = @MaturityWithoutCapFloor, [EaDweigthedMaturityWithoutCapFloor] = @EaDweigt"& _ 
                "hedMaturityWithoutCapFloor, [PDxFinalEaD] = @PDxFinalEaD, [LGDfinalEaDweighted] "& _ 
                "= @LGDfinalEaDweighted, [RiskDate] = @RiskDate, [IdClientGroup] = @IdClientGroup"& _ 
                " WHERE (([ID] = @Original_ID) AND ((@IsNull_Obligor_Rate = 1 AND [Obligor Rate] "& _ 
                "IS NULL) OR ([Obligor Rate] = @Original_Obligor_Rate)) AND ((@IsNull_Contract_Ty"& _ 
                "pe = 1 AND [Contract Type] IS NULL) OR ([Contract Type] = @Original_Contract_Typ"& _ 
                "e)) AND ((@IsNull_Product_Type = 1 AND [Product Type] IS NULL) OR ([Product Type"& _ 
                "] = @Original_Product_Type)) AND ((@p3 = 1 AND [GL Master / Account Type] IS NUL"& _ 
                "L) OR ([GL Master / Account Type] = @p2)) AND ((@p6 = 1 AND [Counterparty/Issuer"& _ 
                "/Collateral Name] IS NULL) OR ([Counterparty/Issuer/Collateral Name] = @p5)) AND"& _ 
                " ((@IsNull_Client_No = 1 AND [Client No] IS NULL) OR ([Client No] = @Original_Cl"& _ 
                "ient_No)) AND ((@IsNull_Contract_Collateral_ID = 1 AND [Contract Collateral ID] "& _ 
                "IS NULL) OR ([Contract Collateral ID] = @Original_Contract_Collateral_ID)) AND ("& _ 
                "(@IsNull_Maturity_Date = 1 AND [Maturity Date] IS NULL) OR ([Maturity Date] = @O"& _ 
                "riginal_Maturity_Date)) AND ((@p9 = 1 AND [Remaining Year(s) to Maturity] IS NUL"& _ 
                "L) OR ([Remaining Year(s) to Maturity] = @p8)) AND ((@IsNull_Org_Ccy = 1 AND [Or"& _ 
                "g Ccy] IS NULL) OR ([Org Ccy] = @Original_Org_Ccy)) AND ((@p12 = 1 AND [Credit O"& _ 
                "utstanding (Org Ccy)] IS NULL) OR ([Credit Outstanding (Org Ccy)] = @p11)) AND ("& _ 
                "(@p15 = 1 AND [Credit Outstanding (EUR Equ)] IS NULL) OR ([Credit Outstanding (E"& _ 
                "UR Equ)] = @p14)) AND ((@IsNull_NetCreditOutstandingAmountEUR = 1 AND [NetCredit"& _ 
                "OutstandingAmountEUR] IS NULL) OR ([NetCreditOutstandingAmountEUR] = @Original_N"& _ 
                "etCreditOutstandingAmountEUR)) AND ((@IsNull_InternalInfo = 1 AND [InternalInfo]"& _ 
                " IS NULL) OR ([InternalInfo] = @Original_InternalInfo)) AND ((@IsNull_PD = 1 AND"& _ 
                " [PD] IS NULL) OR ([PD] = @Original_PD)) AND ((@p18 = 1 AND [(1-ER)] IS NULL) OR"& _ 
                " ([(1-ER)] = @p17)) AND ((@p21 = 1 AND [Credit Risk Amount(EUR Equ)] IS NULL) OR"& _ 
                " ([Credit Risk Amount(EUR Equ)] = @p20)) AND ((@p24 = 1 AND [NetCredit Risk Amou"& _ 
                "nt(EUR Equ)] IS NULL) OR ([NetCredit Risk Amount(EUR Equ)] = @p23)) AND ((@p27 ="& _ 
                " 1 AND [(1-ER_45)] IS NULL) OR ([(1-ER_45)] = @p26)) AND ((@IsNull_CreditRiskAmo"& _ 
                "untEUREquER45 = 1 AND [CreditRiskAmountEUREquER45] IS NULL) OR ([CreditRiskAmoun"& _ 
                "tEUREquER45] = @Original_CreditRiskAmountEUREquER45)) AND ((@IsNull_NetCreditRis"& _ 
                "kAmountEUREquER45 = 1 AND [NetCreditRiskAmountEUREquER45] IS NULL) OR ([NetCredi"& _ 
                "tRiskAmountEUREquER45] = @Original_NetCreditRiskAmountEUREquER45)) AND ((@IsNull"& _ 
                "_CoreDefinition = 1 AND [CoreDefinition] IS NULL) OR ([CoreDefinition] = @Origin"& _ 
                "al_CoreDefinition)) AND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) OR "& _ 
                "([ClientGroup] = @Original_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AND ["& _ 
                "ClientGroupName] IS NULL) OR ([ClientGroupName] = @Original_ClientGroupName)) AN"& _ 
                "D ((@IsNull_MaturityWithoutCapFloor = 1 AND [MaturityWithoutCapFloor] IS NULL) O"& _ 
                "R ([MaturityWithoutCapFloor] = @Original_MaturityWithoutCapFloor)) AND ((@IsNull"& _ 
                "_EaDweigthedMaturityWithoutCapFloor = 1 AND [EaDweigthedMaturityWithoutCapFloor]"& _ 
                " IS NULL) OR ([EaDweigthedMaturityWithoutCapFloor] = @Original_EaDweigthedMaturi"& _ 
                "tyWithoutCapFloor)) AND ((@IsNull_PDxFinalEaD = 1 AND [PDxFinalEaD] IS NULL) OR "& _ 
                "([PDxFinalEaD] = @Original_PDxFinalEaD)) AND ((@IsNull_LGDfinalEaDweighted = 1 A"& _ 
                "ND [LGDfinalEaDweighted] IS NULL) OR ([LGDfinalEaDweighted] = @Original_LGDfinal"& _ 
                "EaDweighted)) AND ((@IsNull_RiskDate = 1 AND [RiskDate] IS NULL) OR ([RiskDate] "& _ 
                "= @Original_RiskDate)) AND ((@IsNull_IdClientGroup = 1 AND [IdClientGroup] IS NU"& _ 
                "LL) OR ([IdClientGroup] = @Original_IdClientGroup)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obligor_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Product_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Collateral_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Maturity_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Org_Ccy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InternalInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p18", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p17", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p20", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p24", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p23", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p27", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p26", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CoreDefinition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PDxFinalEaD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, [Obligor Rate], [Contract Type], [Product Type], [GL Master / A"& _ 
                "ccount Type], [Counterparty/Issuer/Collateral Name], [Client No], [Contract Coll"& _ 
                "ateral ID], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         [Maturity Date], [Remaining Year(s) to Ma"& _ 
                "turity], [Org Ccy], [Credit Outstanding (Org Ccy)], [Credit Outstanding (EUR Equ"& _ 
                ")], NetCreditOutstandingAmountEUR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         InternalInfo, PD, "& _ 
                "[(1-ER)], [Credit Risk Amount(EUR Equ)], [NetCredit Risk Amount(EUR Equ)], [(1-E"& _ 
                "R_45)], CreditRiskAmountEUREquER45, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NetCreditRiskAmou"& _ 
                "ntEUREquER45, CoreDefinition, ClientGroup, ClientGroupName, MaturityWithoutCapFl"& _ 
                "oor, EaDweigthedMaturityWithoutCapFloor, PDxFinalEaD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " LGDfinalEaDweighted, RiskDate, IdClientGroup"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ScenarioAnalyze_G"& _ 
                "eneralStressTest_Details"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable = New ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_GeneralStressTest_DetailsALLDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ScenarioAnalyze_GeneralStressTest_DetailsALL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Obligor_Rate As String,  _
                    ByVal Original_Contract_Type As String,  _
                    ByVal Original_Product_Type As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_Client_No As String,  _
                    ByVal Original_Contract_Collateral_ID As String,  _
                    ByVal Original_Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p8 As Global.System.Nullable(Of Double),  _
                    ByVal Original_Org_Ccy As String,  _
                    ByVal p11 As Global.System.Nullable(Of Double),  _
                    ByVal p14 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal Original_InternalInfo As String,  _
                    ByVal Original_PD As Global.System.Nullable(Of Double),  _
                    ByVal p17 As Global.System.Nullable(Of Double),  _
                    ByVal p20 As Global.System.Nullable(Of Double),  _
                    ByVal p23 As Global.System.Nullable(Of Double),  _
                    ByVal p26 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CoreDefinition As String,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_Obligor_Rate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Obligor_Rate,String)
            End If
            If (Original_Contract_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Contract_Type,String)
            End If
            If (Original_Product_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Product_Type,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(p5,String)
            End If
            If (Original_Client_No Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Client_No,String)
            End If
            If (Original_Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Contract_Collateral_ID,String)
            End If
            If (Original_Maturity_Date.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Maturity_Date.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p8.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(p8.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_Org_Ccy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Org_Ccy,String)
            End If
            If (p11.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(p11.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(p14.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_InternalInfo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_InternalInfo,String)
            End If
            If (Original_PD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_PD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(p17.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(p20.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(p23.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (p26.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(p26.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreDefinition Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_CoreDefinition,String)
            End If
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_PDxFinalEaD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_IdClientGroup.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_IdClientGroup.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p7 As Global.System.Nullable(Of Double),  _
                    ByVal Org_Ccy As String,  _
                    ByVal p10 As Global.System.Nullable(Of Double),  _
                    ByVal p13 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Global.System.Nullable(Of Double),  _
                    ByVal p16 As Global.System.Nullable(Of Double),  _
                    ByVal p19 As Global.System.Nullable(Of Double),  _
                    ByVal p22 As Global.System.Nullable(Of Double),  _
                    ByVal p25 As Global.System.Nullable(Of Double),  _
                    ByVal CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            If (Obligor_Rate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Obligor_Rate,String)
            End If
            If (Contract_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Contract_Type,String)
            End If
            If (Product_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Product_Type,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(p4,String)
            End If
            If (Client_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Client_No,String)
            End If
            If (Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Contract_Collateral_ID,String)
            End If
            If (Maturity_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Maturity_Date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p7.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Org_Ccy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Org_Ccy,String)
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(p10.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(p13.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (InternalInfo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(InternalInfo,String)
            End If
            If (PD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(p16.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(p19.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(p22.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(p25.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CoreDefinition Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CoreDefinition,String)
            End If
            If (ClientGroup Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ClientGroupName,String)
            End If
            If (MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PDxFinalEaD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IdClientGroup.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(IdClientGroup.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p7 As Global.System.Nullable(Of Double),  _
                    ByVal Org_Ccy As String,  _
                    ByVal p10 As Global.System.Nullable(Of Double),  _
                    ByVal p13 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Global.System.Nullable(Of Double),  _
                    ByVal p16 As Global.System.Nullable(Of Double),  _
                    ByVal p19 As Global.System.Nullable(Of Double),  _
                    ByVal p22 As Global.System.Nullable(Of Double),  _
                    ByVal p25 As Global.System.Nullable(Of Double),  _
                    ByVal CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdClientGroup As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Obligor_Rate As String,  _
                    ByVal Original_Contract_Type As String,  _
                    ByVal Original_Product_Type As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_Client_No As String,  _
                    ByVal Original_Contract_Collateral_ID As String,  _
                    ByVal Original_Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p8 As Global.System.Nullable(Of Double),  _
                    ByVal Original_Org_Ccy As String,  _
                    ByVal p11 As Global.System.Nullable(Of Double),  _
                    ByVal p14 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal Original_InternalInfo As String,  _
                    ByVal Original_PD As Global.System.Nullable(Of Double),  _
                    ByVal p17 As Global.System.Nullable(Of Double),  _
                    ByVal p20 As Global.System.Nullable(Of Double),  _
                    ByVal p23 As Global.System.Nullable(Of Double),  _
                    ByVal p26 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CoreDefinition As String,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            If (Obligor_Rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Obligor_Rate,String)
            End If
            If (Contract_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Contract_Type,String)
            End If
            If (Product_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Product_Type,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(p4,String)
            End If
            If (Client_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Client_No,String)
            End If
            If (Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Contract_Collateral_ID,String)
            End If
            If (Maturity_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Maturity_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p7.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Org_Ccy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Org_Ccy,String)
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(p10.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(p13.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (InternalInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(InternalInfo,String)
            End If
            If (PD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(p16.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(p19.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(p22.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(p25.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CoreDefinition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CoreDefinition,String)
            End If
            If (ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ClientGroupName,String)
            End If
            If (MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PDxFinalEaD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IdClientGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(IdClientGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_ID,Integer)
            If (Original_Obligor_Rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_Obligor_Rate,String)
            End If
            If (Original_Contract_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_Contract_Type,String)
            End If
            If (Original_Product_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_Product_Type,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(p5,String)
            End If
            If (Original_Client_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_Client_No,String)
            End If
            If (Original_Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Contract_Collateral_ID,String)
            End If
            If (Original_Maturity_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_Maturity_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (p8.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(p8.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_Org_Ccy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_Org_Ccy,String)
            End If
            If (p11.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(p11.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(p14.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_InternalInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_InternalInfo,String)
            End If
            If (Original_PD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_PD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(p17.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(p20.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(p23.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (p26.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(p26.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreDefinition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_CoreDefinition,String)
            End If
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_PDxFinalEaD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_IdClientGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_IdClientGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Obligor Rate", "Obligor Rate")
            tableMapping.ColumnMappings.Add("Contract Type", "Contract Type")
            tableMapping.ColumnMappings.Add("Product Type", "Product Type")
            tableMapping.ColumnMappings.Add("GL Master / Account Type", "GL Master / Account Type")
            tableMapping.ColumnMappings.Add("Counterparty/Issuer/Collateral Name", "Counterparty/Issuer/Collateral Name")
            tableMapping.ColumnMappings.Add("Client No", "Client No")
            tableMapping.ColumnMappings.Add("Contract Collateral ID", "Contract Collateral ID")
            tableMapping.ColumnMappings.Add("Maturity Date", "Maturity Date")
            tableMapping.ColumnMappings.Add("Remaining Year(s) to Maturity", "Remaining Year(s) to Maturity")
            tableMapping.ColumnMappings.Add("Org Ccy", "Org Ccy")
            tableMapping.ColumnMappings.Add("Credit Outstanding (Org Ccy)", "Credit Outstanding (Org Ccy)")
            tableMapping.ColumnMappings.Add("Credit Outstanding (EUR Equ)", "Credit Outstanding (EUR Equ)")
            tableMapping.ColumnMappings.Add("NetCreditOutstandingAmountEUR", "NetCreditOutstandingAmountEUR")
            tableMapping.ColumnMappings.Add("InternalInfo", "InternalInfo")
            tableMapping.ColumnMappings.Add("PD", "PD")
            tableMapping.ColumnMappings.Add("(1-ER)", "(1-ER)")
            tableMapping.ColumnMappings.Add("Credit Risk Amount(EUR Equ)", "Credit Risk Amount(EUR Equ)")
            tableMapping.ColumnMappings.Add("NetCredit Risk Amount(EUR Equ)", "NetCredit Risk Amount(EUR Equ)")
            tableMapping.ColumnMappings.Add("(1-ER_45)", "(1-ER_45)")
            tableMapping.ColumnMappings.Add("CreditRiskAmountEUREquER45", "CreditRiskAmountEUREquER45")
            tableMapping.ColumnMappings.Add("NetCreditRiskAmountEUREquER45", "NetCreditRiskAmountEUREquER45")
            tableMapping.ColumnMappings.Add("CoreDefinition", "CoreDefinition")
            tableMapping.ColumnMappings.Add("ClientGroup", "ClientGroup")
            tableMapping.ColumnMappings.Add("ClientGroupName", "ClientGroupName")
            tableMapping.ColumnMappings.Add("MaturityWithoutCapFloor", "MaturityWithoutCapFloor")
            tableMapping.ColumnMappings.Add("EaDweigthedMaturityWithoutCapFloor", "EaDweigthedMaturityWithoutCapFloor")
            tableMapping.ColumnMappings.Add("PDxFinalEaD", "PDxFinalEaD")
            tableMapping.ColumnMappings.Add("LGDfinalEaDweighted", "LGDfinalEaDweighted")
            tableMapping.ColumnMappings.Add("RiskDate", "RiskDate")
            tableMapping.ColumnMappings.Add("IdClientGroup", "IdClientGroup")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ScenarioAnalyze_ConcentrationRiskCHINA_Details] WHERE (([ID] = @Orig"& _ 
                "inal_ID) AND ((@IsNull_Obligor_Rate = 1 AND [Obligor Rate] IS NULL) OR ([Obligor"& _ 
                " Rate] = @Original_Obligor_Rate)) AND ((@IsNull_Contract_Type = 1 AND [Contract "& _ 
                "Type] IS NULL) OR ([Contract Type] = @Original_Contract_Type)) AND ((@IsNull_Pro"& _ 
                "duct_Type = 1 AND [Product Type] IS NULL) OR ([Product Type] = @Original_Product"& _ 
                "_Type)) AND ((@p3 = 1 AND [GL Master / Account Type] IS NULL) OR ([GL Master / A"& _ 
                "ccount Type] = @p2)) AND ((@p6 = 1 AND [Counterparty/Issuer/Collateral Name] IS "& _ 
                "NULL) OR ([Counterparty/Issuer/Collateral Name] = @p5)) AND ((@IsNull_Client_No "& _ 
                "= 1 AND [Client No] IS NULL) OR ([Client No] = @Original_Client_No)) AND ((@IsNu"& _ 
                "ll_Contract_Collateral_ID = 1 AND [Contract Collateral ID] IS NULL) OR ([Contrac"& _ 
                "t Collateral ID] = @Original_Contract_Collateral_ID)) AND ((@IsNull_Maturity_Dat"& _ 
                "e = 1 AND [Maturity Date] IS NULL) OR ([Maturity Date] = @Original_Maturity_Date"& _ 
                ")) AND ((@p9 = 1 AND [Remaining Year(s) to Maturity] IS NULL) OR ([Remaining Yea"& _ 
                "r(s) to Maturity] = @p8)) AND ((@IsNull_Org_Ccy = 1 AND [Org Ccy] IS NULL) OR (["& _ 
                "Org Ccy] = @Original_Org_Ccy)) AND ((@p12 = 1 AND [Credit Outstanding (Org Ccy)]"& _ 
                " IS NULL) OR ([Credit Outstanding (Org Ccy)] = @p11)) AND ((@p15 = 1 AND [Credit"& _ 
                " Outstanding (EUR Equ)] IS NULL) OR ([Credit Outstanding (EUR Equ)] = @p14)) AND"& _ 
                " ((@IsNull_NetCreditOutstandingAmountEUR = 1 AND [NetCreditOutstandingAmountEUR]"& _ 
                " IS NULL) OR ([NetCreditOutstandingAmountEUR] = @Original_NetCreditOutstandingAm"& _ 
                "ountEUR)) AND ((@IsNull_InternalInfo = 1 AND [InternalInfo] IS NULL) OR ([Intern"& _ 
                "alInfo] = @Original_InternalInfo)) AND ((@IsNull_PD = 1 AND [PD] IS NULL) OR ([P"& _ 
                "D] = @Original_PD)) AND ((@p18 = 1 AND [(1-ER)] IS NULL) OR ([(1-ER)] = @p17)) A"& _ 
                "ND ((@p21 = 1 AND [Credit Risk Amount(EUR Equ)] IS NULL) OR ([Credit Risk Amount"& _ 
                "(EUR Equ)] = @p20)) AND ((@p24 = 1 AND [NetCredit Risk Amount(EUR Equ)] IS NULL)"& _ 
                " OR ([NetCredit Risk Amount(EUR Equ)] = @p23)) AND ((@p27 = 1 AND [(1-ER_45)] IS"& _ 
                " NULL) OR ([(1-ER_45)] = @p26)) AND ((@IsNull_CreditRiskAmountEUREquER45 = 1 AND"& _ 
                " [CreditRiskAmountEUREquER45] IS NULL) OR ([CreditRiskAmountEUREquER45] = @Origi"& _ 
                "nal_CreditRiskAmountEUREquER45)) AND ((@IsNull_NetCreditRiskAmountEUREquER45 = 1"& _ 
                " AND [NetCreditRiskAmountEUREquER45] IS NULL) OR ([NetCreditRiskAmountEUREquER45"& _ 
                "] = @Original_NetCreditRiskAmountEUREquER45)) AND ((@IsNull_CoreDefinition = 1 A"& _ 
                "ND [CoreDefinition] IS NULL) OR ([CoreDefinition] = @Original_CoreDefinition)) A"& _ 
                "ND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) OR ([ClientGroup] = @Ori"& _ 
                "ginal_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AND [ClientGroupName] IS N"& _ 
                "ULL) OR ([ClientGroupName] = @Original_ClientGroupName)) AND ((@IsNull_MaturityW"& _ 
                "ithoutCapFloor = 1 AND [MaturityWithoutCapFloor] IS NULL) OR ([MaturityWithoutCa"& _ 
                "pFloor] = @Original_MaturityWithoutCapFloor)) AND ((@IsNull_EaDweigthedMaturityW"& _ 
                "ithoutCapFloor = 1 AND [EaDweigthedMaturityWithoutCapFloor] IS NULL) OR ([EaDwei"& _ 
                "gthedMaturityWithoutCapFloor] = @Original_EaDweigthedMaturityWithoutCapFloor)) A"& _ 
                "ND ((@IsNull_PDxFinalEaD = 1 AND [PDxFinalEaD] IS NULL) OR ([PDxFinalEaD] = @Ori"& _ 
                "ginal_PDxFinalEaD)) AND ((@IsNull_LGDfinalEaDweighted = 1 AND [LGDfinalEaDweight"& _ 
                "ed] IS NULL) OR ([LGDfinalEaDweighted] = @Original_LGDfinalEaDweighted)) AND ((@"& _ 
                "IsNull_RiskDate = 1 AND [RiskDate] IS NULL) OR ([RiskDate] = @Original_RiskDate)"& _ 
                ") AND ((@IsNull_IdClientGroup = 1 AND [IdClientGroup] IS NULL) OR ([IdClientGrou"& _ 
                "p] = @Original_IdClientGroup)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obligor_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Product_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Collateral_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Maturity_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Org_Ccy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InternalInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p18", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p17", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p20", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p24", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p23", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p27", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p26", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CoreDefinition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PDxFinalEaD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ScenarioAnalyze_ConcentrationRiskCHINA_Details] ([Obligor Rate], [Co"& _ 
                "ntract Type], [Product Type], [GL Master / Account Type], [Counterparty/Issuer/C"& _ 
                "ollateral Name], [Client No], [Contract Collateral ID], [Maturity Date], [Remain"& _ 
                "ing Year(s) to Maturity], [Org Ccy], [Credit Outstanding (Org Ccy)], [Credit Out"& _ 
                "standing (EUR Equ)], [NetCreditOutstandingAmountEUR], [InternalInfo], [PD], [(1-"& _ 
                "ER)], [Credit Risk Amount(EUR Equ)], [NetCredit Risk Amount(EUR Equ)], [(1-ER_45"& _ 
                ")], [CreditRiskAmountEUREquER45], [NetCreditRiskAmountEUREquER45], [CoreDefiniti"& _ 
                "on], [ClientGroup], [ClientGroupName], [MaturityWithoutCapFloor], [EaDweigthedMa"& _ 
                "turityWithoutCapFloor], [PDxFinalEaD], [LGDfinalEaDweighted], [RiskDate], [IdCli"& _ 
                "entGroup]) VALUES (@Obligor_Rate, @Contract_Type, @Product_Type, @p1, @p4, @Clie"& _ 
                "nt_No, @Contract_Collateral_ID, @Maturity_Date, @p7, @Org_Ccy, @p10, @p13, @NetC"& _ 
                "reditOutstandingAmountEUR, @InternalInfo, @PD, @p16, @p19, @p22, @p25, @CreditRi"& _ 
                "skAmountEUREquER45, @NetCreditRiskAmountEUREquER45, @CoreDefinition, @ClientGrou"& _ 
                "p, @ClientGroupName, @MaturityWithoutCapFloor, @EaDweigthedMaturityWithoutCapFlo"& _ 
                "or, @PDxFinalEaD, @LGDfinalEaDweighted, @RiskDate, @IdClientGroup)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ScenarioAnalyze_ConcentrationRiskCHINA_Details] SET [Obligor Rate] = @Obl"& _ 
                "igor_Rate, [Contract Type] = @Contract_Type, [Product Type] = @Product_Type, [GL"& _ 
                " Master / Account Type] = @p1, [Counterparty/Issuer/Collateral Name] = @p4, [Cli"& _ 
                "ent No] = @Client_No, [Contract Collateral ID] = @Contract_Collateral_ID, [Matur"& _ 
                "ity Date] = @Maturity_Date, [Remaining Year(s) to Maturity] = @p7, [Org Ccy] = @"& _ 
                "Org_Ccy, [Credit Outstanding (Org Ccy)] = @p10, [Credit Outstanding (EUR Equ)] ="& _ 
                " @p13, [NetCreditOutstandingAmountEUR] = @NetCreditOutstandingAmountEUR, [Intern"& _ 
                "alInfo] = @InternalInfo, [PD] = @PD, [(1-ER)] = @p16, [Credit Risk Amount(EUR Eq"& _ 
                "u)] = @p19, [NetCredit Risk Amount(EUR Equ)] = @p22, [(1-ER_45)] = @p25, [Credit"& _ 
                "RiskAmountEUREquER45] = @CreditRiskAmountEUREquER45, [NetCreditRiskAmountEUREquE"& _ 
                "R45] = @NetCreditRiskAmountEUREquER45, [CoreDefinition] = @CoreDefinition, [Clie"& _ 
                "ntGroup] = @ClientGroup, [ClientGroupName] = @ClientGroupName, [MaturityWithoutC"& _ 
                "apFloor] = @MaturityWithoutCapFloor, [EaDweigthedMaturityWithoutCapFloor] = @EaD"& _ 
                "weigthedMaturityWithoutCapFloor, [PDxFinalEaD] = @PDxFinalEaD, [LGDfinalEaDweigh"& _ 
                "ted] = @LGDfinalEaDweighted, [RiskDate] = @RiskDate, [IdClientGroup] = @IdClient"& _ 
                "Group WHERE (([ID] = @Original_ID) AND ((@IsNull_Obligor_Rate = 1 AND [Obligor R"& _ 
                "ate] IS NULL) OR ([Obligor Rate] = @Original_Obligor_Rate)) AND ((@IsNull_Contra"& _ 
                "ct_Type = 1 AND [Contract Type] IS NULL) OR ([Contract Type] = @Original_Contrac"& _ 
                "t_Type)) AND ((@IsNull_Product_Type = 1 AND [Product Type] IS NULL) OR ([Product"& _ 
                " Type] = @Original_Product_Type)) AND ((@p3 = 1 AND [GL Master / Account Type] I"& _ 
                "S NULL) OR ([GL Master / Account Type] = @p2)) AND ((@p6 = 1 AND [Counterparty/I"& _ 
                "ssuer/Collateral Name] IS NULL) OR ([Counterparty/Issuer/Collateral Name] = @p5)"& _ 
                ") AND ((@IsNull_Client_No = 1 AND [Client No] IS NULL) OR ([Client No] = @Origin"& _ 
                "al_Client_No)) AND ((@IsNull_Contract_Collateral_ID = 1 AND [Contract Collateral"& _ 
                " ID] IS NULL) OR ([Contract Collateral ID] = @Original_Contract_Collateral_ID)) "& _ 
                "AND ((@IsNull_Maturity_Date = 1 AND [Maturity Date] IS NULL) OR ([Maturity Date]"& _ 
                " = @Original_Maturity_Date)) AND ((@p9 = 1 AND [Remaining Year(s) to Maturity] I"& _ 
                "S NULL) OR ([Remaining Year(s) to Maturity] = @p8)) AND ((@IsNull_Org_Ccy = 1 AN"& _ 
                "D [Org Ccy] IS NULL) OR ([Org Ccy] = @Original_Org_Ccy)) AND ((@p12 = 1 AND [Cre"& _ 
                "dit Outstanding (Org Ccy)] IS NULL) OR ([Credit Outstanding (Org Ccy)] = @p11)) "& _ 
                "AND ((@p15 = 1 AND [Credit Outstanding (EUR Equ)] IS NULL) OR ([Credit Outstandi"& _ 
                "ng (EUR Equ)] = @p14)) AND ((@IsNull_NetCreditOutstandingAmountEUR = 1 AND [NetC"& _ 
                "reditOutstandingAmountEUR] IS NULL) OR ([NetCreditOutstandingAmountEUR] = @Origi"& _ 
                "nal_NetCreditOutstandingAmountEUR)) AND ((@IsNull_InternalInfo = 1 AND [Internal"& _ 
                "Info] IS NULL) OR ([InternalInfo] = @Original_InternalInfo)) AND ((@IsNull_PD = "& _ 
                "1 AND [PD] IS NULL) OR ([PD] = @Original_PD)) AND ((@p18 = 1 AND [(1-ER)] IS NUL"& _ 
                "L) OR ([(1-ER)] = @p17)) AND ((@p21 = 1 AND [Credit Risk Amount(EUR Equ)] IS NUL"& _ 
                "L) OR ([Credit Risk Amount(EUR Equ)] = @p20)) AND ((@p24 = 1 AND [NetCredit Risk"& _ 
                " Amount(EUR Equ)] IS NULL) OR ([NetCredit Risk Amount(EUR Equ)] = @p23)) AND ((@"& _ 
                "p27 = 1 AND [(1-ER_45)] IS NULL) OR ([(1-ER_45)] = @p26)) AND ((@IsNull_CreditRi"& _ 
                "skAmountEUREquER45 = 1 AND [CreditRiskAmountEUREquER45] IS NULL) OR ([CreditRisk"& _ 
                "AmountEUREquER45] = @Original_CreditRiskAmountEUREquER45)) AND ((@IsNull_NetCred"& _ 
                "itRiskAmountEUREquER45 = 1 AND [NetCreditRiskAmountEUREquER45] IS NULL) OR ([Net"& _ 
                "CreditRiskAmountEUREquER45] = @Original_NetCreditRiskAmountEUREquER45)) AND ((@I"& _ 
                "sNull_CoreDefinition = 1 AND [CoreDefinition] IS NULL) OR ([CoreDefinition] = @O"& _ 
                "riginal_CoreDefinition)) AND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL"& _ 
                ") OR ([ClientGroup] = @Original_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 "& _ 
                "AND [ClientGroupName] IS NULL) OR ([ClientGroupName] = @Original_ClientGroupName"& _ 
                ")) AND ((@IsNull_MaturityWithoutCapFloor = 1 AND [MaturityWithoutCapFloor] IS NU"& _ 
                "LL) OR ([MaturityWithoutCapFloor] = @Original_MaturityWithoutCapFloor)) AND ((@I"& _ 
                "sNull_EaDweigthedMaturityWithoutCapFloor = 1 AND [EaDweigthedMaturityWithoutCapF"& _ 
                "loor] IS NULL) OR ([EaDweigthedMaturityWithoutCapFloor] = @Original_EaDweigthedM"& _ 
                "aturityWithoutCapFloor)) AND ((@IsNull_PDxFinalEaD = 1 AND [PDxFinalEaD] IS NULL"& _ 
                ") OR ([PDxFinalEaD] = @Original_PDxFinalEaD)) AND ((@IsNull_LGDfinalEaDweighted "& _ 
                "= 1 AND [LGDfinalEaDweighted] IS NULL) OR ([LGDfinalEaDweighted] = @Original_LGD"& _ 
                "finalEaDweighted)) AND ((@IsNull_RiskDate = 1 AND [RiskDate] IS NULL) OR ([RiskD"& _ 
                "ate] = @Original_RiskDate)) AND ((@IsNull_IdClientGroup = 1 AND [IdClientGroup] "& _ 
                "IS NULL) OR ([IdClientGroup] = @Original_IdClientGroup)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obligor_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Product_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Collateral_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Maturity_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Org_Ccy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InternalInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p18", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p17", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p20", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p24", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p23", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p27", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p26", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CoreDefinition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PDxFinalEaD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, [Obligor Rate], [Contract Type], [Product Type], [GL Master / A"& _ 
                "ccount Type], [Counterparty/Issuer/Collateral Name], [Client No], [Contract Coll"& _ 
                "ateral ID], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         [Maturity Date], [Remaining Year(s) to Ma"& _ 
                "turity], [Org Ccy], [Credit Outstanding (Org Ccy)], [Credit Outstanding (EUR Equ"& _ 
                ")], NetCreditOutstandingAmountEUR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         InternalInfo, PD, "& _ 
                "[(1-ER)], [Credit Risk Amount(EUR Equ)], [NetCredit Risk Amount(EUR Equ)], [(1-E"& _ 
                "R_45)], CreditRiskAmountEUREquER45, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NetCreditRiskAmou"& _ 
                "ntEUREquER45, CoreDefinition, ClientGroup, ClientGroupName, MaturityWithoutCapFl"& _ 
                "oor, EaDweigthedMaturityWithoutCapFloor, PDxFinalEaD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " LGDfinalEaDweighted, RiskDate, IdClientGroup"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ScenarioAnalyze_C"& _ 
                "oncentrationRiskCHINA_Details"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable = New ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Obligor_Rate As String,  _
                    ByVal Original_Contract_Type As String,  _
                    ByVal Original_Product_Type As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_Client_No As String,  _
                    ByVal Original_Contract_Collateral_ID As String,  _
                    ByVal Original_Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p8 As Global.System.Nullable(Of Double),  _
                    ByVal Original_Org_Ccy As String,  _
                    ByVal p11 As Global.System.Nullable(Of Double),  _
                    ByVal p14 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal Original_InternalInfo As String,  _
                    ByVal Original_PD As Global.System.Nullable(Of Double),  _
                    ByVal p17 As Global.System.Nullable(Of Double),  _
                    ByVal p20 As Global.System.Nullable(Of Double),  _
                    ByVal p23 As Global.System.Nullable(Of Double),  _
                    ByVal p26 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CoreDefinition As String,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_Obligor_Rate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Obligor_Rate,String)
            End If
            If (Original_Contract_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Contract_Type,String)
            End If
            If (Original_Product_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Product_Type,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(p5,String)
            End If
            If (Original_Client_No Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Client_No,String)
            End If
            If (Original_Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Contract_Collateral_ID,String)
            End If
            If (Original_Maturity_Date.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Maturity_Date.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p8.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(p8.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_Org_Ccy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Org_Ccy,String)
            End If
            If (p11.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(p11.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(p14.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_InternalInfo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_InternalInfo,String)
            End If
            If (Original_PD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_PD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(p17.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(p20.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(p23.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (p26.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(p26.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreDefinition Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_CoreDefinition,String)
            End If
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_PDxFinalEaD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_IdClientGroup.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_IdClientGroup.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p7 As Global.System.Nullable(Of Double),  _
                    ByVal Org_Ccy As String,  _
                    ByVal p10 As Global.System.Nullable(Of Double),  _
                    ByVal p13 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Global.System.Nullable(Of Double),  _
                    ByVal p16 As Global.System.Nullable(Of Double),  _
                    ByVal p19 As Global.System.Nullable(Of Double),  _
                    ByVal p22 As Global.System.Nullable(Of Double),  _
                    ByVal p25 As Global.System.Nullable(Of Double),  _
                    ByVal CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            If (Obligor_Rate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Obligor_Rate,String)
            End If
            If (Contract_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Contract_Type,String)
            End If
            If (Product_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Product_Type,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(p4,String)
            End If
            If (Client_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Client_No,String)
            End If
            If (Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Contract_Collateral_ID,String)
            End If
            If (Maturity_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Maturity_Date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p7.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Org_Ccy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Org_Ccy,String)
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(p10.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(p13.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (InternalInfo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(InternalInfo,String)
            End If
            If (PD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(p16.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(p19.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(p22.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(p25.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CoreDefinition Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CoreDefinition,String)
            End If
            If (ClientGroup Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ClientGroupName,String)
            End If
            If (MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PDxFinalEaD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IdClientGroup.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(IdClientGroup.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p7 As Global.System.Nullable(Of Double),  _
                    ByVal Org_Ccy As String,  _
                    ByVal p10 As Global.System.Nullable(Of Double),  _
                    ByVal p13 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Global.System.Nullable(Of Double),  _
                    ByVal p16 As Global.System.Nullable(Of Double),  _
                    ByVal p19 As Global.System.Nullable(Of Double),  _
                    ByVal p22 As Global.System.Nullable(Of Double),  _
                    ByVal p25 As Global.System.Nullable(Of Double),  _
                    ByVal CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdClientGroup As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Obligor_Rate As String,  _
                    ByVal Original_Contract_Type As String,  _
                    ByVal Original_Product_Type As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_Client_No As String,  _
                    ByVal Original_Contract_Collateral_ID As String,  _
                    ByVal Original_Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p8 As Global.System.Nullable(Of Double),  _
                    ByVal Original_Org_Ccy As String,  _
                    ByVal p11 As Global.System.Nullable(Of Double),  _
                    ByVal p14 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal Original_InternalInfo As String,  _
                    ByVal Original_PD As Global.System.Nullable(Of Double),  _
                    ByVal p17 As Global.System.Nullable(Of Double),  _
                    ByVal p20 As Global.System.Nullable(Of Double),  _
                    ByVal p23 As Global.System.Nullable(Of Double),  _
                    ByVal p26 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CoreDefinition As String,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            If (Obligor_Rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Obligor_Rate,String)
            End If
            If (Contract_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Contract_Type,String)
            End If
            If (Product_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Product_Type,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(p4,String)
            End If
            If (Client_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Client_No,String)
            End If
            If (Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Contract_Collateral_ID,String)
            End If
            If (Maturity_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Maturity_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p7.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Org_Ccy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Org_Ccy,String)
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(p10.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(p13.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (InternalInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(InternalInfo,String)
            End If
            If (PD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(p16.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(p19.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(p22.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(p25.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CoreDefinition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CoreDefinition,String)
            End If
            If (ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ClientGroupName,String)
            End If
            If (MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PDxFinalEaD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IdClientGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(IdClientGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_ID,Integer)
            If (Original_Obligor_Rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_Obligor_Rate,String)
            End If
            If (Original_Contract_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_Contract_Type,String)
            End If
            If (Original_Product_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_Product_Type,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(p5,String)
            End If
            If (Original_Client_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_Client_No,String)
            End If
            If (Original_Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Contract_Collateral_ID,String)
            End If
            If (Original_Maturity_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_Maturity_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (p8.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(p8.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_Org_Ccy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_Org_Ccy,String)
            End If
            If (p11.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(p11.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(p14.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_InternalInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_InternalInfo,String)
            End If
            If (Original_PD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_PD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(p17.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(p20.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(p23.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (p26.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(p26.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreDefinition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_CoreDefinition,String)
            End If
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_PDxFinalEaD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_IdClientGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_IdClientGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ScenarioAnalyze_ConcentrationRiskTBA_DetailsALL"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Obligor Rate", "Obligor Rate")
            tableMapping.ColumnMappings.Add("Contract Type", "Contract Type")
            tableMapping.ColumnMappings.Add("Product Type", "Product Type")
            tableMapping.ColumnMappings.Add("GL Master / Account Type", "GL Master / Account Type")
            tableMapping.ColumnMappings.Add("Counterparty/Issuer/Collateral Name", "Counterparty/Issuer/Collateral Name")
            tableMapping.ColumnMappings.Add("Client No", "Client No")
            tableMapping.ColumnMappings.Add("Contract Collateral ID", "Contract Collateral ID")
            tableMapping.ColumnMappings.Add("Maturity Date", "Maturity Date")
            tableMapping.ColumnMappings.Add("Remaining Year(s) to Maturity", "Remaining Year(s) to Maturity")
            tableMapping.ColumnMappings.Add("Org Ccy", "Org Ccy")
            tableMapping.ColumnMappings.Add("Credit Outstanding (Org Ccy)", "Credit Outstanding (Org Ccy)")
            tableMapping.ColumnMappings.Add("Credit Outstanding (EUR Equ)", "Credit Outstanding (EUR Equ)")
            tableMapping.ColumnMappings.Add("NetCreditOutstandingAmountEUR", "NetCreditOutstandingAmountEUR")
            tableMapping.ColumnMappings.Add("InternalInfo", "InternalInfo")
            tableMapping.ColumnMappings.Add("PD", "PD")
            tableMapping.ColumnMappings.Add("(1-ER)", "(1-ER)")
            tableMapping.ColumnMappings.Add("Credit Risk Amount(EUR Equ)", "Credit Risk Amount(EUR Equ)")
            tableMapping.ColumnMappings.Add("NetCredit Risk Amount(EUR Equ)", "NetCredit Risk Amount(EUR Equ)")
            tableMapping.ColumnMappings.Add("(1-ER_45)", "(1-ER_45)")
            tableMapping.ColumnMappings.Add("CreditRiskAmountEUREquER45", "CreditRiskAmountEUREquER45")
            tableMapping.ColumnMappings.Add("NetCreditRiskAmountEUREquER45", "NetCreditRiskAmountEUREquER45")
            tableMapping.ColumnMappings.Add("CoreDefinition", "CoreDefinition")
            tableMapping.ColumnMappings.Add("ClientGroup", "ClientGroup")
            tableMapping.ColumnMappings.Add("ClientGroupName", "ClientGroupName")
            tableMapping.ColumnMappings.Add("MaturityWithoutCapFloor", "MaturityWithoutCapFloor")
            tableMapping.ColumnMappings.Add("EaDweigthedMaturityWithoutCapFloor", "EaDweigthedMaturityWithoutCapFloor")
            tableMapping.ColumnMappings.Add("PDxFinalEaD", "PDxFinalEaD")
            tableMapping.ColumnMappings.Add("LGDfinalEaDweighted", "LGDfinalEaDweighted")
            tableMapping.ColumnMappings.Add("RiskDate", "RiskDate")
            tableMapping.ColumnMappings.Add("IdClientGroup", "IdClientGroup")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ScenarioAnalyze_ConcentrationRiskTBA_Details] WHERE (([ID] = @Origin"& _ 
                "al_ID) AND ((@IsNull_Obligor_Rate = 1 AND [Obligor Rate] IS NULL) OR ([Obligor R"& _ 
                "ate] = @Original_Obligor_Rate)) AND ((@IsNull_Contract_Type = 1 AND [Contract Ty"& _ 
                "pe] IS NULL) OR ([Contract Type] = @Original_Contract_Type)) AND ((@IsNull_Produ"& _ 
                "ct_Type = 1 AND [Product Type] IS NULL) OR ([Product Type] = @Original_Product_T"& _ 
                "ype)) AND ((@p3 = 1 AND [GL Master / Account Type] IS NULL) OR ([GL Master / Acc"& _ 
                "ount Type] = @p2)) AND ((@p6 = 1 AND [Counterparty/Issuer/Collateral Name] IS NU"& _ 
                "LL) OR ([Counterparty/Issuer/Collateral Name] = @p5)) AND ((@IsNull_Client_No = "& _ 
                "1 AND [Client No] IS NULL) OR ([Client No] = @Original_Client_No)) AND ((@IsNull"& _ 
                "_Contract_Collateral_ID = 1 AND [Contract Collateral ID] IS NULL) OR ([Contract "& _ 
                "Collateral ID] = @Original_Contract_Collateral_ID)) AND ((@IsNull_Maturity_Date "& _ 
                "= 1 AND [Maturity Date] IS NULL) OR ([Maturity Date] = @Original_Maturity_Date))"& _ 
                " AND ((@p9 = 1 AND [Remaining Year(s) to Maturity] IS NULL) OR ([Remaining Year("& _ 
                "s) to Maturity] = @p8)) AND ((@IsNull_Org_Ccy = 1 AND [Org Ccy] IS NULL) OR ([Or"& _ 
                "g Ccy] = @Original_Org_Ccy)) AND ((@p12 = 1 AND [Credit Outstanding (Org Ccy)] I"& _ 
                "S NULL) OR ([Credit Outstanding (Org Ccy)] = @p11)) AND ((@p15 = 1 AND [Credit O"& _ 
                "utstanding (EUR Equ)] IS NULL) OR ([Credit Outstanding (EUR Equ)] = @p14)) AND ("& _ 
                "(@IsNull_NetCreditOutstandingAmountEUR = 1 AND [NetCreditOutstandingAmountEUR] I"& _ 
                "S NULL) OR ([NetCreditOutstandingAmountEUR] = @Original_NetCreditOutstandingAmou"& _ 
                "ntEUR)) AND ((@IsNull_InternalInfo = 1 AND [InternalInfo] IS NULL) OR ([Internal"& _ 
                "Info] = @Original_InternalInfo)) AND ((@IsNull_PD = 1 AND [PD] IS NULL) OR ([PD]"& _ 
                " = @Original_PD)) AND ((@p18 = 1 AND [(1-ER)] IS NULL) OR ([(1-ER)] = @p17)) AND"& _ 
                " ((@p21 = 1 AND [Credit Risk Amount(EUR Equ)] IS NULL) OR ([Credit Risk Amount(E"& _ 
                "UR Equ)] = @p20)) AND ((@p24 = 1 AND [NetCredit Risk Amount(EUR Equ)] IS NULL) O"& _ 
                "R ([NetCredit Risk Amount(EUR Equ)] = @p23)) AND ((@p27 = 1 AND [(1-ER_45)] IS N"& _ 
                "ULL) OR ([(1-ER_45)] = @p26)) AND ((@IsNull_CreditRiskAmountEUREquER45 = 1 AND ["& _ 
                "CreditRiskAmountEUREquER45] IS NULL) OR ([CreditRiskAmountEUREquER45] = @Origina"& _ 
                "l_CreditRiskAmountEUREquER45)) AND ((@IsNull_NetCreditRiskAmountEUREquER45 = 1 A"& _ 
                "ND [NetCreditRiskAmountEUREquER45] IS NULL) OR ([NetCreditRiskAmountEUREquER45] "& _ 
                "= @Original_NetCreditRiskAmountEUREquER45)) AND ((@IsNull_CoreDefinition = 1 AND"& _ 
                " [CoreDefinition] IS NULL) OR ([CoreDefinition] = @Original_CoreDefinition)) AND"& _ 
                " ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) OR ([ClientGroup] = @Origi"& _ 
                "nal_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AND [ClientGroupName] IS NUL"& _ 
                "L) OR ([ClientGroupName] = @Original_ClientGroupName)) AND ((@IsNull_MaturityWit"& _ 
                "houtCapFloor = 1 AND [MaturityWithoutCapFloor] IS NULL) OR ([MaturityWithoutCapF"& _ 
                "loor] = @Original_MaturityWithoutCapFloor)) AND ((@IsNull_EaDweigthedMaturityWit"& _ 
                "houtCapFloor = 1 AND [EaDweigthedMaturityWithoutCapFloor] IS NULL) OR ([EaDweigt"& _ 
                "hedMaturityWithoutCapFloor] = @Original_EaDweigthedMaturityWithoutCapFloor)) AND"& _ 
                " ((@IsNull_PDxFinalEaD = 1 AND [PDxFinalEaD] IS NULL) OR ([PDxFinalEaD] = @Origi"& _ 
                "nal_PDxFinalEaD)) AND ((@IsNull_LGDfinalEaDweighted = 1 AND [LGDfinalEaDweighted"& _ 
                "] IS NULL) OR ([LGDfinalEaDweighted] = @Original_LGDfinalEaDweighted)) AND ((@Is"& _ 
                "Null_RiskDate = 1 AND [RiskDate] IS NULL) OR ([RiskDate] = @Original_RiskDate)) "& _ 
                "AND ((@IsNull_IdClientGroup = 1 AND [IdClientGroup] IS NULL) OR ([IdClientGroup]"& _ 
                " = @Original_IdClientGroup)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obligor_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Product_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Collateral_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Maturity_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Org_Ccy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InternalInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p18", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p17", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p20", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p24", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p23", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p27", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p26", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CoreDefinition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PDxFinalEaD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ScenarioAnalyze_ConcentrationRiskTBA_Details] ([Obligor Rate], [Cont"& _ 
                "ract Type], [Product Type], [GL Master / Account Type], [Counterparty/Issuer/Col"& _ 
                "lateral Name], [Client No], [Contract Collateral ID], [Maturity Date], [Remainin"& _ 
                "g Year(s) to Maturity], [Org Ccy], [Credit Outstanding (Org Ccy)], [Credit Outst"& _ 
                "anding (EUR Equ)], [NetCreditOutstandingAmountEUR], [InternalInfo], [PD], [(1-ER"& _ 
                ")], [Credit Risk Amount(EUR Equ)], [NetCredit Risk Amount(EUR Equ)], [(1-ER_45)]"& _ 
                ", [CreditRiskAmountEUREquER45], [NetCreditRiskAmountEUREquER45], [CoreDefinition"& _ 
                "], [ClientGroup], [ClientGroupName], [MaturityWithoutCapFloor], [EaDweigthedMatu"& _ 
                "rityWithoutCapFloor], [PDxFinalEaD], [LGDfinalEaDweighted], [RiskDate], [IdClien"& _ 
                "tGroup]) VALUES (@Obligor_Rate, @Contract_Type, @Product_Type, @p1, @p4, @Client"& _ 
                "_No, @Contract_Collateral_ID, @Maturity_Date, @p7, @Org_Ccy, @p10, @p13, @NetCre"& _ 
                "ditOutstandingAmountEUR, @InternalInfo, @PD, @p16, @p19, @p22, @p25, @CreditRisk"& _ 
                "AmountEUREquER45, @NetCreditRiskAmountEUREquER45, @CoreDefinition, @ClientGroup,"& _ 
                " @ClientGroupName, @MaturityWithoutCapFloor, @EaDweigthedMaturityWithoutCapFloor"& _ 
                ", @PDxFinalEaD, @LGDfinalEaDweighted, @RiskDate, @IdClientGroup)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ScenarioAnalyze_ConcentrationRiskTBA_Details] SET [Obligor Rate] = @Oblig"& _ 
                "or_Rate, [Contract Type] = @Contract_Type, [Product Type] = @Product_Type, [GL M"& _ 
                "aster / Account Type] = @p1, [Counterparty/Issuer/Collateral Name] = @p4, [Clien"& _ 
                "t No] = @Client_No, [Contract Collateral ID] = @Contract_Collateral_ID, [Maturit"& _ 
                "y Date] = @Maturity_Date, [Remaining Year(s) to Maturity] = @p7, [Org Ccy] = @Or"& _ 
                "g_Ccy, [Credit Outstanding (Org Ccy)] = @p10, [Credit Outstanding (EUR Equ)] = @"& _ 
                "p13, [NetCreditOutstandingAmountEUR] = @NetCreditOutstandingAmountEUR, [Internal"& _ 
                "Info] = @InternalInfo, [PD] = @PD, [(1-ER)] = @p16, [Credit Risk Amount(EUR Equ)"& _ 
                "] = @p19, [NetCredit Risk Amount(EUR Equ)] = @p22, [(1-ER_45)] = @p25, [CreditRi"& _ 
                "skAmountEUREquER45] = @CreditRiskAmountEUREquER45, [NetCreditRiskAmountEUREquER4"& _ 
                "5] = @NetCreditRiskAmountEUREquER45, [CoreDefinition] = @CoreDefinition, [Client"& _ 
                "Group] = @ClientGroup, [ClientGroupName] = @ClientGroupName, [MaturityWithoutCap"& _ 
                "Floor] = @MaturityWithoutCapFloor, [EaDweigthedMaturityWithoutCapFloor] = @EaDwe"& _ 
                "igthedMaturityWithoutCapFloor, [PDxFinalEaD] = @PDxFinalEaD, [LGDfinalEaDweighte"& _ 
                "d] = @LGDfinalEaDweighted, [RiskDate] = @RiskDate, [IdClientGroup] = @IdClientGr"& _ 
                "oup WHERE (([ID] = @Original_ID) AND ((@IsNull_Obligor_Rate = 1 AND [Obligor Rat"& _ 
                "e] IS NULL) OR ([Obligor Rate] = @Original_Obligor_Rate)) AND ((@IsNull_Contract"& _ 
                "_Type = 1 AND [Contract Type] IS NULL) OR ([Contract Type] = @Original_Contract_"& _ 
                "Type)) AND ((@IsNull_Product_Type = 1 AND [Product Type] IS NULL) OR ([Product T"& _ 
                "ype] = @Original_Product_Type)) AND ((@p3 = 1 AND [GL Master / Account Type] IS "& _ 
                "NULL) OR ([GL Master / Account Type] = @p2)) AND ((@p6 = 1 AND [Counterparty/Iss"& _ 
                "uer/Collateral Name] IS NULL) OR ([Counterparty/Issuer/Collateral Name] = @p5)) "& _ 
                "AND ((@IsNull_Client_No = 1 AND [Client No] IS NULL) OR ([Client No] = @Original"& _ 
                "_Client_No)) AND ((@IsNull_Contract_Collateral_ID = 1 AND [Contract Collateral I"& _ 
                "D] IS NULL) OR ([Contract Collateral ID] = @Original_Contract_Collateral_ID)) AN"& _ 
                "D ((@IsNull_Maturity_Date = 1 AND [Maturity Date] IS NULL) OR ([Maturity Date] ="& _ 
                " @Original_Maturity_Date)) AND ((@p9 = 1 AND [Remaining Year(s) to Maturity] IS "& _ 
                "NULL) OR ([Remaining Year(s) to Maturity] = @p8)) AND ((@IsNull_Org_Ccy = 1 AND "& _ 
                "[Org Ccy] IS NULL) OR ([Org Ccy] = @Original_Org_Ccy)) AND ((@p12 = 1 AND [Credi"& _ 
                "t Outstanding (Org Ccy)] IS NULL) OR ([Credit Outstanding (Org Ccy)] = @p11)) AN"& _ 
                "D ((@p15 = 1 AND [Credit Outstanding (EUR Equ)] IS NULL) OR ([Credit Outstanding"& _ 
                " (EUR Equ)] = @p14)) AND ((@IsNull_NetCreditOutstandingAmountEUR = 1 AND [NetCre"& _ 
                "ditOutstandingAmountEUR] IS NULL) OR ([NetCreditOutstandingAmountEUR] = @Origina"& _ 
                "l_NetCreditOutstandingAmountEUR)) AND ((@IsNull_InternalInfo = 1 AND [InternalIn"& _ 
                "fo] IS NULL) OR ([InternalInfo] = @Original_InternalInfo)) AND ((@IsNull_PD = 1 "& _ 
                "AND [PD] IS NULL) OR ([PD] = @Original_PD)) AND ((@p18 = 1 AND [(1-ER)] IS NULL)"& _ 
                " OR ([(1-ER)] = @p17)) AND ((@p21 = 1 AND [Credit Risk Amount(EUR Equ)] IS NULL)"& _ 
                " OR ([Credit Risk Amount(EUR Equ)] = @p20)) AND ((@p24 = 1 AND [NetCredit Risk A"& _ 
                "mount(EUR Equ)] IS NULL) OR ([NetCredit Risk Amount(EUR Equ)] = @p23)) AND ((@p2"& _ 
                "7 = 1 AND [(1-ER_45)] IS NULL) OR ([(1-ER_45)] = @p26)) AND ((@IsNull_CreditRisk"& _ 
                "AmountEUREquER45 = 1 AND [CreditRiskAmountEUREquER45] IS NULL) OR ([CreditRiskAm"& _ 
                "ountEUREquER45] = @Original_CreditRiskAmountEUREquER45)) AND ((@IsNull_NetCredit"& _ 
                "RiskAmountEUREquER45 = 1 AND [NetCreditRiskAmountEUREquER45] IS NULL) OR ([NetCr"& _ 
                "editRiskAmountEUREquER45] = @Original_NetCreditRiskAmountEUREquER45)) AND ((@IsN"& _ 
                "ull_CoreDefinition = 1 AND [CoreDefinition] IS NULL) OR ([CoreDefinition] = @Ori"& _ 
                "ginal_CoreDefinition)) AND ((@IsNull_ClientGroup = 1 AND [ClientGroup] IS NULL) "& _ 
                "OR ([ClientGroup] = @Original_ClientGroup)) AND ((@IsNull_ClientGroupName = 1 AN"& _ 
                "D [ClientGroupName] IS NULL) OR ([ClientGroupName] = @Original_ClientGroupName))"& _ 
                " AND ((@IsNull_MaturityWithoutCapFloor = 1 AND [MaturityWithoutCapFloor] IS NULL"& _ 
                ") OR ([MaturityWithoutCapFloor] = @Original_MaturityWithoutCapFloor)) AND ((@IsN"& _ 
                "ull_EaDweigthedMaturityWithoutCapFloor = 1 AND [EaDweigthedMaturityWithoutCapFlo"& _ 
                "or] IS NULL) OR ([EaDweigthedMaturityWithoutCapFloor] = @Original_EaDweigthedMat"& _ 
                "urityWithoutCapFloor)) AND ((@IsNull_PDxFinalEaD = 1 AND [PDxFinalEaD] IS NULL) "& _ 
                "OR ([PDxFinalEaD] = @Original_PDxFinalEaD)) AND ((@IsNull_LGDfinalEaDweighted = "& _ 
                "1 AND [LGDfinalEaDweighted] IS NULL) OR ([LGDfinalEaDweighted] = @Original_LGDfi"& _ 
                "nalEaDweighted)) AND ((@IsNull_RiskDate = 1 AND [RiskDate] IS NULL) OR ([RiskDat"& _ 
                "e] = @Original_RiskDate)) AND ((@IsNull_IdClientGroup = 1 AND [IdClientGroup] IS"& _ 
                " NULL) OR ([IdClientGroup] = @Original_IdClientGroup)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p16", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p19", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p22", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p25", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Obligor_Rate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Obligor_Rate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Obligor Rate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Product_Type", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Product_Type", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Product Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GL Master / Account Type", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counterparty/Issuer/Collateral Name", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Client_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Client_No", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Contract_Collateral_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Contract_Collateral_ID", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Contract Collateral ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Maturity_Date", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Maturity_Date", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Maturity Date", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remaining Year(s) to Maturity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Org_Ccy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Org_Ccy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Org Ccy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (Org Ccy)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Outstanding (EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditOutstandingAmountEUR", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditOutstandingAmountEUR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InternalInfo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InternalInfo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InternalInfo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p18", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p17", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p21", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p20", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Credit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p24", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p23", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCredit Risk Amount(EUR Equ)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p27", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p26", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "(1-ER_45)", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NetCreditRiskAmountEUREquER45", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NetCreditRiskAmountEUREquER45", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CoreDefinition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CoreDefinition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CoreDefinition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroup", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientGroupName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientGroupName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientGroupName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EaDweigthedMaturityWithoutCapFloor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EaDweigthedMaturityWithoutCapFloor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PDxFinalEaD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PDxFinalEaD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PDxFinalEaD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LGDfinalEaDweighted", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LGDfinalEaDweighted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RiskDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RiskDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RiskDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IdClientGroup", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdClientGroup", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.PS_TOOL_DX.My.MySettings.Default.PS_TOOL_DX_SQL_Client_ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, [Obligor Rate], [Contract Type], [Product Type], [GL Master / A"& _ 
                "ccount Type], [Counterparty/Issuer/Collateral Name], [Client No], [Contract Coll"& _ 
                "ateral ID], "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         [Maturity Date], [Remaining Year(s) to Ma"& _ 
                "turity], [Org Ccy], [Credit Outstanding (Org Ccy)], [Credit Outstanding (EUR Equ"& _ 
                ")], NetCreditOutstandingAmountEUR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         InternalInfo, PD, "& _ 
                "[(1-ER)], [Credit Risk Amount(EUR Equ)], [NetCredit Risk Amount(EUR Equ)], [(1-E"& _ 
                "R_45)], CreditRiskAmountEUREquER45, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NetCreditRiskAmou"& _ 
                "ntEUREquER45, CoreDefinition, ClientGroup, ClientGroupName, MaturityWithoutCapFl"& _ 
                "oor, EaDweigthedMaturityWithoutCapFloor, PDxFinalEaD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " LGDfinalEaDweighted, RiskDate, IdClientGroup"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ScenarioAnalyze_C"& _ 
                "oncentrationRiskTBA_Details"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable = New ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As ScenarioAnalysisDataset.ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            Return Me.Adapter.Update(dataSet, "ScenarioAnalyze_ConcentrationRiskTBA_DetailsALL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Obligor_Rate As String,  _
                    ByVal Original_Contract_Type As String,  _
                    ByVal Original_Product_Type As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_Client_No As String,  _
                    ByVal Original_Contract_Collateral_ID As String,  _
                    ByVal Original_Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p8 As Global.System.Nullable(Of Double),  _
                    ByVal Original_Org_Ccy As String,  _
                    ByVal p11 As Global.System.Nullable(Of Double),  _
                    ByVal p14 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal Original_InternalInfo As String,  _
                    ByVal Original_PD As Global.System.Nullable(Of Double),  _
                    ByVal p17 As Global.System.Nullable(Of Double),  _
                    ByVal p20 As Global.System.Nullable(Of Double),  _
                    ByVal p23 As Global.System.Nullable(Of Double),  _
                    ByVal p26 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CoreDefinition As String,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_Obligor_Rate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Obligor_Rate,String)
            End If
            If (Original_Contract_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Contract_Type,String)
            End If
            If (Original_Product_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Product_Type,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(p5,String)
            End If
            If (Original_Client_No Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Client_No,String)
            End If
            If (Original_Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Contract_Collateral_ID,String)
            End If
            If (Original_Maturity_Date.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Maturity_Date.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p8.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(p8.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_Org_Ccy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Org_Ccy,String)
            End If
            If (p11.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(p11.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(p14.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_InternalInfo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_InternalInfo,String)
            End If
            If (Original_PD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_PD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(p17.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(p20.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(p23.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (p26.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(p26.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreDefinition Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_CoreDefinition,String)
            End If
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_PDxFinalEaD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_IdClientGroup.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_IdClientGroup.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p7 As Global.System.Nullable(Of Double),  _
                    ByVal Org_Ccy As String,  _
                    ByVal p10 As Global.System.Nullable(Of Double),  _
                    ByVal p13 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Global.System.Nullable(Of Double),  _
                    ByVal p16 As Global.System.Nullable(Of Double),  _
                    ByVal p19 As Global.System.Nullable(Of Double),  _
                    ByVal p22 As Global.System.Nullable(Of Double),  _
                    ByVal p25 As Global.System.Nullable(Of Double),  _
                    ByVal CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            If (Obligor_Rate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Obligor_Rate,String)
            End If
            If (Contract_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Contract_Type,String)
            End If
            If (Product_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Product_Type,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(p4,String)
            End If
            If (Client_No Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Client_No,String)
            End If
            If (Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Contract_Collateral_ID,String)
            End If
            If (Maturity_Date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Maturity_Date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(p7.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Org_Ccy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Org_Ccy,String)
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(p10.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(p13.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (InternalInfo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(InternalInfo,String)
            End If
            If (PD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(p16.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(p19.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(p22.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(p25.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CoreDefinition Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CoreDefinition,String)
            End If
            If (ClientGroup Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ClientGroupName,String)
            End If
            If (MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PDxFinalEaD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IdClientGroup.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(IdClientGroup.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Obligor_Rate As String,  _
                    ByVal Contract_Type As String,  _
                    ByVal Product_Type As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Client_No As String,  _
                    ByVal Contract_Collateral_ID As String,  _
                    ByVal Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p7 As Global.System.Nullable(Of Double),  _
                    ByVal Org_Ccy As String,  _
                    ByVal p10 As Global.System.Nullable(Of Double),  _
                    ByVal p13 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal InternalInfo As String,  _
                    ByVal PD As Global.System.Nullable(Of Double),  _
                    ByVal p16 As Global.System.Nullable(Of Double),  _
                    ByVal p19 As Global.System.Nullable(Of Double),  _
                    ByVal p22 As Global.System.Nullable(Of Double),  _
                    ByVal p25 As Global.System.Nullable(Of Double),  _
                    ByVal CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal CoreDefinition As String,  _
                    ByVal ClientGroup As String,  _
                    ByVal ClientGroupName As String,  _
                    ByVal MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal IdClientGroup As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Obligor_Rate As String,  _
                    ByVal Original_Contract_Type As String,  _
                    ByVal Original_Product_Type As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_Client_No As String,  _
                    ByVal Original_Contract_Collateral_ID As String,  _
                    ByVal Original_Maturity_Date As Global.System.Nullable(Of Date),  _
                    ByVal p8 As Global.System.Nullable(Of Double),  _
                    ByVal Original_Org_Ccy As String,  _
                    ByVal p11 As Global.System.Nullable(Of Double),  _
                    ByVal p14 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditOutstandingAmountEUR As Global.System.Nullable(Of Double),  _
                    ByVal Original_InternalInfo As String,  _
                    ByVal Original_PD As Global.System.Nullable(Of Double),  _
                    ByVal p17 As Global.System.Nullable(Of Double),  _
                    ByVal p20 As Global.System.Nullable(Of Double),  _
                    ByVal p23 As Global.System.Nullable(Of Double),  _
                    ByVal p26 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_NetCreditRiskAmountEUREquER45 As Global.System.Nullable(Of Double),  _
                    ByVal Original_CoreDefinition As String,  _
                    ByVal Original_ClientGroup As String,  _
                    ByVal Original_ClientGroupName As String,  _
                    ByVal Original_MaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_EaDweigthedMaturityWithoutCapFloor As Global.System.Nullable(Of Double),  _
                    ByVal Original_PDxFinalEaD As Global.System.Nullable(Of Double),  _
                    ByVal Original_LGDfinalEaDweighted As Global.System.Nullable(Of Double),  _
                    ByVal Original_RiskDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IdClientGroup As Global.System.Nullable(Of Integer)) As Integer
            If (Obligor_Rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Obligor_Rate,String)
            End If
            If (Contract_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Contract_Type,String)
            End If
            If (Product_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Product_Type,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(p4,String)
            End If
            If (Client_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Client_No,String)
            End If
            If (Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Contract_Collateral_ID,String)
            End If
            If (Maturity_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Maturity_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (p7.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(p7.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Org_Ccy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Org_Ccy,String)
            End If
            If (p10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(p10.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (p13.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(p13.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (InternalInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(InternalInfo,String)
            End If
            If (PD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (p16.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(p16.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (p19.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(p19.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (p22.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(p22.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (p25.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(p25.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CoreDefinition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CoreDefinition,String)
            End If
            If (ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ClientGroup,String)
            End If
            If (ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ClientGroupName,String)
            End If
            If (MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (PDxFinalEaD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IdClientGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(IdClientGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_ID,Integer)
            If (Original_Obligor_Rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_Obligor_Rate,String)
            End If
            If (Original_Contract_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_Contract_Type,String)
            End If
            If (Original_Product_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_Product_Type,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(p5,String)
            End If
            If (Original_Client_No Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_Client_No,String)
            End If
            If (Original_Contract_Collateral_ID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Contract_Collateral_ID,String)
            End If
            If (Original_Maturity_Date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_Maturity_Date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (p8.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(p8.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_Org_Ccy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_Org_Ccy,String)
            End If
            If (p11.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(p11.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (p14.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(p14.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditOutstandingAmountEUR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_NetCreditOutstandingAmountEUR.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_InternalInfo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_InternalInfo,String)
            End If
            If (Original_PD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_PD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (p17.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(p17.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (p20.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(p20.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (p23.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(p23.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (p26.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(p26.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_CreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_NetCreditRiskAmountEUREquER45.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_NetCreditRiskAmountEUREquER45.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_CoreDefinition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_CoreDefinition,String)
            End If
            If (Original_ClientGroup Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_ClientGroup,String)
            End If
            If (Original_ClientGroupName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_ClientGroupName,String)
            End If
            If (Original_MaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_MaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_EaDweigthedMaturityWithoutCapFloor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_EaDweigthedMaturityWithoutCapFloor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_PDxFinalEaD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_PDxFinalEaD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_LGDfinalEaDweighted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_LGDfinalEaDweighted.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_RiskDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_RiskDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_IdClientGroup.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_IdClientGroup.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _sCENARIO_ANALYZES_DATETableAdapter As SCENARIO_ANALYZES_DATETableAdapter
        
        Private _scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter As ScenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter
        
        Private _scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter
        
        Private _scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter
        
        Private _scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter As ScenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter
        
        Private _scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter As ScenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter
        
        Private _scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter As ScenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter
        
        Private _scenarioAnalyze_GeneralStressTest_DateTableAdapter As ScenarioAnalyze_GeneralStressTest_DateTableAdapter
        
        Private _scenarioAnalyze_GeneralStressTest_DetailsTableAdapter As ScenarioAnalyze_GeneralStressTest_DetailsTableAdapter
        
        Private _scenarioAnalyze_GeneralStressTest_TotalsTableAdapter As ScenarioAnalyze_GeneralStressTest_TotalsTableAdapter
        
        Private _scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter As ScenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter
        
        Private _scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter
        
        Private _scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property SCENARIO_ANALYZES_DATETableAdapter() As SCENARIO_ANALYZES_DATETableAdapter
            Get
                Return Me._sCENARIO_ANALYZES_DATETableAdapter
            End Get
            Set
                Me._sCENARIO_ANALYZES_DATETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ScenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter() As ScenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter
            Get
                Return Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter
            End Get
            Set
                Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ScenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter() As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter
            Get
                Return Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter
            End Get
            Set
                Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ScenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter() As ScenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter
            Get
                Return Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter
            End Get
            Set
                Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ScenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter() As ScenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter
            Get
                Return Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter
            End Get
            Set
                Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ScenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter() As ScenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter
            Get
                Return Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter
            End Get
            Set
                Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ScenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter() As ScenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter
            Get
                Return Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter
            End Get
            Set
                Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ScenarioAnalyze_GeneralStressTest_DateTableAdapter() As ScenarioAnalyze_GeneralStressTest_DateTableAdapter
            Get
                Return Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter
            End Get
            Set
                Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ScenarioAnalyze_GeneralStressTest_DetailsTableAdapter() As ScenarioAnalyze_GeneralStressTest_DetailsTableAdapter
            Get
                Return Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter
            End Get
            Set
                Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ScenarioAnalyze_GeneralStressTest_TotalsTableAdapter() As ScenarioAnalyze_GeneralStressTest_TotalsTableAdapter
            Get
                Return Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter
            End Get
            Set
                Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ScenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter() As ScenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter
            Get
                Return Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter
            End Get
            Set
                Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter() As ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter
            Get
                Return Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter
            End Get
            Set
                Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter() As ScenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter
            Get
                Return Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter
            End Get
            Set
                Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._sCENARIO_ANALYZES_DATETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._sCENARIO_ANALYZES_DATETableAdapter.Connection) Is Nothing)) Then
                    Return Me._sCENARIO_ANALYZES_DATETableAdapter.Connection
                End If
                If ((Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Connection) Is Nothing)) Then
                    Return Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Connection
                End If
                If ((Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Connection
                End If
                If ((Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Connection
                End If
                If ((Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Connection) Is Nothing)) Then
                    Return Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Connection
                End If
                If ((Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Connection
                End If
                If ((Not (Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Connection
                End If
                If ((Not (Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Connection) Is Nothing)) Then
                    Return Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Connection
                End If
                If ((Not (Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Connection
                End If
                If ((Not (Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Connection
                End If
                If ((Not (Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Connection) Is Nothing)) Then
                    Return Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Connection
                End If
                If ((Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Connection) Is Nothing)) Then
                    Return Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Connection
                End If
                If ((Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Connection) Is Nothing)) Then
                    Return Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._sCENARIO_ANALYZES_DATETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As ScenarioAnalysisDataset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._sCENARIO_ANALYZES_DATETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.SCENARIO_ANALYZES_DATE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._sCENARIO_ANALYZES_DATETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskCHINA_Date.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskTBA_Date.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_GeneralStressTest_Date.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskCHINA_Totals.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskTBA_Totals.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_GeneralStressTest_Totals.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskCHINA_Details.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskTBA_Details.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_GeneralStressTest_Details.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_GeneralStressTest_DetailsALL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As ScenarioAnalysisDataset, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._sCENARIO_ANALYZES_DATETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.SCENARIO_ANALYZES_DATE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._sCENARIO_ANALYZES_DATETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskCHINA_Date.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskTBA_Date.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_GeneralStressTest_Date.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskCHINA_Totals.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskTBA_Totals.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_GeneralStressTest_Totals.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskCHINA_Details.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskTBA_Details.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_GeneralStressTest_Details.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_GeneralStressTest_DetailsALL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As ScenarioAnalysisDataset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskTBA_DetailsAll.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskCHINA_DetailsALL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_GeneralStressTest_DetailsALL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_GeneralStressTest_Details.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskTBA_Details.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskCHINA_Details.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_GeneralStressTest_Totals.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskTBA_Totals.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskCHINA_Totals.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_GeneralStressTest_Date.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskTBA_Date.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ScenarioAnalyze_ConcentrationRiskCHINA_Date.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._sCENARIO_ANALYZES_DATETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.SCENARIO_ANALYZES_DATE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._sCENARIO_ANALYZES_DATETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As ScenarioAnalysisDataset) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._sCENARIO_ANALYZES_DATETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._sCENARIO_ANALYZES_DATETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._sCENARIO_ANALYZES_DATETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._sCENARIO_ANALYZES_DATETableAdapter, Me._sCENARIO_ANALYZES_DATETableAdapter.Connection)
                    Me._sCENARIO_ANALYZES_DATETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._sCENARIO_ANALYZES_DATETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._sCENARIO_ANALYZES_DATETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._sCENARIO_ANALYZES_DATETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._sCENARIO_ANALYZES_DATETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter, Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Connection)
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter, Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Connection)
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter, Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Connection)
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter, Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Connection)
                    Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter, Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Connection)
                    Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter, Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Connection)
                    Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter, Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Connection)
                    Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter, Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Connection)
                    Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter, Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Connection)
                    Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter, Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Connection)
                    Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter, Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Connection)
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter, Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Connection)
                    Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._sCENARIO_ANALYZES_DATETableAdapter) Is Nothing) Then
                    Me._sCENARIO_ANALYZES_DATETableAdapter.Connection = CType(revertConnections(Me._sCENARIO_ANALYZES_DATETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._sCENARIO_ANALYZES_DATETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter) Is Nothing) Then
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Connection = CType(revertConnections(Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_DateTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter) Is Nothing) Then
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Connection = CType(revertConnections(Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter) Is Nothing) Then
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Connection = CType(revertConnections(Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_TotalsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter) Is Nothing) Then
                    Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Connection = CType(revertConnections(Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskTBA_DateTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter) Is Nothing) Then
                    Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Connection = CType(revertConnections(Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter) Is Nothing) Then
                    Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Connection = CType(revertConnections(Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskTBA_TotalsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter) Is Nothing) Then
                    Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Connection = CType(revertConnections(Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_GeneralStressTest_DateTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter) Is Nothing) Then
                    Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Connection = CType(revertConnections(Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_GeneralStressTest_DetailsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter) Is Nothing) Then
                    Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Connection = CType(revertConnections(Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_GeneralStressTest_TotalsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter) Is Nothing) Then
                    Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Connection = CType(revertConnections(Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_GeneralStressTest_DetailsALLTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter) Is Nothing) Then
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Connection = CType(revertConnections(Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskCHINA_DetailsALLTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter) Is Nothing) Then
                    Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Connection = CType(revertConnections(Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._scenarioAnalyze_ConcentrationRiskTBA_DetailsAllTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
